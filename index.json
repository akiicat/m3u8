{"repository_name":"m3u8","body":"# m3u8\n\n[![Build Status](https://github.com/akiicat/m3u8/actions/workflows/crystal.yml/badge.svg)](https://github.com/akiicat/m3u8/actions)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://akiicat.github.io/m3u8)\n[![GitHub release](https://img.shields.io/github/release/akiicat/m3u8.svg)](https://github.com/akiicat/m3u8/releases)\n\nGenerate and parse m3u8 playlists for HTTP Live Streaming (HLS).\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  m3u8:\n    github: akiicat/m3u8\n```\n\n## Usage\n\n```crystal\nrequire \"m3u8\"\n\nmodule App\n  include M3U8\nend\n```\n\n[Document](https://akiicat.github.io/m3u8/)\n\n### Generate\n\n```crystal\nplaylist = Playlist.new\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test_01.ts\")\nplaylist.to_s\n```\n\n```\n#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXT-X-TARGETDURATION:10\n#EXTINF:10.991,\ntest_01.ts\n#EXT-X-ENDLIST\n```\n\n### Parse\n\n```crystal\nfile = File.read \"spec/playlists/master.m3u8\"\nplaylist = Playlist.parse(file)\nplaylist.master? # => true\n```\n\n## Development\n\n### Supported Playlist Tags\n\n#### Basic Tags\n- [x] EXTM3U\n- [x] EXT-X-VERSION\n\n#### media segment tags\n- [x] EXTINF\n- [x] EXT-X-BYTERANGE\n- [x] EXT-X-DISCONTINUITY\n- [x] EXT-X-KEY\n- [x] EXT-X-MAP\n- [x] EXT-X-PROGRAM-DATE-TIME\n- [x] EXT-X-DATERANGE\n\n#### Media Playlist Tags\n- [x] EXT-X-TARGETDURATION\n- [x] EXT-X-MEDIA-SEQUENCE\n- [x] EXT-X-DISCONTINUITY-SEQUENCE\n- [x] EXT-X-ENDLIST\n- [x] EXT-X-PLAYLIST-TYPE\n- [x] EXT-X-I-FRAMES-ONLY\n- [x] EXT-X-ALLOW-CACHE (was removed in protocol version 7)\n\n#### Master Playlist Tags\n- [x] EXT-X-MEDIA\n- [x] EXT-X-STREAM-INF\n- [x] EXT-X-I-FRAME-STREAM-INF\n- [x] EXT-X-SESSION-DATA\n- [x] EXT-X-SESSION-KEY\n\n#### Media or Master Playlist Tags\n- [x] EXT-X-INDEPENDENT-SEGMENTS\n- [x] EXT-X-START\n\n#### Experimental Tags\n- [ ] EXT-X-CUE-OUT\n- [ ] EXT-X-CUE-OUT-CONT\n- [ ] EXT-X-CUE-IN\n- [ ] EXT-X-CUE-SPAN\n- [ ] EXT-OATCLS-SCTE35\n\n## Contributing\n\n1. Fork it ( https://github.com/akiicat/m3u8/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Akiicat](https://github.com/akiicat) Akiicat - creator, maintainer\n","program":{"html_id":"m3u8/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"m3u8","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"m3u8/M3U8","path":"M3U8.html","kind":"module","full_name":"M3U8","name":"M3U8","abstract":false,"ancestors":[{"html_id":"m3u8/M3U8/Protocol","kind":"module","full_name":"M3U8::Protocol","name":"Protocol"}],"locations":[{"filename":"src/m3u8.cr","line_number":46,"url":null},{"filename":"src/m3u8/byte_range.cr","line_number":1,"url":null},{"filename":"src/m3u8/codecs.cr","line_number":1,"url":null},{"filename":"src/m3u8/concern.cr","line_number":1,"url":null},{"filename":"src/m3u8/date_range_item.cr","line_number":3,"url":null},{"filename":"src/m3u8/discontinuity_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/encryptable.cr","line_number":1,"url":null},{"filename":"src/m3u8/error.cr","line_number":1,"url":null},{"filename":"src/m3u8/key_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/map_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/media_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/parser.cr","line_number":1,"url":null},{"filename":"src/m3u8/playback_start.cr","line_number":1,"url":null},{"filename":"src/m3u8/playlist.cr","line_number":1,"url":null},{"filename":"src/m3u8/playlist_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/protocol.cr","line_number":1,"url":null},{"filename":"src/m3u8/scanner.cr","line_number":1,"url":null},{"filename":"src/m3u8/segment_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/session_data_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/session_key_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/time_item.cr","line_number":1,"url":null},{"filename":"src/m3u8/version.cr","line_number":1,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.0.2\""}],"included_modules":[{"html_id":"m3u8/M3U8/Protocol","kind":"module","full_name":"M3U8::Protocol","name":"Protocol"}],"doc":"This `M3U8` module provides functionality for working with m3u8 playlists in HTTP Live Streaming (HLS).\n\nIn HLS, a `Playlist` can be one of two types:\n  - A Master Playlist, which defines a set of Variant Streams using tags.\n  - A Media Playlist, which lists individual media segments.\n\nThe following tags and their corresponding classes or properties are supported:\n\n**Basic Tags:**\n- `EXTM3U`: Represents the start of a playlist (handled by the `Playlist` class).\n- `EXT-X-VERSION`: Indicates the protocol compatibility version (`Playlist#version`).\n\n**Media Playlist Tags:**\n- `EXT-X-TARGETDURATION`: The maximum segment duration (`Playlist#target`).\n- `EXT-X-MEDIA-SEQUENCE`: The sequence number of the first segment (`Playlist#sequence`).\n- `EXT-X-DISCONTINUITY-SEQUENCE`: The discontinuity sequence number (`Playlist#discontinuity_sequence`).\n- `EXT-X-ENDLIST`: Indicates that no more segments will be added (`Playlist.footer`).\n- `EXT-X-PLAYLIST-TYPE`: Specifies the playlist type (e.g., VOD or EVENT; `Playlist#type`).\n- `EXT-X-I-FRAMES-ONLY`: Marks an I-frame only playlist (`Playlist#iframes_only`).\n- `EXT-X-ALLOW-CACHE`: Indicates whether caching is allowed (`Playlist#cache`, deprecated in protocol version 7).\n\n**Media Segment Tags:**\n- `EXTINF`: Provides segment duration and an optional comment (`SegmentItem`).\n- `EXT-X-BYTERANGE`: Specifies a sub-range of a media segment (`ByteRange`).\n- `EXT-X-DISCONTINUITY`: Marks a discontinuity between segments (`DiscontinuityItem`).\n- `EXT-X-KEY`: Contains encryption key attributes (`KeyItem`).\n- `EXT-X-MAP`: Specifies the media initialization section (`MapItem`).\n- `EXT-X-PROGRAM-DATE-TIME`: Associates an absolute date and time with a segment (`TimeItem`).\n- `EXT-X-DATERANGE`: Associates a date range with a set of attributes (`DateRangeItem`).\n\n**Master Playlist Tags:**\n- `EXT-X-MEDIA`: Specifies alternative renditions (`MediaItem`).\n- `EXT-X-STREAM-INF`: Defines a Variant Stream (`PlaylistItem` with `PlaylistItem#iframe` set to false).\n- `EXT-X-I-FRAME-STREAM-INF`: Defines an I-frame only Variant Stream (`PlaylistItem` with `PlaylistItem#iframe` set to true).\n- `EXT-X-SESSION-DATA`: Contains session-level metadata (`SessionDataItem`).\n- `EXT-X-SESSION-KEY`: Contains session-level encryption key attributes (`SessionKeyItem`).\n\n**Common Tags (Applicable to both Media and Master Playlists):**\n- `EXT-X-INDEPENDENT-SEGMENTS`: Indicates that each segment can be decoded independently (`Playlist#independent_segments`).\n- `EXT-X-START`: Specifies the preferred start point for playback (`PlaybackStart`).","summary":"<p>This <code><a href=\"M3U8.html\">M3U8</a></code> module provides functionality for working with m3u8 playlists in HTTP Live Streaming (HLS).</p>","types":[{"html_id":"m3u8/M3U8/ByteRange","path":"M3U8/ByteRange.html","kind":"class","full_name":"M3U8::ByteRange","name":"ByteRange","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/byte_range.cr","line_number":26,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`ByteRange` represents a sub-range of a resource.\n\nIn HTTP Live Streaming, the `EXT-X-BYTERANGE` tag ([RFC 8216, Section 4.3.2.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.2))\nindicates that a Media Segment is a sub-range of the resource identified by its URI.\n\nIts format is:\n\n```txt\n#EXT-X-BYTERANGE:<length>[@<start>]\n```\n\nwhere:\n  - `length` is a decimal integer indicating the length of the sub-range in bytes.\n  - `start` (optional) is a decimal integer indicating the start of the sub-range\n    as a byte offset from the beginning of the resource.\n\nIf `start` is not provided, then the sub-range begins at the next byte following the\nsub-range of the previous Media Segment. In that case, a previous Media Segment\nMUST appear in the Playlist and be a sub-range of the same media resource; otherwise,\nthe Media Segment is undefined and the client MUST fail to parse the Playlist.\n\nNote: A Media Segment without an `EXT-X-BYTERANGE` tag consists of the entire\nresource identified by its URI. Use of the `EXT-X-BYTERANGE` tag requires a\ncompatibility version number of 4 or greater.","summary":"<p><code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> represents a sub-range of a resource.</p>","class_methods":[{"html_id":"parse(item=nil)-class-method","name":"parse","doc":"Parses the given item into a `ByteRange`.\n\nExamples:\n\n```\nByteRange.parse(ByteRange.new(length: 4500, start: 600))\nByteRange.parse({length: 4500, start: 600})\nByteRange.parse(\"4500@600\")\nByteRange.parse\n```","summary":"<p>Parses the given item into a <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code>.</p>","abstract":false,"args":[{"name":"item","default_value":"nil","external_name":"item","restriction":""}],"args_string":"(item = nil)","args_html":"(item = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/byte_range.cr","line_number":45,"url":null},"def":{"name":"parse","args":[{"name":"item","default_value":"nil","external_name":"item","restriction":""}],"visibility":"Public","body":"case item\nwhen String\n  new(item)\nwhen NamedTuple\n  new(item)\nwhen ByteRange\n  item\nelse\n  new\nend"}}],"constructors":[{"html_id":"new(string:String)-class-method","name":"new","doc":"Creates a new `ByteRange` from a string.\n\nExamples:\n\n```\nByteRange.new(\"4500@600\")\nByteRange.new(\"4500\")\n```","summary":"<p>Creates a new <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> from a string.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : String)","location":{"filename":"src/m3u8/byte_range.cr","line_number":62,"url":null},"def":{"name":"new","args":[{"name":"string","external_name":"string","restriction":"String"}],"visibility":"Public","body":"if string.empty?\n  return new\nend\nvalues = (string.split('@')).map(&.to_i)\nnew(values[0]?, values[1]?)\n"}},{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Creates a new `ByteRange` from a NamedTuple.\n\nExamples:\n\n```\noptions = {length: 4500, start: 600}\nByteRange.new(options)\nByteRange.new(length: 4500, start: 600)\n```","summary":"<p>Creates a new <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> from a NamedTuple.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/byte_range.cr","line_number":78,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(length: params[:length]?, start: params[:start]?)"}},{"html_id":"new(length:Int32|Nil=nil,start:Int32|Nil=nil)-class-method","name":"new","doc":"Creates an empty `ByteRange`.\n\nExample:\n\n```\nByteRange.new\n```","summary":"<p>Creates an empty <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code>.</p>","abstract":false,"args":[{"name":"length","default_value":"nil","external_name":"length","restriction":"::Int32 | ::Nil"},{"name":"start","default_value":"nil","external_name":"start","restriction":"::Int32 | ::Nil"}],"args_string":"(length : Int32 | Nil = nil, start : Int32 | Nil = nil)","args_html":"(length : Int32 | Nil = <span class=\"n\">nil</span>, start : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/byte_range.cr","line_number":92,"url":null},"def":{"name":"new","args":[{"name":"length","default_value":"nil","external_name":"length","restriction":"::Int32 | ::Nil"},{"name":"start","default_value":"nil","external_name":"start","restriction":"::Int32 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(length, start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other:String)-instance-method","name":"==","doc":"Compares this `ByteRange` with a String.\n\nThe `ByteRange` is equal to the string if their string representations match.\n\nExample:\n\n```\nleft = ByteRange.new(length: 4500, start: 600)\nright = \"4500@600\"\nleft == right # => true\n```","summary":"<p>Compares this <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> with a String.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"String"}],"args_string":"(other : String)","args_html":"(other : String)","location":{"filename":"src/m3u8/byte_range.cr","line_number":144,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"String"}],"visibility":"Public","body":"to_s == other"}},{"html_id":"==(other:NamedTuple)-instance-method","name":"==","doc":"Compares this `ByteRange` with a NamedTuple.\n\nIt creates a new `ByteRange` from the NamedTuple and compares their string\nrepresentations.\n\nExample:\n\n```\nleft = ByteRange.new(length: 4500, start: 600)\nright = {length: 4500, start: 600}\nleft == right # => true\n```","summary":"<p>Compares this <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> with a NamedTuple.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"NamedTuple"}],"args_string":"(other : NamedTuple)","args_html":"(other : NamedTuple)","location":{"filename":"src/m3u8/byte_range.cr","line_number":160,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"NamedTuple"}],"visibility":"Public","body":"to_s == (ByteRange.new(other)).to_s"}},{"html_id":"==(other:ByteRange)-instance-method","name":"==","doc":"Compares this `ByteRange` with another `ByteRange`.\n\nTwo `ByteRange`s are equal if their string representations are equal.\n\nExample:\n\n```\nleft = ByteRange.new(length: 4500, start: 600)\nright = ByteRange.new(length: 4500, start: 600)\nleft == right # => true\n```","summary":"<p>Compares this <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> with another <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"ByteRange"}],"args_string":"(other : ByteRange)","args_html":"(other : <a href=\"../M3U8/ByteRange.html\">ByteRange</a>)","location":{"filename":"src/m3u8/byte_range.cr","line_number":175,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"ByteRange"}],"visibility":"Public","body":"to_s == other.to_s"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns whether the `ByteRange` is empty.\n\nA `ByteRange` is considered empty if its length is `nil` or zero.\n\nExamples:\n\n```\nbyterange = ByteRange.new\nbyterange.empty? # => true\nbyterange = ByteRange.new(length: 0)\nbyterange.empty? # => true\nbyterange.length = 4500\nbyterange.empty? # => false\n```","summary":"<p>Returns whether the <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> is empty.</p>","abstract":false,"location":{"filename":"src/m3u8/byte_range.cr","line_number":109,"url":null},"def":{"name":"empty?","visibility":"Public","body":"length = @length\nlength.nil? || length.zero?\n"}},{"html_id":"length:Int32|Nil-instance-method","name":"length","doc":"The length of the sub-range in bytes.","summary":"<p>The length of the sub-range in bytes.</p>","abstract":false,"location":{"filename":"src/m3u8/byte_range.cr","line_number":30,"url":null},"def":{"name":"length","return_type":"Int32 | ::Nil","visibility":"Public","body":"@length"}},{"html_id":"length=(length:Int32|Nil)-instance-method","name":"length=","doc":"The length of the sub-range in bytes.","summary":"<p>The length of the sub-range in bytes.</p>","abstract":false,"args":[{"name":"length","external_name":"length","restriction":"Int32 | ::Nil"}],"args_string":"(length : Int32 | Nil)","args_html":"(length : Int32 | Nil)","location":{"filename":"src/m3u8/byte_range.cr","line_number":30,"url":null},"def":{"name":"length=","args":[{"name":"length","external_name":"length","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@length = length"}},{"html_id":"start:Int32|Nil-instance-method","name":"start","doc":"The start of the sub-range as a byte offset from the beginning of the resource.","summary":"<p>The start of the sub-range as a byte offset from the beginning of the resource.</p>","abstract":false,"location":{"filename":"src/m3u8/byte_range.cr","line_number":33,"url":null},"def":{"name":"start","return_type":"Int32 | ::Nil","visibility":"Public","body":"@start"}},{"html_id":"start=(start:Int32|Nil)-instance-method","name":"start=","doc":"The start of the sub-range as a byte offset from the beginning of the resource.","summary":"<p>The start of the sub-range as a byte offset from the beginning of the resource.</p>","abstract":false,"args":[{"name":"start","external_name":"start","restriction":"Int32 | ::Nil"}],"args_string":"(start : Int32 | Nil)","args_html":"(start : Int32 | Nil)","location":{"filename":"src/m3u8/byte_range.cr","line_number":33,"url":null},"def":{"name":"start=","args":[{"name":"start","external_name":"start","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@start = start"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of the `ByteRange`.\n\nThe representation is the length, followed by the start (if provided)\nseparated by an `@`.\n\nExamples:\n\n```\nbyterange = ByteRange.new(length: 4500, start: 600)\nbyterange.to_s # => \"4500@600\"\nbyterange = ByteRange.new(length: 4500)\nbyterange.to_s # => \"4500\"\nbyterange = ByteRange.new\nbyterange.to_s # => \"\"\n```","summary":"<p>Returns a string representation of the <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code>.</p>","abstract":false,"location":{"filename":"src/m3u8/byte_range.cr","line_number":129,"url":null},"def":{"name":"to_s","visibility":"Public","body":"attributes.join('@')"}}]},{"html_id":"m3u8/M3U8/Codecs","path":"M3U8/Codecs.html","kind":"class","full_name":"M3U8::Codecs","name":"Codecs","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/codecs.cr","line_number":58,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`Codecs` represents the *CODECS* attribute used in HTTP Live Streaming (HLS).\n\nIn HLS ([RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216)), the *CODECS* attribute (further detailed in [RFC 6381](https://datatracker.ietf.org/doc/html/rfc6381))\nis a comma-separated list of codec identifiers that describe the media\ncontained in a Media Segment. This attribute is used in the `EXT-X-STREAM-INF`\ntag to indicate what codecs (and profiles) are required to play back a stream.\n\n```txt\n#EXT-X-STREAM-INF:BANDWIDTH=65000,CODECS=\"mp4a.40.5\"\naudio-only.m3u8\n```\n\nThere are two primary ways to use `Codecs`:\n\n1. If the `codecs` property is set, that pre-computed string is used directly.\n\n2. Otherwise, the `codecs` string is constructed by deriving the video and audio\n   codec codes from the remaining properties:\n\n   - For audio, the `audio_codec` property is mapped as follows:\n\n```txt\n        \"aac-lc\"  => \"mp4a.40.2\"  (AAC low complexity)\n        \"he-aac\"  => \"mp4a.40.5\"  (HE-AAC)\n        \"mp3\"     => \"mp4a.40.34\" (MPEG-1 Audio Layer 3)\n```\n\n   - For video, both the `profile` and `level` properties must be provided.\n     For example, for H.264 (AVC) video the following mappings are used:\n\n```txt\n        Baseline Profile:\n          Level 3.0 => \"avc1.66.30\"\n          Level 3.1 => \"avc1.42001f\"\n\n        Main Profile:\n          Level 3.0 => \"avc1.77.30\"\n          Level 3.1 => \"avc1.4d001f\"\n          Level 4.0 => \"avc1.4d0028\"\n          Level 4.1 => \"avc1.4d0029\"\n\n        High Profile:\n          Level 3.1 => \"avc1.64001f\"\n          Level 4.0 => \"avc1.640028\"\n          Level 4.1 => \"avc1.640029\"\n```\n\nWhen constructing the codec string:\n- If a video codec is expected (i.e. both `profile` and `level` are provided) but the\n  mapping is not recognized, no codec string is output.\n- Likewise, if an `audio_codec` is specified but unrecognized, the codec string is empty.\n\nFor more details on these mappings and the overall semantics of HLS, refer to:\n  - [RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) (HTTP Live Streaming) [Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2)\n  - [RFC 6381](https://datatracker.ietf.org/doc/html/rfc6381) (The 'Codecs' and 'Profiles' Parameters for \"Bucket\" Media Types)\n  - [The HTTP Live Streaming FAQ](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StreamingMediaGuide/FrequentlyAskedQuestions/FrequentlyAskedQuestions.html) (which discusses recommended values for stream playback)","summary":"<p><code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> represents the <em>CODECS</em> attribute used in HTTP Live Streaming (HLS).</p>","constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Creates a new `Codecs` instance from a NamedTuple.\n\nExamples:\n\n```\noptions = {audio_codec: \"aac-lc\"}\nCodecs.new(options)\nCodecs.new(audio_codec: \"aac-lc\")\n```","summary":"<p>Creates a new <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance from a NamedTuple.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/codecs.cr","line_number":116,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(codecs: params[:codecs]?, audio_codec: params[:audio_codec]?, level: params[:level]?, profile: params[:profile]?)"}},{"html_id":"new(codecs:Nil|String=nil,audio_codec:Nil|String=nil,level=nil,profile:Nil|String=nil)-class-method","name":"new","doc":"Initializes a new `Codecs` instance.\nParameters with `@` prefix are automatically assigned as instance variables.\n\nParameters:\n- `codecs`: A pre-computed codec string (if provided, it is used directly).\n- `audio_codec`: The name of the audio codec (e.g. `aac-lc`, `he-aac`, `mp3`).\n- `level`: The numeric level used to determine the video codec.\n- `profile`: The video profile (e.g. `baseline`, `main`, `high`).\n\nExample:\n\n```\nCodecs.new\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance.</p>","abstract":false,"args":[{"name":"codecs","default_value":"nil","external_name":"codecs","restriction":"::Nil | ::String"},{"name":"audio_codec","default_value":"nil","external_name":"audio_codec","restriction":"::Nil | ::String"},{"name":"level","default_value":"nil","external_name":"level","restriction":""},{"name":"profile","default_value":"nil","external_name":"profile","restriction":"::Nil | ::String"}],"args_string":"(codecs : Nil | String = nil, audio_codec : Nil | String = nil, level = nil, profile : Nil | String = nil)","args_html":"(codecs : Nil | String = <span class=\"n\">nil</span>, audio_codec : Nil | String = <span class=\"n\">nil</span>, level = <span class=\"n\">nil</span>, profile : Nil | String = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/codecs.cr","line_number":139,"url":null},"def":{"name":"new","args":[{"name":"codecs","default_value":"nil","external_name":"codecs","restriction":"::Nil | ::String"},{"name":"audio_codec","default_value":"nil","external_name":"audio_codec","restriction":"::Nil | ::String"},{"name":"level","default_value":"nil","external_name":"level","restriction":""},{"name":"profile","default_value":"nil","external_name":"profile","restriction":"::Nil | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(codecs, audio_codec, level, profile)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other:Codecs)-instance-method","name":"==","doc":"Compares this `Codecs` instance with another `Codecs` instance.\n\nEquality is determined by comparing their *CODECS* strings.\n\nExample:\n\n```\nleft = Codecs.new(audio_codec: \"aac-lc\")\nright = Codecs.new(audio_codec: \"aac-lc\")\nleft == right # => true\n```","summary":"<p>Compares this <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance with another <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Codecs"}],"args_string":"(other : Codecs)","args_html":"(other : <a href=\"../M3U8/Codecs.html\">Codecs</a>)","location":{"filename":"src/m3u8/codecs.cr","line_number":202,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Codecs"}],"visibility":"Public","body":"to_s == other.to_s"}},{"html_id":"==(other:String)-instance-method","name":"==","doc":"Compares this `Codecs` instance with a String.\n\nThe instance is considered equal to the string if its *CODECS* string matches.\n\nExample:\n\n```\nleft = Codecs.new(audio_codec: \"aac-lc\")\nright = \"aac-lc\"\nleft == right # => true\n```","summary":"<p>Compares this <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance with a String.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"String"}],"args_string":"(other : String)","args_html":"(other : String)","location":{"filename":"src/m3u8/codecs.cr","line_number":217,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"String"}],"visibility":"Public","body":"to_s == other"}},{"html_id":"audio_codec:String|Nil-instance-method","name":"audio_codec","doc":"Audio codec identifier (e.g., `aac-lc`)","summary":"<p>Audio codec identifier (e.g., <code>aac-lc</code>)</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":65,"url":null},"def":{"name":"audio_codec","return_type":"String | ::Nil","visibility":"Public","body":"@audio_codec"}},{"html_id":"audio_codec=(audio_codec:String|Nil)-instance-method","name":"audio_codec=","doc":"Audio codec identifier (e.g., `aac-lc`)","summary":"<p>Audio codec identifier (e.g., <code>aac-lc</code>)</p>","abstract":false,"args":[{"name":"audio_codec","external_name":"audio_codec","restriction":"String | ::Nil"}],"args_string":"(audio_codec : String | Nil)","args_html":"(audio_codec : String | Nil)","location":{"filename":"src/m3u8/codecs.cr","line_number":65,"url":null},"def":{"name":"audio_codec=","args":[{"name":"audio_codec","external_name":"audio_codec","restriction":"String | ::Nil"}],"visibility":"Public","body":"@audio_codec = audio_codec"}},{"html_id":"codecs:String|Nil-instance-method","name":"codecs","doc":"Predefined codec string","summary":"<p>Predefined codec string</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":62,"url":null},"def":{"name":"codecs","return_type":"String | ::Nil","visibility":"Public","body":"@codecs"}},{"html_id":"codecs=(codecs:String|Nil)-instance-method","name":"codecs=","doc":"Predefined codec string","summary":"<p>Predefined codec string</p>","abstract":false,"args":[{"name":"codecs","external_name":"codecs","restriction":"String | ::Nil"}],"args_string":"(codecs : String | Nil)","args_html":"(codecs : String | Nil)","location":{"filename":"src/m3u8/codecs.cr","line_number":62,"url":null},"def":{"name":"codecs=","args":[{"name":"codecs","external_name":"codecs","restriction":"String | ::Nil"}],"visibility":"Public","body":"@codecs = codecs"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns true if the `codecs` string is empty.\n\nExamples:\n\n```\ncodecs = Codecs.new\ncodecs.empty? # => true\ncodecs.audio_codec = \"aac-lc\"\ncodecs.empty? # => false\n```","summary":"<p>Returns true if the <code><a href=\"../M3U8/Codecs.html#codecs%3AString%7CNil-instance-method\">#codecs</a></code> string is empty.</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":187,"url":null},"def":{"name":"empty?","visibility":"Public","body":"to_s.empty?"}},{"html_id":"level:Float64|Nil-instance-method","name":"level","doc":"Video level (e.g., `3.0`, `3.1`, etc.)\n\nThe video `codecs` string is determined from both the video `profile` and `level`.\n\n- `baseline` Profile:\n  - Level `3.0` => `avc1.66.30`\n  - Level `3.1` => `avc1.42001f`\n\n- `main` Profile:\n  - Level `3.0` => `avc1.77.30`\n  - Level `3.1` => `avc1.4d001f`\n  - Level `4.0` => `avc1.4d0028`\n  - Level `4.1` => `avc1.4d0029`\n\n- `high` Profile:\n  - Level `3.1` => `avc1.64001f`\n  - Level `4.0` => `avc1.640028`\n  - Level `4.1` => `avc1.640029`","summary":"<p>Video level (e.g., <code>3.0</code>, <code>3.1</code>, etc.)</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":85,"url":null},"def":{"name":"level","return_type":"Float64 | ::Nil","visibility":"Public","body":"@level"}},{"html_id":"level=(level:Float64|Nil)-instance-method","name":"level=","doc":"Video level (e.g., `3.0`, `3.1`, etc.)\n\nThe video `codecs` string is determined from both the video `profile` and `level`.\n\n- `baseline` Profile:\n  - Level `3.0` => `avc1.66.30`\n  - Level `3.1` => `avc1.42001f`\n\n- `main` Profile:\n  - Level `3.0` => `avc1.77.30`\n  - Level `3.1` => `avc1.4d001f`\n  - Level `4.0` => `avc1.4d0028`\n  - Level `4.1` => `avc1.4d0029`\n\n- `high` Profile:\n  - Level `3.1` => `avc1.64001f`\n  - Level `4.0` => `avc1.640028`\n  - Level `4.1` => `avc1.640029`","summary":"<p>Video level (e.g., <code>3.0</code>, <code>3.1</code>, etc.)</p>","abstract":false,"args":[{"name":"level","external_name":"level","restriction":"Float64 | ::Nil"}],"args_string":"(level : Float64 | Nil)","args_html":"(level : Float64 | Nil)","location":{"filename":"src/m3u8/codecs.cr","line_number":85,"url":null},"def":{"name":"level=","args":[{"name":"level","external_name":"level","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@level = level"}},{"html_id":"profile:String|Nil-instance-method","name":"profile","doc":"Video profile (e.g., `baseline`, `main`, `high`)\n\nThe video `codecs` string is determined from both the video `profile` and `level`.\n\n- `baseline` Profile:\n  - Level `3.0` => `avc1.66.30`\n  - Level `3.1` => `avc1.42001f`\n\n- `main` Profile:\n  - Level `3.0` => `avc1.77.30`\n  - Level `3.1` => `avc1.4d001f`\n  - Level `4.0` => `avc1.4d0028`\n  - Level `4.1` => `avc1.4d0029`\n\n- `high` Profile:\n  - Level `3.1` => `avc1.64001f`\n  - Level `4.0` => `avc1.640028`\n  - Level `4.1` => `avc1.640029`","summary":"<p>Video profile (e.g., <code>baseline</code>, <code>main</code>, <code>high</code>)</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":105,"url":null},"def":{"name":"profile","return_type":"String | ::Nil","visibility":"Public","body":"@profile"}},{"html_id":"profile=(profile:String|Nil)-instance-method","name":"profile=","doc":"Video profile (e.g., `baseline`, `main`, `high`)\n\nThe video `codecs` string is determined from both the video `profile` and `level`.\n\n- `baseline` Profile:\n  - Level `3.0` => `avc1.66.30`\n  - Level `3.1` => `avc1.42001f`\n\n- `main` Profile:\n  - Level `3.0` => `avc1.77.30`\n  - Level `3.1` => `avc1.4d001f`\n  - Level `4.0` => `avc1.4d0028`\n  - Level `4.1` => `avc1.4d0029`\n\n- `high` Profile:\n  - Level `3.1` => `avc1.64001f`\n  - Level `4.0` => `avc1.640028`\n  - Level `4.1` => `avc1.640029`","summary":"<p>Video profile (e.g., <code>baseline</code>, <code>main</code>, <code>high</code>)</p>","abstract":false,"args":[{"name":"profile","external_name":"profile","restriction":"String | ::Nil"}],"args_string":"(profile : String | Nil)","args_html":"(profile : String | Nil)","location":{"filename":"src/m3u8/codecs.cr","line_number":105,"url":null},"def":{"name":"profile=","args":[{"name":"profile","external_name":"profile","restriction":"String | ::Nil"}],"visibility":"Public","body":"@profile = profile"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the *CODECS* string for this instance.\n\nIf a pre-computed `codecs` string is provided, it is returned directly.\nOtherwise, the method constructs the `codecs` string by computing the video codec\n(from `profile` and `level`) and the audio codec (from `audio_codec`).\n\nExamples:\n\n```\nCodecs.new(codecs: \"test\").to_s                                      # => \"test\"\nCodecs.new(audio_codec: \"aac-lc\").to_s                               # => \"mp4a.40.2\"\nCodecs.new(profile: \"baseline\", level: 3.0, audio_codec: \"mp3\").to_s # => \"avc1.66.30,mp4a.40.34\"\n```","summary":"<p>Returns the <em>CODECS</em> string for this instance.</p>","abstract":false,"location":{"filename":"src/m3u8/codecs.cr","line_number":159,"url":null},"def":{"name":"to_s","visibility":"Public","body":"if codecs\n  return codecs || \"\"\nend\nvideo_codec_string = video_codec_code\nif (profile && level) && video_codec_string.nil?\n  return \"\"\nend\naudio_codec_string = audio_codec_code\nif audio_codec && audio_codec_string.nil?\n  return \"\"\nend\n[video_codec_string, audio_codec_string].compact.join(',')\n"}}]},{"html_id":"m3u8/M3U8/DateRangeItem","path":"M3U8/DateRangeItem.html","kind":"class","full_name":"M3U8::DateRangeItem","name":"DateRangeItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/date_range_item.cr","line_number":27,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`DateRangeItem` encapsulates an `EXT-X-DATERANGE` tag in an HLS playlist.\n\nAs defined in [RFC 8216, Section 4.3.2.7](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.7),\nthe `XT-X-DATERANGE` tag is used to associate a specific date range with a collection of\nattribute/value pairs. It is typically used for signaling events\nsuch as ad insertion, content segmentation, or SCTE-35 splice points.\n\nExample tag format:\n\n```txt\n#EXT-X-DATERANGE:ID=\"...\",CLASS=\"...\",START-DATE=\"...\",END-DATE=\"...\",...\n```\n\nThe `EXT-X-DATERANGE` tag stores the following attributes:\n- **ID** (required): A unique identifier for the date range.\n- **CLASS** (optional): A client-defined category for the date range.\n- **START-DATE** (required): The starting date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.\n- **END-DATE** (optional): The ending date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.\n- **DURATION** (optional): The duration of the date range, in seconds.\n- **PLANNED-DURATION** (optional): The expected duration, in seconds.\n- **SCTE35-CMD, SCTE35-OUT, SCTE35-IN** (optional): Attributes carrying SCTE-35 splice data.\n- **END-ON-NEXT** (optional): A boolean flag that, if true, outputs `\"END-ON-NEXT=YES\"`.\n- **Client-specific attributes** (optional): Any additional attributes with keys starting with `X-`.","summary":"<p><code><a href=\"../M3U8/DateRangeItem.html\">DateRangeItem</a></code> encapsulates an <code>EXT-X-DATERANGE</code> tag in an HLS playlist.</p>","class_methods":[{"html_id":"parse(text:String)-class-method","name":"parse","doc":"Parses a complete `EXT-X-DATERANGE` tag line and returns a new `DateRangeItem`.\n\nThe tag line is expected to follow the format defined in [RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216):\n\n```txt\n  #EXT-X-DATERANGE:ID=\"...\",CLASS=\"...\",START-DATE=\"...\",END-DATE=\"...\",...\n```\n\nExamples:\n\n```\ntext = %(#EXT-X-DATERANGE:ID=\"test_id\",CLASS=\"test_class\",\\\n       START-DATE=\"2014-03-05T11:15:00Z\",END-DATE=\"2014-03-05T11:16:00Z\",\\\n       DURATION=60.1,PLANNED-DURATION=59.993,X-CUSTOM=45.3,\\\n       SCTE35-CMD=0xFC002F0000000000FF2,SCTE35-OUT=0xFC002F0000000000FF0,\\\n       SCTE35-IN=0xFC002F0000000000FF1,END-ON-NEXT=YES)\nDateRangeItem.parse(text)\n# => #<M3U8::DateRangeItem:0x7d6bff706f00\n#     @class_name=\"test_class\",\n#     @client_attributes={\"X-CUSTOM\" => 45.3},\n#     @duration=60.1,\n#     @end_date=\"2014-03-05T11:16:00Z\",\n#     @end_on_next=true,\n#     @id=\"test_id\",\n#     @planned_duration=59.993,\n#     @scte35_cmd=\"0xFC002F0000000000FF2\",\n#     @scte35_in=\"0xFC002F0000000000FF1\",\n#     @scte35_out=\"0xFC002F0000000000FF0\",\n#     @start_date=\"2014-03-05T11:15:00Z\">\n```","summary":"<p>Parses a complete <code>EXT-X-DATERANGE</code> tag line and returns a new <code><a href=\"../M3U8/DateRangeItem.html\">DateRangeItem</a></code>.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(text : String)","args_html":"(text : String)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":93,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"}],"visibility":"Public","body":"params = parse_attributes(text)\nnew(id: params[\"ID\"]?, class_name: params[\"CLASS\"]?, start_date: params[\"START-DATE\"]?, end_date: params[\"END-DATE\"]?, duration: params[\"DURATION\"]?.try(&.to_f), planned_duration: params[\"PLANNED-DURATION\"]?.try(&.to_f), scte35_cmd: params[\"SCTE35-CMD\"]?, scte35_out: params[\"SCTE35-OUT\"]?, scte35_in: params[\"SCTE35-IN\"]?, end_on_next: parse_boolean(params[\"END-ON-NEXT\"]?), client_attributes: parse_client_attributes(params))\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Creates a new `DateRangeItem` from a NamedTuple of parameters.\n\nThe NamedTuple keys should match the attribute names (using symbols):\n- `id`\n- `start_date`\n- `class_name`\n- `end_date`\n- `duration`\n- `planned_duration`,\n- `scte35_cmd`\n- `scte35_out`\n- `scte35_in`\n- `end_on_next`\n- `client_attributes`.\n\nExamples:\n\n```\noptions = {\n  id:                \"test_id\",\n  start_date:        \"2014-03-05T11:15:00Z\",\n  class_name:        \"test_class\",\n  end_date:          \"2014-03-05T11:16:00Z\",\n  duration:          60.1,\n  planned_duration:  59.993,\n  scte35_out:        \"0xFC002F0000000000FF0\",\n  scte35_in:         \"0xFC002F0000000000FF1\",\n  scte35_cmd:        \"0xFC002F0000000000FF2\",\n  end_on_next:       true,\n  client_attributes: {\"X-CUSTOM\" => 45.3},\n}\nDateRangeItem.new(options)\n# => #<M3U8::DateRangeItem:0x7d6bff706f00\n#     @class_name=\"test_class\",\n#     @client_attributes={\"X-CUSTOM\" => 45.3},\n#     @duration=60.1,\n#     @end_date=\"2014-03-05T11:16:00Z\",\n#     @end_on_next=true,\n#     @id=\"test_id\",\n#     @planned_duration=59.993,\n#     @scte35_cmd=\"0xFC002F0000000000FF2\",\n#     @scte35_in=\"0xFC002F0000000000FF1\",\n#     @scte35_out=\"0xFC002F0000000000FF0\",\n#     @start_date=\"2014-03-05T11:15:00Z\">\n```","summary":"<p>Creates a new <code><a href=\"../M3U8/DateRangeItem.html\">DateRangeItem</a></code> from a NamedTuple of parameters.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":155,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(id: params[:id]?, start_date: params[:start_date]?, class_name: params[:class_name]?, end_date: params[:end_date]?, duration: params[:duration]?, planned_duration: params[:planned_duration]?, scte35_cmd: params[:scte35_cmd]?, scte35_out: params[:scte35_out]?, scte35_in: params[:scte35_in]?, end_on_next: params[:end_on_next]?, client_attributes: params[:client_attributes]?)"}},{"html_id":"new(id:Nil|String=nil,start_date:Nil|String=nil,class_name:Nil|String=nil,end_date:Nil|String=nil,duration:Float64|Nil=nil,planned_duration:Float64|Nil=nil,scte35_cmd:Nil|String=nil,scte35_out:Nil|String=nil,scte35_in:Nil|String=nil,end_on_next:Bool|Nil=nil,client_attributes=nil)-class-method","name":"new","doc":"Initializes a new `DateRangeItem` instance.\n\nThe instance variables are directly set from the constructor arguments.\n\nExample:\n\n```\nDateRangeItem.new\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/DateRangeItem.html\">DateRangeItem</a></code> instance.</p>","abstract":false,"args":[{"name":"id","default_value":"nil","external_name":"id","restriction":"::Nil | ::String"},{"name":"start_date","default_value":"nil","external_name":"start_date","restriction":"::Nil | ::String"},{"name":"class_name","default_value":"nil","external_name":"class_name","restriction":"::Nil | ::String"},{"name":"end_date","default_value":"nil","external_name":"end_date","restriction":"::Nil | ::String"},{"name":"duration","default_value":"nil","external_name":"duration","restriction":"::Float64 | ::Nil"},{"name":"planned_duration","default_value":"nil","external_name":"planned_duration","restriction":"::Float64 | ::Nil"},{"name":"scte35_cmd","default_value":"nil","external_name":"scte35_cmd","restriction":"::Nil | ::String"},{"name":"scte35_out","default_value":"nil","external_name":"scte35_out","restriction":"::Nil | ::String"},{"name":"scte35_in","default_value":"nil","external_name":"scte35_in","restriction":"::Nil | ::String"},{"name":"end_on_next","default_value":"nil","external_name":"end_on_next","restriction":"::Bool | ::Nil"},{"name":"client_attributes","default_value":"nil","external_name":"client_attributes","restriction":""}],"args_string":"(id : Nil | String = nil, start_date : Nil | String = nil, class_name : Nil | String = nil, end_date : Nil | String = nil, duration : Float64 | Nil = nil, planned_duration : Float64 | Nil = nil, scte35_cmd : Nil | String = nil, scte35_out : Nil | String = nil, scte35_in : Nil | String = nil, end_on_next : Bool | Nil = nil, client_attributes = nil)","args_html":"(id : Nil | String = <span class=\"n\">nil</span>, start_date : Nil | String = <span class=\"n\">nil</span>, class_name : Nil | String = <span class=\"n\">nil</span>, end_date : Nil | String = <span class=\"n\">nil</span>, duration : Float64 | Nil = <span class=\"n\">nil</span>, planned_duration : Float64 | Nil = <span class=\"n\">nil</span>, scte35_cmd : Nil | String = <span class=\"n\">nil</span>, scte35_out : Nil | String = <span class=\"n\">nil</span>, scte35_in : Nil | String = <span class=\"n\">nil</span>, end_on_next : Bool | Nil = <span class=\"n\">nil</span>, client_attributes = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":180,"url":null},"def":{"name":"new","args":[{"name":"id","default_value":"nil","external_name":"id","restriction":"::Nil | ::String"},{"name":"start_date","default_value":"nil","external_name":"start_date","restriction":"::Nil | ::String"},{"name":"class_name","default_value":"nil","external_name":"class_name","restriction":"::Nil | ::String"},{"name":"end_date","default_value":"nil","external_name":"end_date","restriction":"::Nil | ::String"},{"name":"duration","default_value":"nil","external_name":"duration","restriction":"::Float64 | ::Nil"},{"name":"planned_duration","default_value":"nil","external_name":"planned_duration","restriction":"::Float64 | ::Nil"},{"name":"scte35_cmd","default_value":"nil","external_name":"scte35_cmd","restriction":"::Nil | ::String"},{"name":"scte35_out","default_value":"nil","external_name":"scte35_out","restriction":"::Nil | ::String"},{"name":"scte35_in","default_value":"nil","external_name":"scte35_in","restriction":"::Nil | ::String"},{"name":"end_on_next","default_value":"nil","external_name":"end_on_next","restriction":"::Bool | ::Nil"},{"name":"client_attributes","default_value":"nil","external_name":"client_attributes","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, start_date, class_name, end_date, duration, planned_duration, scte35_cmd, scte35_out, scte35_in, end_on_next, client_attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"class_name:String|Nil-instance-method","name":"class_name","doc":"A client-defined category for the date range.","summary":"<p>A client-defined category for the date range.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":37,"url":null},"def":{"name":"class_name","return_type":"String | ::Nil","visibility":"Public","body":"@class_name"}},{"html_id":"class_name=(class_name:String|Nil)-instance-method","name":"class_name=","doc":"A client-defined category for the date range.","summary":"<p>A client-defined category for the date range.</p>","abstract":false,"args":[{"name":"class_name","external_name":"class_name","restriction":"String | ::Nil"}],"args_string":"(class_name : String | Nil)","args_html":"(class_name : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":37,"url":null},"def":{"name":"class_name=","args":[{"name":"class_name","external_name":"class_name","restriction":"String | ::Nil"}],"visibility":"Public","body":"@class_name = class_name"}},{"html_id":"client_attributes:ClientAttributeType-instance-method","name":"client_attributes","doc":"Client-specific attributes (those whose keys start with `X-`).","summary":"<p>Client-specific attributes (those whose keys start with <code>X-</code>).</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":61,"url":null},"def":{"name":"client_attributes","return_type":"ClientAttributeType","visibility":"Public","body":"@client_attributes"}},{"html_id":"client_attributes=(client_attributes:ClientAttributeType)-instance-method","name":"client_attributes=","doc":"Client-specific attributes (those whose keys start with `X-`).","summary":"<p>Client-specific attributes (those whose keys start with <code>X-</code>).</p>","abstract":false,"args":[{"name":"client_attributes","external_name":"client_attributes","restriction":"ClientAttributeType"}],"args_string":"(client_attributes : ClientAttributeType)","args_html":"(client_attributes : ClientAttributeType)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":61,"url":null},"def":{"name":"client_attributes=","args":[{"name":"client_attributes","external_name":"client_attributes","restriction":"ClientAttributeType"}],"visibility":"Public","body":"@client_attributes = client_attributes"}},{"html_id":"duration:Float64|Nil-instance-method","name":"duration","doc":"The duration in seconds.","summary":"<p>The duration in seconds.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":43,"url":null},"def":{"name":"duration","return_type":"Float64 | ::Nil","visibility":"Public","body":"@duration"}},{"html_id":"duration=(duration:Float64|Nil)-instance-method","name":"duration=","doc":"The duration in seconds.","summary":"<p>The duration in seconds.</p>","abstract":false,"args":[{"name":"duration","external_name":"duration","restriction":"Float64 | ::Nil"}],"args_string":"(duration : Float64 | Nil)","args_html":"(duration : Float64 | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":43,"url":null},"def":{"name":"duration=","args":[{"name":"duration","external_name":"duration","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@duration = duration"}},{"html_id":"end_date:String|Nil-instance-method","name":"end_date","doc":"The end date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.","summary":"<p>The end date/time in <a href=\"https://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO-8601</a> format.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":40,"url":null},"def":{"name":"end_date","return_type":"String | ::Nil","visibility":"Public","body":"@end_date"}},{"html_id":"end_date=(end_date:String|Nil)-instance-method","name":"end_date=","doc":"The end date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.","summary":"<p>The end date/time in <a href=\"https://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO-8601</a> format.</p>","abstract":false,"args":[{"name":"end_date","external_name":"end_date","restriction":"String | ::Nil"}],"args_string":"(end_date : String | Nil)","args_html":"(end_date : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":40,"url":null},"def":{"name":"end_date=","args":[{"name":"end_date","external_name":"end_date","restriction":"String | ::Nil"}],"visibility":"Public","body":"@end_date = end_date"}},{"html_id":"end_on_next:Bool|Nil-instance-method","name":"end_on_next","doc":"A boolean flag; if true, outputs `\"END-ON-NEXT=YES\"`.","summary":"<p>A boolean flag; if true, outputs <code>&quot;END-ON-NEXT=YES&quot;</code>.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":58,"url":null},"def":{"name":"end_on_next","return_type":"Bool | ::Nil","visibility":"Public","body":"@end_on_next"}},{"html_id":"end_on_next=(end_on_next:Bool|Nil)-instance-method","name":"end_on_next=","doc":"A boolean flag; if true, outputs `\"END-ON-NEXT=YES\"`.","summary":"<p>A boolean flag; if true, outputs <code>&quot;END-ON-NEXT=YES&quot;</code>.</p>","abstract":false,"args":[{"name":"end_on_next","external_name":"end_on_next","restriction":"Bool | ::Nil"}],"args_string":"(end_on_next : Bool | Nil)","args_html":"(end_on_next : Bool | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":58,"url":null},"def":{"name":"end_on_next=","args":[{"name":"end_on_next","external_name":"end_on_next","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@end_on_next = end_on_next"}},{"html_id":"id:String|Nil-instance-method","name":"id","doc":"A unique identifier for the date range.","summary":"<p>A unique identifier for the date range.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":31,"url":null},"def":{"name":"id","return_type":"String | ::Nil","visibility":"Public","body":"@id"}},{"html_id":"id=(id:String|Nil)-instance-method","name":"id=","doc":"A unique identifier for the date range.","summary":"<p>A unique identifier for the date range.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String | ::Nil"}],"args_string":"(id : String | Nil)","args_html":"(id : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":31,"url":null},"def":{"name":"id=","args":[{"name":"id","external_name":"id","restriction":"String | ::Nil"}],"visibility":"Public","body":"@id = id"}},{"html_id":"planned_duration:Float64|Nil-instance-method","name":"planned_duration","doc":"The expected duration in seconds.","summary":"<p>The expected duration in seconds.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":46,"url":null},"def":{"name":"planned_duration","return_type":"Float64 | ::Nil","visibility":"Public","body":"@planned_duration"}},{"html_id":"planned_duration=(planned_duration:Float64|Nil)-instance-method","name":"planned_duration=","doc":"The expected duration in seconds.","summary":"<p>The expected duration in seconds.</p>","abstract":false,"args":[{"name":"planned_duration","external_name":"planned_duration","restriction":"Float64 | ::Nil"}],"args_string":"(planned_duration : Float64 | Nil)","args_html":"(planned_duration : Float64 | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":46,"url":null},"def":{"name":"planned_duration=","args":[{"name":"planned_duration","external_name":"planned_duration","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@planned_duration = planned_duration"}},{"html_id":"scte35_cmd:String|Nil-instance-method","name":"scte35_cmd","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":49,"url":null},"def":{"name":"scte35_cmd","return_type":"String | ::Nil","visibility":"Public","body":"@scte35_cmd"}},{"html_id":"scte35_cmd=(scte35_cmd:String|Nil)-instance-method","name":"scte35_cmd=","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"args":[{"name":"scte35_cmd","external_name":"scte35_cmd","restriction":"String | ::Nil"}],"args_string":"(scte35_cmd : String | Nil)","args_html":"(scte35_cmd : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":49,"url":null},"def":{"name":"scte35_cmd=","args":[{"name":"scte35_cmd","external_name":"scte35_cmd","restriction":"String | ::Nil"}],"visibility":"Public","body":"@scte35_cmd = scte35_cmd"}},{"html_id":"scte35_in:String|Nil-instance-method","name":"scte35_in","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":55,"url":null},"def":{"name":"scte35_in","return_type":"String | ::Nil","visibility":"Public","body":"@scte35_in"}},{"html_id":"scte35_in=(scte35_in:String|Nil)-instance-method","name":"scte35_in=","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"args":[{"name":"scte35_in","external_name":"scte35_in","restriction":"String | ::Nil"}],"args_string":"(scte35_in : String | Nil)","args_html":"(scte35_in : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":55,"url":null},"def":{"name":"scte35_in=","args":[{"name":"scte35_in","external_name":"scte35_in","restriction":"String | ::Nil"}],"visibility":"Public","body":"@scte35_in = scte35_in"}},{"html_id":"scte35_out:String|Nil-instance-method","name":"scte35_out","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":52,"url":null},"def":{"name":"scte35_out","return_type":"String | ::Nil","visibility":"Public","body":"@scte35_out"}},{"html_id":"scte35_out=(scte35_out:String|Nil)-instance-method","name":"scte35_out=","doc":"SCTE-35 splice information.","summary":"<p>SCTE-35 splice information.</p>","abstract":false,"args":[{"name":"scte35_out","external_name":"scte35_out","restriction":"String | ::Nil"}],"args_string":"(scte35_out : String | Nil)","args_html":"(scte35_out : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":52,"url":null},"def":{"name":"scte35_out=","args":[{"name":"scte35_out","external_name":"scte35_out","restriction":"String | ::Nil"}],"visibility":"Public","body":"@scte35_out = scte35_out"}},{"html_id":"start_date:String|Nil-instance-method","name":"start_date","doc":"The start date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.","summary":"<p>The start date/time in <a href=\"https://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO-8601</a> format.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":34,"url":null},"def":{"name":"start_date","return_type":"String | ::Nil","visibility":"Public","body":"@start_date"}},{"html_id":"start_date=(start_date:String|Nil)-instance-method","name":"start_date=","doc":"The start date/time in [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) format.","summary":"<p>The start date/time in <a href=\"https://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO-8601</a> format.</p>","abstract":false,"args":[{"name":"start_date","external_name":"start_date","restriction":"String | ::Nil"}],"args_string":"(start_date : String | Nil)","args_html":"(start_date : String | Nil)","location":{"filename":"src/m3u8/date_range_item.cr","line_number":34,"url":null},"def":{"name":"start_date=","args":[{"name":"start_date","external_name":"start_date","restriction":"String | ::Nil"}],"visibility":"Public","body":"@start_date = start_date"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-DATERANGE` tag.\n\nThe output is constructed by concatenating all formatted attribute strings\n(e.g. ID, CLASS, START-DATE, etc.) separated by commas, and prefixed with\n`#EXT-X-DATERANGE:`.\n\nExample:\n\n```\noptions = {\n  id:                \"test_id\",\n  start_date:        \"2014-03-05T11:15:00Z\",\n  class_name:        \"test_class\",\n  end_date:          \"2014-03-05T11:16:00Z\",\n  duration:          60.1,\n  planned_duration:  59.993,\n  scte35_out:        \"0xFC002F0000000000FF0\",\n  scte35_in:         \"0xFC002F0000000000FF1\",\n  scte35_cmd:        \"0xFC002F0000000000FF2\",\n  end_on_next:       true,\n  client_attributes: {\"X-CUSTOM\" => 45.3},\n}\nDateRangeItem.new(options).to_s\n# => #(EXT-X-DATERANGE:ID=\"test_id\",CLASS=\"test_class\",START-DATE=\"2014-03-05T11:15:00Z\",\n#      END-DATE=\"2014-03-05T11:16:00Z\",DURATION=60.1,PLANNED-DURATION=59.993,\n#      X-CUSTOM=\"45.3\",SCTE35-CMD=0xFC002F0000000000FF2,\n#      SCTE35-OUT=0xFC002F0000000000FF0,SCTE35-IN=0xFC002F0000000000FF1,\n#      END-ON-NEXT=YES)\n```","summary":"<p>Returns the string representation of the <code>EXT-X-DATERANGE</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/date_range_item.cr","line_number":214,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-DATERANGE:#{attributes.join(',')}\""}}]},{"html_id":"m3u8/M3U8/DiscontinuityItem","path":"M3U8/DiscontinuityItem.html","kind":"class","full_name":"M3U8::DiscontinuityItem","name":"DiscontinuityItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/discontinuity_item.cr","line_number":17,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`DiscontinuityItem` represents an `EXT-X-DISCONTINUITY` tag used in HLS playlists.\n\nAccording to [RFC 8216, Section 4.3.2.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.4),\nthe `EXT-X-DISCONTINUITY` tag signals that a discontinuity exists between Media Segment items.\nThis break in continuity can occur due to changes in encoding parameters, stream content,\nor other reasons that require the client to reset its decoding process.\n\nFor example, an HLS playlist might include the following tag to indicate a discontinuity:\n\n```txt\n#EXT-X-DISCONTINUITY\n```\n\nWhen the client parses this tag, it understands that the next Media Segment should be treated\nas starting from a new point, independent of the segments that came before.","summary":"<p><code><a href=\"../M3U8/DiscontinuityItem.html\">DiscontinuityItem</a></code> represents an <code>EXT-X-DISCONTINUITY</code> tag used in HLS playlists.</p>","instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the `EXT-X-DISCONTINUITY` tag as a string, followed by a newline.\n\nExample:\n\n```\nDiscontinuityItem.new.to_s\n# => \"#EXT-X-DISCONTINUITY\\n\"\n```\n\nThe newline character ensures that when concatenated in a Playlist,\nthe tag is correctly terminated as a separate line.","summary":"<p>Returns the <code>EXT-X-DISCONTINUITY</code> tag as a string, followed by a newline.</p>","abstract":false,"location":{"filename":"src/m3u8/discontinuity_item.cr","line_number":31,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-DISCONTINUITY\\n\""}}]},{"html_id":"m3u8/M3U8/Encryptable","path":"M3U8/Encryptable.html","kind":"module","full_name":"M3U8::Encryptable","name":"Encryptable","abstract":false,"locations":[{"filename":"src/m3u8/encryptable.cr","line_number":20,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"m3u8/M3U8/KeyItem","kind":"class","full_name":"M3U8::KeyItem","name":"KeyItem"},{"html_id":"m3u8/M3U8/SessionKeyItem","kind":"class","full_name":"M3U8::SessionKeyItem","name":"SessionKeyItem"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"Provides common functionality for constructing encryption key tags in HTTP Live Streaming (HLS).\n\nAccording to [RFC 8216, Section 4.3.2.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.4), the\n`EXT-X-KEY` tag specifies the encryption parameters for Media Segments in an HLS playlist.\nThis tag includes several attributes:\n\n```txt\n#EXT-X-KEY:METHOD=AES-128,URI=\"http://test.key\",IV=D512BBF,KEYFORMAT=\"identity\",KEYFORMATVERSIONS=\"1/3\"\n```\n\n- ***METHOD*** (required): Specifies the encryption method (e.g. NONE, AES-128, SAMPLE-AES).\n- ***URI*** (optional): The *URI* used to fetch the decryption key (optional if *METHOD* is NONE; required otherwise).\n- ***IV*** (optional): The Initialization Vector, expressed as a hexadecimal sequence.\n- ***KEYFORMAT*** (optional): A string that indicates the key format (defaults to \"identity\" if omitted).\n- ***KEYFORMATVERSIONS*** (optional): Indicates the supported key format versions (defaults to 1 if omitted).\n\nThis module provides helper methods that convert parameter hashes into the correctly formatted\nattribute string for inclusion in an `EXT-X-KEY` tag.","summary":"<p>Provides common functionality for constructing encryption key tags in HTTP Live Streaming (HLS).</p>","class_methods":[{"html_id":"convert_key(params)-class-method","name":"convert_key","doc":"Converts a hash of parameters (with keys in uppercase, as in a playlist) into\na new hash with symbolized keys for internal use.\n\nExpected keys are:\n- `METHOD`\n- `URI`\n- `IV`\n- `KEYFORMAT`\n- `KEYFORMATVERSIONS`.\n\nReturns a NamedTuple.\n\nExample:\n\n```\noptions = {\n  \"METHOD\"            => \"AES-128\",\n  \"URI\"               => \"http://test.key\",\n  \"IV\"                => \"D512BBF\",\n  \"KEYFORMAT\"         => \"identity\",\n  \"KEYFORMATVERSIONS\" => \"1/3\",\n}\nEncryptable.convert_key(options)\n# => {method: \"AES-128\",\n#     uri: \"http://test.key\",\n#     iv: \"D512BBF\",\n#     key_format: \"identity\",\n#     key_format_versions: \"1/3\"}\n```","summary":"<p>Converts a hash of parameters (with keys in uppercase, as in a playlist) into a new hash with symbolized keys for internal use.</p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":""}],"args_string":"(params)","args_html":"(params)","location":{"filename":"src/m3u8/encryptable.cr","line_number":72,"url":null},"def":{"name":"convert_key","args":[{"name":"params","external_name":"params","restriction":""}],"visibility":"Public","body":"{method: params[\"METHOD\"], uri: params[\"URI\"]?, iv: params[\"IV\"]?, key_format: params[\"KEYFORMAT\"]?, key_format_versions: params[\"KEYFORMATVERSIONS\"]?}"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Alternative constructor that accepts a NamedTuple with symbol keys.\n\nExample:\n\n```\noptions = {\n  method:              \"AES-128\",\n  uri:                 \"https://example.com/key\",\n  iv:                  \"0x1a2b3c\",\n  key_format:          \"identity\",\n  key_format_versions: \"1\",\n}\n\nclass Something\n  include Encryptable\nend\n\nSomething.new(options)\n# => #<App::Something:0x78b71f3a9380\n#     @iv=\"0x1a2b3c\",\n#     @key_format=\"identity\",\n#     @key_format_versions=\"1\",\n#     @method=\"AES-128\",\n#     @uri=\"https://example.com/key\">\n```","summary":"<p>Alternative constructor that accepts a NamedTuple with symbol keys.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/encryptable.cr","line_number":107,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(method: params[:method], uri: params[:uri]?, iv: params[:iv]?, key_format: params[:key_format]?, key_format_versions: params[:key_format_versions]?)"}},{"html_id":"new(method=\"\",uri=nil,iv=nil,key_format=nil,key_format_versions=nil)-class-method","name":"new","doc":"Initializes a new `Encryptable` instance with the given parameters.\n\nParameters:\n  - `method`: The encryption method (required).\n  - `uri`: The *URI* for the key (optional).\n  - `iv`: The Initialization Vector *IV* (optional).\n  - `key_format`: The key format (optional).\n  - `key_format_versions`: The supported key format versions (optional).\n\n```\nclass Something\n  include Encryptable\nend\n\nSomething.new(method: \"AES-128\", uri: \"https://example.com/key\")\n# => #<App::Something:0x7cae3cdbb2c0\n#     @iv=nil,\n#     @key_format=nil,\n#     @key_format_versions=nil,\n#     @method=\"AES-128\",\n#     @uri=\"https://example.com/key\">\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/Encryptable.html\">Encryptable</a></code> instance with the given parameters.</p>","abstract":false,"args":[{"name":"method","default_value":"\"\"","external_name":"method","restriction":""},{"name":"uri","default_value":"nil","external_name":"uri","restriction":""},{"name":"iv","default_value":"nil","external_name":"iv","restriction":""},{"name":"key_format","default_value":"nil","external_name":"key_format","restriction":""},{"name":"key_format_versions","default_value":"nil","external_name":"key_format_versions","restriction":""}],"args_string":"(method = \"\", uri = nil, iv = nil, key_format = nil, key_format_versions = nil)","args_html":"(method = <span class=\"s\">&quot;&quot;</span>, uri = <span class=\"n\">nil</span>, iv = <span class=\"n\">nil</span>, key_format = <span class=\"n\">nil</span>, key_format_versions = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/encryptable.cr","line_number":139,"url":null},"def":{"name":"new","args":[{"name":"method","default_value":"\"\"","external_name":"method","restriction":""},{"name":"uri","default_value":"nil","external_name":"uri","restriction":""},{"name":"iv","default_value":"nil","external_name":"iv","restriction":""},{"name":"key_format","default_value":"nil","external_name":"key_format","restriction":""},{"name":"key_format_versions","default_value":"nil","external_name":"key_format_versions","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(method, uri, iv, key_format, key_format_versions)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"attributes_to_s-instance-method","name":"attributes_to_s","doc":"Constructs a string representation of the encryption key attributes.\n\nThe output is a comma-separated list of attribute assignments,\nsuitable for inclusion in an `EXT-X-KEY` tag.\n\nExample:\n\n```\nclass Something\n  include Encryptable\nend\n\nSomething.new(method: \"AES-128\", uri: \"https://example.com/key\").attributes_to_s\n# => \"METHOD=AES-128,URI=\\\"https://example.com/key\\\"\"\n```","summary":"<p>Constructs a string representation of the encryption key attributes.</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":161,"url":null},"def":{"name":"attributes_to_s","visibility":"Public","body":"attributes.join(',')"}},{"html_id":"iv:String|Nil-instance-method","name":"iv","doc":"The value is a hexadecimal-sequence that specifies a 128-bit\nunsigned integer Initialization Vector *IV* to be used with the key.","summary":"<p>The value is a hexadecimal-sequence that specifies a 128-bit unsigned integer Initialization Vector <em>IV</em> to be used with the key.</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":33,"url":null},"def":{"name":"iv","return_type":"String | ::Nil","visibility":"Public","body":"@iv"}},{"html_id":"iv=(iv:String|Nil)-instance-method","name":"iv=","doc":"The value is a hexadecimal-sequence that specifies a 128-bit\nunsigned integer Initialization Vector *IV* to be used with the key.","summary":"<p>The value is a hexadecimal-sequence that specifies a 128-bit unsigned integer Initialization Vector <em>IV</em> to be used with the key.</p>","abstract":false,"args":[{"name":"iv","external_name":"iv","restriction":"String | ::Nil"}],"args_string":"(iv : String | Nil)","args_html":"(iv : String | Nil)","location":{"filename":"src/m3u8/encryptable.cr","line_number":33,"url":null},"def":{"name":"iv=","args":[{"name":"iv","external_name":"iv","restriction":"String | ::Nil"}],"visibility":"Public","body":"@iv = iv"}},{"html_id":"key_format:String|Nil-instance-method","name":"key_format","doc":"The value is a string that specifies how the key is\nrepresented in the resource identified by the *URI*;","summary":"<p>The value is a string that specifies how the key is represented in the resource identified by the <em>URI</em>;</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":37,"url":null},"def":{"name":"key_format","return_type":"String | ::Nil","visibility":"Public","body":"@key_format"}},{"html_id":"key_format=(key_format:String|Nil)-instance-method","name":"key_format=","doc":"The value is a string that specifies how the key is\nrepresented in the resource identified by the *URI*;","summary":"<p>The value is a string that specifies how the key is represented in the resource identified by the <em>URI</em>;</p>","abstract":false,"args":[{"name":"key_format","external_name":"key_format","restriction":"String | ::Nil"}],"args_string":"(key_format : String | Nil)","args_html":"(key_format : String | Nil)","location":{"filename":"src/m3u8/encryptable.cr","line_number":37,"url":null},"def":{"name":"key_format=","args":[{"name":"key_format","external_name":"key_format","restriction":"String | ::Nil"}],"visibility":"Public","body":"@key_format = key_format"}},{"html_id":"key_format_versions:String|Nil-instance-method","name":"key_format_versions","doc":"The value is a string containing one or more positive\nintegers separated by the `/` character (for example, `1`, `1/2`, or `1/2/5`).","summary":"<p>The value is a string containing one or more positive integers separated by the <code>/</code> character (for example, <code>1</code>, <code>1/2</code>, or <code>1/2/5</code>).</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":41,"url":null},"def":{"name":"key_format_versions","return_type":"String | ::Nil","visibility":"Public","body":"@key_format_versions"}},{"html_id":"key_format_versions=(key_format_versions:String|Nil)-instance-method","name":"key_format_versions=","doc":"The value is a string containing one or more positive\nintegers separated by the `/` character (for example, `1`, `1/2`, or `1/2/5`).","summary":"<p>The value is a string containing one or more positive integers separated by the <code>/</code> character (for example, <code>1</code>, <code>1/2</code>, or <code>1/2/5</code>).</p>","abstract":false,"args":[{"name":"key_format_versions","external_name":"key_format_versions","restriction":"String | ::Nil"}],"args_string":"(key_format_versions : String | Nil)","args_html":"(key_format_versions : String | Nil)","location":{"filename":"src/m3u8/encryptable.cr","line_number":41,"url":null},"def":{"name":"key_format_versions=","args":[{"name":"key_format_versions","external_name":"key_format_versions","restriction":"String | ::Nil"}],"visibility":"Public","body":"@key_format_versions = key_format_versions"}},{"html_id":"method:String-instance-method","name":"method","doc":"The value is a string that specifies the encryption method.\n\nThe methods defined are: `NONE`, `AES-128`, and `SAMPLE-AES`.\nAn encryption method of `NONE` means that Media Segments are not encrypted.","summary":"<p>The value is a string that specifies the encryption method.</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":25,"url":null},"def":{"name":"method","return_type":"String","visibility":"Public","body":"@method"}},{"html_id":"method=(method:String)-instance-method","name":"method=","doc":"The value is a string that specifies the encryption method.\n\nThe methods defined are: `NONE`, `AES-128`, and `SAMPLE-AES`.\nAn encryption method of `NONE` means that Media Segments are not encrypted.","summary":"<p>The value is a string that specifies the encryption method.</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":"String"}],"args_string":"(method : String)","args_html":"(method : String)","location":{"filename":"src/m3u8/encryptable.cr","line_number":25,"url":null},"def":{"name":"method=","args":[{"name":"method","external_name":"method","restriction":"String"}],"visibility":"Public","body":"@method = method"}},{"html_id":"uri:String|Nil-instance-method","name":"uri","doc":"The value is a string containing a *URI* that specifies how\nto obtain the key.","summary":"<p>The value is a string containing a <em>URI</em> that specifies how to obtain the key.</p>","abstract":false,"location":{"filename":"src/m3u8/encryptable.cr","line_number":29,"url":null},"def":{"name":"uri","return_type":"String | ::Nil","visibility":"Public","body":"@uri"}},{"html_id":"uri=(uri:String|Nil)-instance-method","name":"uri=","doc":"The value is a string containing a *URI* that specifies how\nto obtain the key.","summary":"<p>The value is a string containing a <em>URI</em> that specifies how to obtain the key.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil)","args_html":"(uri : String | Nil)","location":{"filename":"src/m3u8/encryptable.cr","line_number":29,"url":null},"def":{"name":"uri=","args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"@uri = uri"}}]},{"html_id":"m3u8/M3U8/Error","path":"M3U8/Error.html","kind":"module","full_name":"M3U8::Error","name":"Error","abstract":false,"locations":[{"filename":"src/m3u8/error.cr","line_number":2,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"types":[{"html_id":"m3u8/M3U8/Error/InvalidPlaylist","path":"M3U8/Error/InvalidPlaylist.html","kind":"class","full_name":"M3U8::Error::InvalidPlaylist","name":"InvalidPlaylist","abstract":false,"superclass":{"html_id":"m3u8/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"m3u8/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/error.cr","line_number":3,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"m3u8/M3U8/Error","kind":"module","full_name":"M3U8::Error","name":"Error"}},{"html_id":"m3u8/M3U8/Error/PlaylistType","path":"M3U8/Error/PlaylistType.html","kind":"class","full_name":"M3U8::Error::PlaylistType","name":"PlaylistType","abstract":false,"superclass":{"html_id":"m3u8/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"m3u8/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/error.cr","line_number":5,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"m3u8/M3U8/Error","kind":"module","full_name":"M3U8::Error","name":"Error"}}]},{"html_id":"m3u8/M3U8/KeyItem","path":"M3U8/KeyItem.html","kind":"class","full_name":"M3U8::KeyItem","name":"KeyItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Encryptable","kind":"module","full_name":"M3U8::Encryptable","name":"Encryptable"},{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/key_item.cr","line_number":17,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/M3U8/Encryptable","kind":"module","full_name":"M3U8::Encryptable","name":"Encryptable"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`KeyItem` represents a set of `EXT-X-KEY` attributes used for specifying\nthe encryption parameters of Media Segments in an HLS playlist.\n\nIn HLS, as defined in [RFC 8216, Section 4.3.2.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.4),\nthe `EXT-X-KEY` tag specifies how Media Segments are encrypted. It includes\nattributes such as `METHOD`, `URI`, `IV`, `KEYFORMAT`, and `KEYFORMATVERSIONS`.\n\nExample of a key tag:\n\n```txt\n#EXT-X-KEY:METHOD=AES-128,URI=\"http://test.key\",IV=D512BBF,KEYFORMAT=\"identity\",KEYFORMATVERSIONS=\"1/3\"\n```\n\nThis class combines the functionality provided by the `Concern` and `Encryptable`\nmodules to parse and format these encryption key attributes.","summary":"<p><code><a href=\"../M3U8/KeyItem.html\">KeyItem</a></code> represents a set of <code>EXT-X-KEY</code> attributes used for specifying the encryption parameters of Media Segments in an HLS playlist.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a text line representing an `EXT-X-KEY` tag and returns a new `KeyItem`.\n\nThe method extracts the attribute list from the tag line, converts the keys using\n`Encryptable.convert_key`, and initializes a new instance.\n\nExample:\n\n```txt\ntext = %(#EXT-X-KEY:METHOD=AES-128,URI=\"http://test.key\",IV=D512BBF,KEYFORMAT=\"identity\",KEYFORMATVERSIONS=\"1/3\")\nKeyItem.parse(text)\n# => #<M3U8::KeyItem:0x7f5ceff07a80\n      @iv=\"D512BBF\",\n      @key_format=\"identity\",\n      @key_format_versions=\"1/3\",\n      @method=\"AES-128\",\n      @uri=\"http://test.key\">\n```","summary":"<p>Parses a text line representing an <code>EXT-X-KEY</code> tag and returns a new <code><a href=\"../M3U8/KeyItem.html\">KeyItem</a></code>.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/key_item.cr","line_number":38,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(text)\nnew(Encryptable.convert_key(attributes))\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-KEY` tag.\n\nIt prefixes the formatted key attributes with `#EXT-X-KEY:`.\n\nExample:\n\n```txt\noptions = {\n  method:              \"AES-128\",\n  uri:                 \"http://test.key\",\n  iv:                  \"D512BBF\",\n  key_format:          \"identity\",\n  key_format_versions: \"1/3\",\n}\nKeyItem.new(options).to_s\n# => \"#EXT-X-KEY:METHOD=AES-128,URI=\\\"http://test.key\\\",IV=D512BBF,KEYFORMAT=\\\"identity\\\",KEYFORMATVERSIONS=\\\"1/3\\\"\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-KEY</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/key_item.cr","line_number":60,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-KEY:#{attributes_to_s}\""}}]},{"html_id":"m3u8/M3U8/MapItem","path":"M3U8/MapItem.html","kind":"class","full_name":"M3U8::MapItem","name":"MapItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/map_item.cr","line_number":16,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`MapItem` represents an `EXT-X-MAP` tag in an HLS playlist.\n\nThe `EXT-X-MAP` tag (defined in [RFC 8216, Section 4.3.2.5](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.5))\nspecifies how to obtain the Media Initialization Section, which is required to parse the Media Segments.\n\nFor example, a valid `EXT-X-MAP` tag might look like:\n\n```txt\n#EXT-X-MAP:URI=\"frelo/prog_index.m3u8\",BYTERANGE=\"4500@600\"\n```\n\nThe `MapItem` class stores the following properties:\n  - `uri` (String): the URI for the Media Initialization Section.\n  - `byterange` (`ByteRange`): the byte range indicating which part of the resource to use.","summary":"<p><code><a href=\"../M3U8/MapItem.html\">MapItem</a></code> represents an <code>EXT-X-MAP</code> tag in an HLS playlist.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a string representing an `EXT-X-MAP` tag and returns a new `MapItem` instance.\n\nThe method extracts attributes from the tag line using `parse_attributes` and\nconverts the `byterange` value using `ByteRange.parse`.\n\nExample:\n\n```txt\ntext = %(#EXT-X-MAP:URI=\"frelo/prog_index.m3u8\",BYTERANGE=\"4500@600\")\nMapItem.parse(text)\n# => #<M3U8::MapItem:0x79d016ab9f60\n#     @byterange=#<M3U8::ByteRange:0x79d016a8ee40 @length=4500, @start=600>,\n#     @uri=\"frelo/prog_index.m3u8\">\n```","summary":"<p>Parses a string representing an <code>EXT-X-MAP</code> tag and returns a new <code><a href=\"../M3U8/MapItem.html\">MapItem</a></code> instance.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/map_item.cr","line_number":39,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"params = parse_attributes(text)\nnew(uri: params[\"URI\"], byterange: ByteRange.parse(params[\"BYTERANGE\"]?))\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `MapItem` instance from a NamedTuple of parameters.\n\nThe NamedTuple can include the following keys:\n  - `:uri` (String): the URI for the initialization section.\n  - `:byterange` (can be a Hash, a NamedTuple, a `ByteRange` instance, or a String like \"4500@600\").\n\nExamples:\n\n```\noptions = {\n  uri:       \"frelo/prog_index.m3u8\",\n  byterange: {length: 4500, start: 600},\n}\nMapItem.new(options)\n# => #<M3U8::MapItem:0x7adc917c08a0\n#     @byterange=#<M3U8::ByteRange:0x7adc91795d50 @length=4500, @start=600>,\n#     @uri=\"frelo/prog_index.m3u8\">\n\noptions = {\n  uri:       \"frelo/prog_index.m3u8\",\n  byterange: ByteRange.new(length: 4500, start: 600),\n}\nMapItem.new(options)\n# => #<M3U8::MapItem:0x7adc917c01e0\n#     @byterange=#<M3U8::ByteRange:0x7adc91795c60 @length=4500, @start=600>,\n#     @uri=\"frelo/prog_index.m3u8\">\n\noptions = {\n  uri:       \"frelo/prog_index.m3u8\",\n  byterange: \"4500@600\",\n}\nMapItem.new(options)\n# => #<M3U8::MapItem:0x7adc917c1ba0\n#     @byterange=#<M3U8::ByteRange:0x7adc91795b70 @length=4500, @start=600>,\n#     @uri=\"frelo/prog_index.m3u8\">\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/MapItem.html\">MapItem</a></code> instance from a NamedTuple of parameters.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/map_item.cr","line_number":83,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(uri: params[:uri], byterange: params[:byterange]?)"}},{"html_id":"new(uri:String,byterange=nil)-class-method","name":"new","doc":"Initializes a new `MapItem` instance.\n\nAccepts a `uri` as the first parameter and an optional `byterange` parameter,\nwhich is passed to `ByteRange.parse`.\n\nExamples:\n\n```\nuri = \"frelo/prog_index.m3u8\"\nbyterange = \"4500@600\"\nMapItem.new(uri)\nMapItem.new(uri: uri)\n# => #<M3U8::MapItem:0x789a5325c760\n#     @byterange=#<M3U8::ByteRange:0x789a5322e8a0 @length=nil, @start=nil>,\n#     @uri=\"frelo/prog_index.m3u8\">\n\nMapItem.new(uri, byterange)\nMapItem.new(uri: uri, byterange: byterange)\n# => #<M3U8::MapItem:0x789a5325c0a0\n#     @byterange=#<M3U8::ByteRange:0x789a5322e7b0 @length=4500, @start=600>,\n#     @uri=\"frelo/prog_index.m3u8\">\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/MapItem.html\">MapItem</a></code> instance.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"::String"},{"name":"byterange","default_value":"nil","external_name":"byterange","restriction":""}],"args_string":"(uri : String, byterange = nil)","args_html":"(uri : String, byterange = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/map_item.cr","line_number":112,"url":null},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":"::String"},{"name":"byterange","default_value":"nil","external_name":"byterange","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri, byterange)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"byterange:ByteRange-instance-method","name":"byterange","doc":"The byte range indicating which part of the resource to use.","summary":"<p>The byte range indicating which part of the resource to use.</p>","abstract":false,"location":{"filename":"src/m3u8/map_item.cr","line_number":23,"url":null},"def":{"name":"byterange","return_type":"ByteRange","visibility":"Public","body":"@byterange"}},{"html_id":"byterange=(byterange:ByteRange)-instance-method","name":"byterange=","doc":"The byte range indicating which part of the resource to use.","summary":"<p>The byte range indicating which part of the resource to use.</p>","abstract":false,"args":[{"name":"byterange","external_name":"byterange","restriction":"ByteRange"}],"args_string":"(byterange : ByteRange)","args_html":"(byterange : <a href=\"../M3U8/ByteRange.html\">ByteRange</a>)","location":{"filename":"src/m3u8/map_item.cr","line_number":23,"url":null},"def":{"name":"byterange=","args":[{"name":"byterange","external_name":"byterange","restriction":"ByteRange"}],"visibility":"Public","body":"@byterange = byterange"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-MAP` tag.\n\nIt concatenates the formatted `uri` and `byterange` attributes, separated by commas,\nand prefixes the result with `#EXT-X-MAP:`.\n\nExample:\n\n```txt\noptions = {\n  uri:       \"frelo/prog_index.m3u8\",\n  byterange: \"4500@600\",\n}\nMapItem.new(options).to_s\n# => #EXT-X-MAP:URI=\"frelo/prog_index.m3u8\",BYTERANGE=\"4500@600\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-MAP</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/map_item.cr","line_number":131,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-MAP:#{attributes.join(',')}\""}},{"html_id":"uri:String-instance-method","name":"uri","doc":"The URI for the Media Initialization Section.","summary":"<p>The URI for the Media Initialization Section.</p>","abstract":false,"location":{"filename":"src/m3u8/map_item.cr","line_number":20,"url":null},"def":{"name":"uri","return_type":"String","visibility":"Public","body":"@uri"}},{"html_id":"uri=(uri:String)-instance-method","name":"uri=","doc":"The URI for the Media Initialization Section.","summary":"<p>The URI for the Media Initialization Section.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"}],"args_string":"(uri : String)","args_html":"(uri : String)","location":{"filename":"src/m3u8/map_item.cr","line_number":20,"url":null},"def":{"name":"uri=","args":[{"name":"uri","external_name":"uri","restriction":"String"}],"visibility":"Public","body":"@uri = uri"}}]},{"html_id":"m3u8/M3U8/MediaItem","path":"M3U8/MediaItem.html","kind":"class","full_name":"M3U8::MediaItem","name":"MediaItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/media_item.cr","line_number":33,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`MediaItem` represents a set of attributes for the `EXT-X-MEDIA` tag in an HLS playlist.\n\nThe `EXT-X-MEDIA` tag (defined in [RFC 8216, Section 4.3.4.1](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.1)) is used in HLS Master Playlists\nto associate media renditions with alternative tracks (e.g., audio or subtitles). It carries\ninformation such as the media type, group identifier, language, human-readable name, and\nadditional parameters like auto-selection, default status, and more.\n\nThe following attributes are typically included:\n  - **TYPE**: Indicates the type of media (e.g., AUDIO, VIDEO, SUBTITLES, CLOSED-CAPTIONS).\n  - **GROUP-ID**: A string that groups related renditions together.\n  - **LANGUAGE**: A language tag (as defined in [RFC 5646](https://datatracker.ietf.org/doc/html/rfc5646)) representing the primary language.\n  - **ASSOC-LANGUAGE**: An associated language tag for alternate language roles.\n  - **NAME**: A human-readable name for the rendition.\n  - **URI**: An optional URI that points to a separate Media Playlist for this rendition.\n  - **AUTOSELECT**: A flag indicating whether the rendition should be automatically selected.\n  - **DEFAULT**: A flag indicating whether the rendition is the default selection.\n  - **FORCED**: A flag for subtitles that indicates whether the rendition is forced.\n  - **INSTREAM-ID**: For closed-caption renditions, an identifier for the specific caption channel.\n  - **CHARACTERISTICS**: Additional characteristics for the rendition, as a comma-separated list.\n  - **CHANNELS**: For audio, a string indicating the number of channels and their order.\n\nExample `EXT-X-MEDIA` tag:\n\n```txt\n#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\"aac\",LANGUAGE=\"en\",NAME=\"English\",AUTOSELECT=YES,DEFAULT=YES,URI=\"eng_audio.m3u8\"\n```\n\nThis class provides methods to parse such a tag from a text string, create a new instance\nusing a NamedTuple of parameters, and output the tag as a properly formatted string.","summary":"<p><code><a href=\"../M3U8/MediaItem.html\">MediaItem</a></code> represents a set of attributes for the <code>EXT-X-MEDIA</code> tag in an HLS playlist.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a text string representing an `EXT-X-MEDIA` tag and returns a new `MediaItem` instance.\n\nThe method extracts key/value pairs using `parse_attributes` (from `M3U8::Concern`) and\nconverts them to appropriate types (e.g., booleans using `parse_boolean`).\n\nExample:\n\n```\ntext = %(#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\"aac\",LANGUAGE=\"en\",NAME=\"English\",AUTOSELECT=YES,DEFAULT=YES,URI=\"eng_audio.m3u8\")\nMediaItem.parse(text)\n# => #<M3U8::MediaItem:0x7cd7249453f0\n#     @assoc_language=nil,\n#     @autoselect=true,\n#     @channels=nil,\n#     @characteristics=nil,\n#     @default=true,\n#     @forced=nil,\n#     @group_id=\"aac\",\n#     @instream_id=nil,\n#     @language=\"en\",\n#     @name=\"English\",\n#     @type=\"AUDIO\",\n#     @uri=\"eng_audio.m3u8\">\n```","summary":"<p>Parses a text string representing an <code>EXT-X-MEDIA</code> tag and returns a new <code><a href=\"../M3U8/MediaItem.html\">MediaItem</a></code> instance.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/media_item.cr","line_number":73,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(text)\nnew(type: attributes[\"TYPE\"]?, group_id: attributes[\"GROUP-ID\"]?, language: attributes[\"LANGUAGE\"]?, assoc_language: attributes[\"ASSOC-LANGUAGE\"]?, name: attributes[\"NAME\"]?, autoselect: parse_boolean(attributes[\"AUTOSELECT\"]?), default: parse_boolean(attributes[\"DEFAULT\"]?), forced: parse_boolean(attributes[\"FORCED\"]?), uri: attributes[\"URI\"]?, instream_id: attributes[\"INSTREAM-ID\"]?, characteristics: attributes[\"CHARACTERISTICS\"]?, channels: attributes[\"CHANNELS\"]?)\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `MediaItem` instance from a NamedTuple of parameters.\n\nThe NamedTuple can include keys corresponding to the `EXT-X-MEDIA` attributes:\n`type`, `group_id`, `language`, `assoc_language`, `name`, `uri`, `autoselect`, `default`, `forced`, `instream_id`, `characteristics`, `channels`.\n\nExample:\n\n```\noptions = {\n  type:       \"AUDIO\",\n  group_id:   \"aac\",\n  language:   \"en\",\n  name:       \"English\",\n  autoselect: true,\n  default:    true,\n  uri:        \"eng_audio.m3u8\",\n}\nMediaItem.new(options)\n# => #<M3U8::MediaItem:0x7b19ac8eb2d0\n#     @assoc_language=nil,\n#     @autoselect=true,\n#     @channels=nil,\n#     @characteristics=nil,\n#     @default=true,\n#     @forced=nil,\n#     @group_id=\"aac\",\n#     @instream_id=nil,\n#     @language=\"en\",\n#     @name=\"English\",\n#     @type=\"AUDIO\",\n#     @uri=\"eng_audio.m3u8\">\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/MediaItem.html\">MediaItem</a></code> instance from a NamedTuple of parameters.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/media_item.cr","line_number":123,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(type: params[:type]?, group_id: params[:group_id]?, language: params[:language]?, assoc_language: params[:assoc_language]?, name: params[:name]?, uri: params[:uri]?, autoselect: params[:autoselect]?, default: params[:default]?, forced: params[:forced]?, instream_id: params[:instream_id]?, characteristics: params[:characteristics]?, channels: params[:channels]?)"}},{"html_id":"new(type:Nil|String=nil,group_id:Nil|String=nil,language:Nil|String=nil,assoc_language:Nil|String=nil,name:Nil|String=nil,uri:Nil|String=nil,autoselect:Bool|Nil=nil,default:Bool|Nil=nil,forced:Bool|Nil=nil,instream_id:Nil|String=nil,characteristics:Nil|String=nil,channels:Nil|String=nil)-class-method","name":"new","doc":"Initializes a new `MediaItem` instance.\n\nAll attributes default to nil if not provided.\n\nExamples:\n\n```\nMediaItem.new(\n  type: \"AUDIO\",\n  group_id: \"aac\",\n  language: \"en\",\n  name: \"English\",\n  autoselect: true,\n  default: true,\n  uri: \"eng_audio.m3u8\",\n)\n# => #<M3U8::MediaItem:0x7ea38df181b0\n#     @assoc_language=nil,\n#     @autoselect=true,\n#     @channels=nil,\n#     @characteristics=nil,\n#     @default=true,\n#     @forced=nil,\n#     @group_id=\"aac\",\n#     @instream_id=nil,\n#     @language=\"en\",\n#     @name=\"English\",\n#     @type=\"AUDIO\",\n#     @uri=\"eng_audio.m3u8\">\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/MediaItem.html\">MediaItem</a></code> instance.</p>","abstract":false,"args":[{"name":"type","default_value":"nil","external_name":"type","restriction":"::Nil | ::String"},{"name":"group_id","default_value":"nil","external_name":"group_id","restriction":"::Nil | ::String"},{"name":"language","default_value":"nil","external_name":"language","restriction":"::Nil | ::String"},{"name":"assoc_language","default_value":"nil","external_name":"assoc_language","restriction":"::Nil | ::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"autoselect","default_value":"nil","external_name":"autoselect","restriction":"::Bool | ::Nil"},{"name":"default","default_value":"nil","external_name":"default","restriction":"::Bool | ::Nil"},{"name":"forced","default_value":"nil","external_name":"forced","restriction":"::Bool | ::Nil"},{"name":"instream_id","default_value":"nil","external_name":"instream_id","restriction":"::Nil | ::String"},{"name":"characteristics","default_value":"nil","external_name":"characteristics","restriction":"::Nil | ::String"},{"name":"channels","default_value":"nil","external_name":"channels","restriction":"::Nil | ::String"}],"args_string":"(type : Nil | String = nil, group_id : Nil | String = nil, language : Nil | String = nil, assoc_language : Nil | String = nil, name : Nil | String = nil, uri : Nil | String = nil, autoselect : Bool | Nil = nil, default : Bool | Nil = nil, forced : Bool | Nil = nil, instream_id : Nil | String = nil, characteristics : Nil | String = nil, channels : Nil | String = nil)","args_html":"(type : Nil | String = <span class=\"n\">nil</span>, group_id : Nil | String = <span class=\"n\">nil</span>, language : Nil | String = <span class=\"n\">nil</span>, assoc_language : Nil | String = <span class=\"n\">nil</span>, name : Nil | String = <span class=\"n\">nil</span>, uri : Nil | String = <span class=\"n\">nil</span>, autoselect : Bool | Nil = <span class=\"n\">nil</span>, default : Bool | Nil = <span class=\"n\">nil</span>, forced : Bool | Nil = <span class=\"n\">nil</span>, instream_id : Nil | String = <span class=\"n\">nil</span>, characteristics : Nil | String = <span class=\"n\">nil</span>, channels : Nil | String = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/media_item.cr","line_number":170,"url":null},"def":{"name":"new","args":[{"name":"type","default_value":"nil","external_name":"type","restriction":"::Nil | ::String"},{"name":"group_id","default_value":"nil","external_name":"group_id","restriction":"::Nil | ::String"},{"name":"language","default_value":"nil","external_name":"language","restriction":"::Nil | ::String"},{"name":"assoc_language","default_value":"nil","external_name":"assoc_language","restriction":"::Nil | ::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"autoselect","default_value":"nil","external_name":"autoselect","restriction":"::Bool | ::Nil"},{"name":"default","default_value":"nil","external_name":"default","restriction":"::Bool | ::Nil"},{"name":"forced","default_value":"nil","external_name":"forced","restriction":"::Bool | ::Nil"},{"name":"instream_id","default_value":"nil","external_name":"instream_id","restriction":"::Nil | ::String"},{"name":"characteristics","default_value":"nil","external_name":"characteristics","restriction":"::Nil | ::String"},{"name":"channels","default_value":"nil","external_name":"channels","restriction":"::Nil | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type, group_id, language, assoc_language, name, uri, autoselect, default, forced, instream_id, characteristics, channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"assoc_language:String|Nil-instance-method","name":"assoc_language","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":39,"url":null},"def":{"name":"assoc_language","return_type":"String | ::Nil","visibility":"Public","body":"@assoc_language"}},{"html_id":"assoc_language=(assoc_language:String|Nil)-instance-method","name":"assoc_language=","abstract":false,"args":[{"name":"assoc_language","external_name":"assoc_language","restriction":"String | ::Nil"}],"args_string":"(assoc_language : String | Nil)","args_html":"(assoc_language : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":39,"url":null},"def":{"name":"assoc_language=","args":[{"name":"assoc_language","external_name":"assoc_language","restriction":"String | ::Nil"}],"visibility":"Public","body":"@assoc_language = assoc_language"}},{"html_id":"autoselect:Bool|Nil-instance-method","name":"autoselect","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":42,"url":null},"def":{"name":"autoselect","return_type":"Bool | ::Nil","visibility":"Public","body":"@autoselect"}},{"html_id":"autoselect=(autoselect:Bool|Nil)-instance-method","name":"autoselect=","abstract":false,"args":[{"name":"autoselect","external_name":"autoselect","restriction":"Bool | ::Nil"}],"args_string":"(autoselect : Bool | Nil)","args_html":"(autoselect : Bool | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":42,"url":null},"def":{"name":"autoselect=","args":[{"name":"autoselect","external_name":"autoselect","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@autoselect = autoselect"}},{"html_id":"channels:String|Nil-instance-method","name":"channels","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":47,"url":null},"def":{"name":"channels","return_type":"String | ::Nil","visibility":"Public","body":"@channels"}},{"html_id":"channels=(channels:String|Nil)-instance-method","name":"channels=","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String | ::Nil"}],"args_string":"(channels : String | Nil)","args_html":"(channels : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":47,"url":null},"def":{"name":"channels=","args":[{"name":"channels","external_name":"channels","restriction":"String | ::Nil"}],"visibility":"Public","body":"@channels = channels"}},{"html_id":"characteristics:String|Nil-instance-method","name":"characteristics","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":46,"url":null},"def":{"name":"characteristics","return_type":"String | ::Nil","visibility":"Public","body":"@characteristics"}},{"html_id":"characteristics=(characteristics:String|Nil)-instance-method","name":"characteristics=","abstract":false,"args":[{"name":"characteristics","external_name":"characteristics","restriction":"String | ::Nil"}],"args_string":"(characteristics : String | Nil)","args_html":"(characteristics : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":46,"url":null},"def":{"name":"characteristics=","args":[{"name":"characteristics","external_name":"characteristics","restriction":"String | ::Nil"}],"visibility":"Public","body":"@characteristics = characteristics"}},{"html_id":"default:Bool|Nil-instance-method","name":"default","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":43,"url":null},"def":{"name":"default","return_type":"Bool | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"default=(default:Bool|Nil)-instance-method","name":"default=","abstract":false,"args":[{"name":"default","external_name":"default","restriction":"Bool | ::Nil"}],"args_string":"(default : Bool | Nil)","args_html":"(default : Bool | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":43,"url":null},"def":{"name":"default=","args":[{"name":"default","external_name":"default","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@default = default"}},{"html_id":"forced:Bool|Nil-instance-method","name":"forced","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":44,"url":null},"def":{"name":"forced","return_type":"Bool | ::Nil","visibility":"Public","body":"@forced"}},{"html_id":"forced=(forced:Bool|Nil)-instance-method","name":"forced=","abstract":false,"args":[{"name":"forced","external_name":"forced","restriction":"Bool | ::Nil"}],"args_string":"(forced : Bool | Nil)","args_html":"(forced : Bool | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":44,"url":null},"def":{"name":"forced=","args":[{"name":"forced","external_name":"forced","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@forced = forced"}},{"html_id":"group_id:String|Nil-instance-method","name":"group_id","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":37,"url":null},"def":{"name":"group_id","return_type":"String | ::Nil","visibility":"Public","body":"@group_id"}},{"html_id":"group_id=(group_id:String|Nil)-instance-method","name":"group_id=","abstract":false,"args":[{"name":"group_id","external_name":"group_id","restriction":"String | ::Nil"}],"args_string":"(group_id : String | Nil)","args_html":"(group_id : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":37,"url":null},"def":{"name":"group_id=","args":[{"name":"group_id","external_name":"group_id","restriction":"String | ::Nil"}],"visibility":"Public","body":"@group_id = group_id"}},{"html_id":"instream_id:String|Nil-instance-method","name":"instream_id","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":45,"url":null},"def":{"name":"instream_id","return_type":"String | ::Nil","visibility":"Public","body":"@instream_id"}},{"html_id":"instream_id=(instream_id:String|Nil)-instance-method","name":"instream_id=","abstract":false,"args":[{"name":"instream_id","external_name":"instream_id","restriction":"String | ::Nil"}],"args_string":"(instream_id : String | Nil)","args_html":"(instream_id : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":45,"url":null},"def":{"name":"instream_id=","args":[{"name":"instream_id","external_name":"instream_id","restriction":"String | ::Nil"}],"visibility":"Public","body":"@instream_id = instream_id"}},{"html_id":"language:String|Nil-instance-method","name":"language","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":38,"url":null},"def":{"name":"language","return_type":"String | ::Nil","visibility":"Public","body":"@language"}},{"html_id":"language=(language:String|Nil)-instance-method","name":"language=","abstract":false,"args":[{"name":"language","external_name":"language","restriction":"String | ::Nil"}],"args_string":"(language : String | Nil)","args_html":"(language : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":38,"url":null},"def":{"name":"language=","args":[{"name":"language","external_name":"language","restriction":"String | ::Nil"}],"visibility":"Public","body":"@language = language"}},{"html_id":"name:String|Nil-instance-method","name":"name","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":40,"url":null},"def":{"name":"name","return_type":"String | ::Nil","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String|Nil)-instance-method","name":"name=","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String | Nil)","args_html":"(name : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":40,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String | ::Nil"}],"visibility":"Public","body":"@name = name"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-MEDIA` tag.\n\nThe output is constructed by joining the formatted attributes with commas,\nand then prefixing the result with `#EXT-X-MEDIA:`.\n\nExamples:\n\n```txt\nMediaItem.new(\n  type: \"AUDIO\",\n  group_id: \"aac\",\n  language: \"en\",\n  name: \"English\",\n  autoselect: true,\n  default: true,\n  uri: \"eng_audio.m3u8\",\n).to_s\n# => \"#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\\\"aac\\\",LANGUAGE=\\\"en\\\",NAME=\\\"English\\\",AUTOSELECT=YES,DEFAULT=YES,URI=\\\"eng_audio.m3u8\\\"\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-MEDIA</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":194,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-MEDIA:#{attributes.join(',')}\""}},{"html_id":"type:String|Nil-instance-method","name":"type","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":36,"url":null},"def":{"name":"type","return_type":"String | ::Nil","visibility":"Public","body":"@type"}},{"html_id":"type=(type:String|Nil)-instance-method","name":"type=","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String | ::Nil"}],"args_string":"(type : String | Nil)","args_html":"(type : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":36,"url":null},"def":{"name":"type=","args":[{"name":"type","external_name":"type","restriction":"String | ::Nil"}],"visibility":"Public","body":"@type = type"}},{"html_id":"uri:String|Nil-instance-method","name":"uri","abstract":false,"location":{"filename":"src/m3u8/media_item.cr","line_number":41,"url":null},"def":{"name":"uri","return_type":"String | ::Nil","visibility":"Public","body":"@uri"}},{"html_id":"uri=(uri:String|Nil)-instance-method","name":"uri=","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil)","args_html":"(uri : String | Nil)","location":{"filename":"src/m3u8/media_item.cr","line_number":41,"url":null},"def":{"name":"uri=","args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"@uri = uri"}}]},{"html_id":"m3u8/M3U8/Parser","path":"M3U8/Parser.html","kind":"class","full_name":"M3U8::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/parser.cr","line_number":4,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"The `Parser` class is responsible for processing an M3U8 (playlist) string,\nconverting it into a structured `Playlist` object.","summary":"<p>The <code><a href=\"../M3U8/Parser.html\">Parser</a></code> class is responsible for processing an M3U8 (playlist) string, converting it into a structured <code><a href=\"../M3U8/Playlist.html\">Playlist</a></code> object.</p>","class_methods":[{"html_id":"read(string:String)-class-method","name":"read","doc":"A convenience class method to create a parser and parse the input in one call.\n\nUsage Example:\n\n```\nm3u8_string = \"#EXTM3U....\"\nparser = Parser.new\nparser.read(m3u8_string)\n```","summary":"<p>A convenience class method to create a parser and parse the input in one call.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : String)","location":{"filename":"src/m3u8/parser.cr","line_number":61,"url":null},"def":{"name":"read","args":[{"name":"string","external_name":"string","restriction":"String"}],"visibility":"Public","body":"(new(string)).read"}}],"constructors":[{"html_id":"new(string:String)-class-method","name":"new","doc":"Initializes the `Parser` with the given M3U8 string.\n\nUsage Example:\n\n```\nm3u8_string = \"#EXTM3U....\"\nparser = Parser.new(m3u8_string)\nparser.read\n```","summary":"<p>Initializes the <code><a href=\"../M3U8/Parser.html\">Parser</a></code> with the given M3U8 string.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : String)","location":{"filename":"src/m3u8/parser.cr","line_number":44,"url":null},"def":{"name":"new","args":[{"name":"string","external_name":"string","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(string)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","doc":"Constract a `Parser` instance. Override the default new method to allow for a no-argument instantiation.\n\nUsage Example:\n\n```\nm3u8_string = \"#EXTM3U....\"\nparser = Parser.new\nparser.read(m3u8_string)\n```","summary":"<p>Constract a <code><a href=\"../M3U8/Parser.html\">Parser</a></code> instance.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":31,"url":null},"def":{"name":"new","visibility":"Public","body":"new(\"\")"}}],"instance_methods":[{"html_id":"is_parse:Bool-instance-method","name":"is_parse","doc":"Flag indicating whether the input has been parsed.","summary":"<p>Flag indicating whether the input has been parsed.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":14,"url":null},"def":{"name":"is_parse","return_type":"Bool","visibility":"Public","body":"@is_parse"}},{"html_id":"live:Bool|Nil-instance-method","name":"live","doc":"Indicates if the playlist is a live stream.","summary":"<p>Indicates if the playlist is a live stream.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":17,"url":null},"def":{"name":"live","return_type":"Bool | ::Nil","visibility":"Public","body":"@live"}},{"html_id":"playlist:Playlist-instance-method","name":"playlist","doc":"The resulting `Playlist` after parsing.","summary":"<p>The resulting <code><a href=\"../M3U8/Playlist.html\">Playlist</a></code> after parsing.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":11,"url":null},"def":{"name":"playlist","return_type":"Playlist","visibility":"Public","body":"@playlist"}},{"html_id":"read(string:String)-instance-method","name":"read","doc":"Overloaded instance method to allow re-parsing with a provided string.\n\nUsage Example:\n\n```\nm3u8_string = \"#EXTM3U....\"\nParser.read(m3u8_string)\n```","summary":"<p>Overloaded instance method to allow re-parsing with a provided string.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : String)","location":{"filename":"src/m3u8/parser.cr","line_number":73,"url":null},"def":{"name":"read","args":[{"name":"string","external_name":"string","restriction":"String"}],"visibility":"Public","body":"Parser.read(string)"}},{"html_id":"read-instance-method","name":"read","doc":"Main method that processes the input, line by line. Returns the fully parsed `Playlist`.\n\nUsage Example:\n\n```\n# spec/playlists/live_media_playlist.m3u8\nm3u8_string = \"\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:8\n#EXT-X-MEDIA-SEQUENCE:2680\n\n#EXTINF:7.975,\nhttps://priv.example.com/fileSequence2680.ts\n#EXTINF:7.941,\nhttps://priv.example.com/fileSequence2681.ts\n#EXTINF:7.975,\nhttps://priv.example.com/fileSequence2682.ts\n\"\n\nparser = Parser.new(m3u8_string)\n# => #<M3U8::Parser:0x7f0d038dbd40\n#     @is_parse=false,\n#     @item=nil,\n#     @live=nil,\n#     @playlist=\n#      #<M3U8::Playlist:0x7f0d04a925b0\n#       @cache=nil,\n#       @discontinuity_sequence=nil,\n#       @iframes_only=false,\n#       @independent_segments=false,\n#       @items=[],\n#       @live=false,\n#       @master=nil,\n#       @sequence=0,\n#       @target=10.0,\n#       @type=nil,\n#       @version=nil>,\n#     @reader=\n#      #<M3U8::Scanner:0x7f0d038d9450\n#       @index=0,\n#       @max_index=10,\n#       @peek_index=0,\n#       @reader=\n#        [\"#EXTM3U\",\n#         \"#EXT-X-VERSION:3\",\n#         \"#EXT-X-TARGETDURATION:8\",\n#         \"#EXT-X-MEDIA-SEQUENCE:2680\",\n#         \"\",\n#         \"#EXTINF:7.975,\",\n#         \"https://priv.example.com/fileSequence2680.ts\",\n#         \"#EXTINF:7.941,\",\n#         \"https://priv.example.com/fileSequence2681.ts\",\n#         \"#EXTINF:7.975,\",\n#         \"https://priv.example.com/fileSequence2682.ts\"],\n#       @size=11>>\n\nparser.read\n=> #<M3U8::Playlist:0x7f0d04a925b0\n#   @cache=nil,\n#   @discontinuity_sequence=nil,\n#   @iframes_only=false,\n#   @independent_segments=false,\n#   @items=\n#    [#<M3U8::SegmentItem:0x7f0d038dbbc0\n#      @byterange=#<M3U8::ByteRange:0x7f0d04a60900 @length=nil, @start=nil>,\n#      @comment=\"\",\n#      @duration=7.975,\n#      @program_date_time=#<M3U8::TimeItem:0x7f0d038e1930 @time=1970-01-01 00:00:00.0 UTC>,\n#      @segment=\"https://priv.example.com/fileSequence2680.ts\">,\n#     #<M3U8::SegmentItem:0x7f0d038dbb80\n#      @byterange=#<M3U8::ByteRange:0x7f0d04a608d0 @length=nil, @start=nil>,\n#      @comment=\"\",\n#      @duration=7.941,\n#      @program_date_time=#<M3U8::TimeItem:0x7f0d038e1900 @time=1970-01-01 00:00:00.0 UTC>,\n#      @segment=\"https://priv.example.com/fileSequence2681.ts\">,\n#     #<M3U8::SegmentItem:0x7f0d038dbb40\n#      @byterange=#<M3U8::ByteRange:0x7f0d04a608a0 @length=nil, @start=nil>,\n#      @comment=\"\",\n#      @duration=7.975,\n#      @program_date_time=#<M3U8::TimeItem:0x7f0d038e18d0 @time=1970-01-01 00:00:00.0 UTC>,\n#      @segment=\"https://priv.example.com/fileSequence2682.ts\">],\n#   @live=true,\n#   @master=false,\n#   @sequence=2680,\n#   @target=8.0,\n#   @type=nil,\n#   @version=3>\n```","summary":"<p>Main method that processes the input, line by line.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":166,"url":null},"def":{"name":"read","visibility":"Public","body":"if @is_parse\n  return @playlist\nend\nvalidate_file_format\nwhile !@reader.eof?\n  parse(@reader.current_line)\n  @reader.next\nend\nif !@playlist.master && @live.nil?\n  @playlist.live = true\nend\n@is_parse = true\n@playlist\n"}},{"html_id":"reader:Scanner-instance-method","name":"reader","doc":"`Scanner` instance to iterate through the input string.","summary":"<p><code>Scanner</code> instance to iterate through the input string.</p>","abstract":false,"location":{"filename":"src/m3u8/parser.cr","line_number":8,"url":null},"def":{"name":"reader","return_type":"Scanner","visibility":"Public","body":"@reader"}}]},{"html_id":"m3u8/M3U8/PlaybackStart","path":"M3U8/PlaybackStart.html","kind":"class","full_name":"M3U8::PlaybackStart","name":"PlaybackStart","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/playback_start.cr","line_number":24,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`PlaybackStart` represents the `EXT-X-START` tag used in HLS playlists.\n\nThe `EXT-X-START` tag specifies the preferred starting point for playback of\na Media Playlist. It includes the following attributes:\n\n  - **TIME-OFFSET** (required): A decimal number representing the offset (in seconds)\n    from the beginning of the playlist where playback should start. A negative\n    value indicates that playback should begin a certain time before the end of\n    the playlist.\n  - **PRECISE** (optional): A boolean value that indicates whether the time offset is\n    precise. This attribute is represented as \"YES\" for true and \"NO\" for false.\n\nAccording to [RFC 8216, Section 4.3.5.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.5.2),\nthe tag is formatted as follows:\n\n```txt\n#EXT-X-START:TIME-OFFSET=-12.9,PRECISE=YES\n```\n\nThis class provides methods to parse an `EXT-X-START` tag from a text string, create\na new instance using a NamedTuple of parameters, and output the tag as a properly\nformatted string.","summary":"<p><code><a href=\"../M3U8/PlaybackStart.html\">PlaybackStart</a></code> represents the <code>EXT-X-START</code> tag used in HLS playlists.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a text string representing an `EXT-X-START` tag and returns a new `PlaybackStart` instance.\n\nIt extracts the *TIME-OFFSET* and *PRECISE* attributes from the tag line using the\n`parse_attributes` helper (defined in `M3U8::Concern`), converts them to the appropriate types\n(with precise parsed as a boolean), and creates a new instance.\n\nExample:\n\n```\ntext = \"#EXT-X-START:TIME-OFFSET=-12.9,PRECISE=YES\"\nPlaybackStart.parse(text)\n# => #<M3U8::PlaybackStart:0x7acbac72a2a0 @precise=true, @time_offset=-12.9>\n```","summary":"<p>Parses a text string representing an <code>EXT-X-START</code> tag and returns a new <code><a href=\"../M3U8/PlaybackStart.html\">PlaybackStart</a></code> instance.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/playback_start.cr","line_number":46,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(text)\nnew(time_offset: attributes[\"TIME-OFFSET\"], precise: parse_boolean(attributes[\"PRECISE\"]?))\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `PlaybackStart` instance from a NamedTuple of parameters.\n\nThe NamedTuple can include:\n  - `time_offset` (Float64 or convertible to Float64): The preferred start offset.\n  - `precise` (Bool): The precision flag.\n\nExample:\n```\noptions = {\n  time_offset: -12.9,\n  precise:     true,\n}\nPlaybackStart.new(options)\n# => #<M3U8::PlaybackStart:0x7a950cc56270 @precise=true, @time_offset=-12.9>\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/PlaybackStart.html\">PlaybackStart</a></code> instance from a NamedTuple of parameters.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/playback_start.cr","line_number":69,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(time_offset: params[:time_offset], precise: params[:precise]?)"}},{"html_id":"new(time_offset,precise:Bool|Nil=nil)-class-method","name":"new","doc":"Initializes a new `PlaybackStart` instance.\n\nThe time_offset is converted to a Float, and the precise flag is stored as provided.\n\nExamples:\n```\ntime_offset = -12.9\nprecise = true\nPlaybackStart.new(time_offset)          # => #<M3U8::PlaybackStart:0x7a8a1a6fd240 @precise=nil, @time_offset=-12.9>\nPlaybackStart.new(time_offset, precise) # => #<M3U8::PlaybackStart:0x7a8a1a6fd210 @precise=true, @time_offset=-12.9>\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/PlaybackStart.html\">PlaybackStart</a></code> instance.</p>","abstract":false,"args":[{"name":"time_offset","external_name":"time_offset","restriction":""},{"name":"precise","default_value":"nil","external_name":"precise","restriction":"::Bool | ::Nil"}],"args_string":"(time_offset, precise : Bool | Nil = nil)","args_html":"(time_offset, precise : Bool | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/playback_start.cr","line_number":87,"url":null},"def":{"name":"new","args":[{"name":"time_offset","external_name":"time_offset","restriction":""},{"name":"precise","default_value":"nil","external_name":"precise","restriction":"::Bool | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(time_offset, precise)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"precise:Bool|Nil-instance-method","name":"precise","doc":"An optional flag indicating whether the time offset is precise.","summary":"<p>An optional flag indicating whether the time offset is precise.</p>","abstract":false,"location":{"filename":"src/m3u8/playback_start.cr","line_number":31,"url":null},"def":{"name":"precise","return_type":"Bool | ::Nil","visibility":"Public","body":"@precise"}},{"html_id":"precise=(precise:Bool|Nil)-instance-method","name":"precise=","doc":"An optional flag indicating whether the time offset is precise.","summary":"<p>An optional flag indicating whether the time offset is precise.</p>","abstract":false,"args":[{"name":"precise","external_name":"precise","restriction":"Bool | ::Nil"}],"args_string":"(precise : Bool | Nil)","args_html":"(precise : Bool | Nil)","location":{"filename":"src/m3u8/playback_start.cr","line_number":31,"url":null},"def":{"name":"precise=","args":[{"name":"precise","external_name":"precise","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@precise = precise"}},{"html_id":"time_offset:Float64-instance-method","name":"time_offset","doc":"The time offset in seconds, indicating the preferred start point.","summary":"<p>The time offset in seconds, indicating the preferred start point.</p>","abstract":false,"location":{"filename":"src/m3u8/playback_start.cr","line_number":28,"url":null},"def":{"name":"time_offset","return_type":"Float64","visibility":"Public","body":"@time_offset"}},{"html_id":"time_offset=(time_offset:Float64)-instance-method","name":"time_offset=","doc":"The time offset in seconds, indicating the preferred start point.","summary":"<p>The time offset in seconds, indicating the preferred start point.</p>","abstract":false,"args":[{"name":"time_offset","external_name":"time_offset","restriction":"Float64"}],"args_string":"(time_offset : Float64)","args_html":"(time_offset : Float64)","location":{"filename":"src/m3u8/playback_start.cr","line_number":28,"url":null},"def":{"name":"time_offset=","args":[{"name":"time_offset","external_name":"time_offset","restriction":"Float64"}],"visibility":"Public","body":"@time_offset = time_offset"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-START` tag.\n\nIt assembles the formatted attributes and prefixes them with `#EXT-X-START:`.\n\nExample:\n\n```txt\noptions = {\n  time_offset: -12.9,\n  precise:     true,\n}\nPlaybackStart.new(options).to_s\n# => \"#EXT-X-START:TIME-OFFSET=-12.9,PRECISE=YES\"\n\nPlaybackStart.new(time_offset: -12.9).to_s\n# => \"#EXT-X-START:TIME-OFFSET=-12.9\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-START</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playback_start.cr","line_number":108,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-START:#{attributes.join(',')}\""}}]},{"html_id":"m3u8/M3U8/Playlist","path":"M3U8/Playlist.html","kind":"class","full_name":"M3U8::Playlist","name":"Playlist","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/playlist.cr","line_number":105,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`Playlist` represents an m3u8 playlist, which can be either a Master Playlist or a Media Playlist.\n\nIn an HLS playlist, as defined in [RFC 8216](https://tools.ietf.org/html/rfc8216),\nthe file begins with the `EXTM3U` tag and may\ncontain a variety of global and segment-specific tags. A Master Playlist includes entries\nfor different Variant Streams (using `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tags),\nwhile a Media Playlist lists the media segments (with `EXTINF`, `EXT-X-BYTERANGE`, etc.).\n\n**Basic Tags:**\n- `EXTM3U`: `Playlist`\n- `EXT-X-VERSION`: `Playlist#version`\n\n**Media Playlist Tags:**\n- `EXT-X-TARGETDURATION`: `Playlist#target`\n- `EXT-X-MEDIA-SEQUENCE`: `Playlist#sequence`\n- `EXT-X-DISCONTINUITY-SEQUENCE`: `Playlist#discontinuity_sequence`\n- `EXT-X-ENDLIST`: `Playlist.footer`\n- `EXT-X-PLAYLIST-TYPE`: `Playlist#type`\n- `EXT-X-I-FRAMES-ONLY`: `Playlist#iframes_only`\n- `EXT-X-ALLOW-CACHE`: `Playlist#cache` (deprecated in protocol version 7)\n\n**Media Segment Tags:**\n- `EXTINF`: `SegmentItem`\n- `EXT-X-BYTERANGE`: `ByteRange`\n- `EXT-X-DISCONTINUITY`: `DiscontinuityItem`\n- `EXT-X-KEY`: `KeyItem`\n- `EXT-X-MAP`: `MapItem`\n- `EXT-X-PROGRAM-DATE-TIME`: `TimeItem`\n- `EXT-X-DATERANGE`: `DateRangeItem`\n\n**Master Playlist tags:**\n- `EXT-X-MEDIA`: `MediaItem`\n- `EXT-X-STREAM-INF`: `PlaylistItem` with `Playlist#iframe` set to `false`\n- `EXT-X-I-FRAME-STREAM-INF`: `PlaylistItem` with `Playlist#iframe` set to `true`\n- `EXT-X-SESSION-DATA`: `SessionDataItem`\n- `EXT-X-SESSION-KEY`: `SessionKeyItem`\n\n**Media or Master Playlist Tags:**\n- `EXT-X-INDEPENDENT-SEGMENTS`: `Playlist#independent_segments`\n- `EXT-X-START`: `PlaybackStart`\n\nThis class maintains various playlist-wide properties:\n  - **master**:                  Indicates whether the playlist is a Master Playlist.\n  - **version**:                 The protocol compatibility version (EXT-X-VERSION).\n  - **cache**:                   Whether caching is allowed (`EXT-X-ALLOW-CACHE` tag was removed in protocol version 7).\n  - **discontinuity_sequence**:  The discontinuity sequence number (EXT-X-DISCONTINUITY-SEQUENCE).\n  - **type**:                    The playlist type (e.g., VOD or EVENT, from EXT-X-PLAYLIST-TYPE).\n  - **target**:                  The target duration for media segments (EXT-X-TARGETDURATION).\n  - **sequence**:                The Media Sequence Number (EXT-X-MEDIA-SEQUENCE).\n  - **iframes_only**:            Indicates if the playlist is an I-frame only playlist (EXT-X-I-FRAMES-ONLY).\n  - **independent_segments**:    Flag indicating if segments can be independently decoded (`EXT-X-INDEPENDENT-SEGMENTS`).\n  - **live**:                    A boolean flag indicating whether the playlist is live (no endlist tag).\n  - **items**:                   An array of playlist items (which can be SegmentItem, PlaylistItem, etc.).\n\nThe class provides methods to create a new `Playlist`, to parse a playlist\nfrom a string input, and to generate the complete playlist as a string by combining `header`, `body`,\nand `footer` components.\n\nExamples:\n\nCreating a new Playlist with specific parameters:\n```\noptions = {\n  version:                7,\n  cache:                  false,\n  target:                 12,\n  sequence:               1,\n  discontinuity_sequence: 2,\n  type:                   \"VOD\",\n  independent_segments:   true,\n}\nplaylist = Playlist.new(options)\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test_01.ts\")\nplaylist.items << SegmentItem.new(duration: 9.891, segment: \"test_02.ts\")\nplaylist.items << SegmentItem.new(duration: 10.556, segment: \"test_03.ts\")\nplaylist.items << SegmentItem.new(duration: 8.790, segment: \"test_04.ts\")\nplaylist.duration # => 40.227999999999994\nplaylist.to_s\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-PLAYLIST-TYPE:VOD\\n\" +\n#    \"#EXT-X-VERSION:7\\n\" +\n#    \"#EXT-X-INDEPENDENT-SEGMENTS\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:1\\n\" +\n#    \"#EXT-X-DISCONTINUITY-SEQUENCE:2\\n\" +\n#    \"#EXT-X-ALLOW-CACHE:NO\\n\" +\n#    \"#EXT-X-TARGETDURATION:12\\n\" +\n#    \"#EXTINF:10.991,\\n\" +\n#    \"test_01.ts\\n\" +\n#    \"#EXTINF:9.891,\\n\" +\n#    \"test_02.ts\\n\" +\n#    \"#EXTINF:10.556,\\n\" +\n#    \"test_03.ts\\n\" +\n#    \"#EXTINF:8.79,\\n\" +\n#    \"test_04.ts\\n\" +\n#    \"#EXT-X-ENDLIST\\n\"\n```\n\nParsing a complete playlist string:\n```\nm3u8_string = \"#EXTM3U\\n#EXT-X-VERSION:7\\n#EXT-X-TARGETDURATION:12\\n...\"\nPlaylist.parse(m3u8_string)\n# => #<M3U8::Playlist ...>\n```","summary":"<p><code><a href=\"../M3U8/Playlist.html\">Playlist</a></code> represents an m3u8 playlist, which can be either a Master Playlist or a Media Playlist.</p>","class_methods":[{"html_id":"codecs(options=NamedTuple.new)-class-method","name":"codecs","doc":"Generates the *CODECS* attribute string for the playlist.\n\nThis method instantiates a `Codecs` object with the given options and returns its\nstring representation. The *CODECS* attribute lists the codecs used in the media, such as\n\"avc1.66.30,mp4a.40.2\". For details on how the codecs are determined, refer to the `Codecs` class.\n\nExample:\n\n```\noptions = {\n  profile:     \"baseline\",\n  level:       3.0,\n  audio_codec: \"aac-lc\",\n}\nPlaylist.codecs(options) # => \"avc1.66.30,mp4a.40.2\"\n```","summary":"<p>Generates the <em>CODECS</em> attribute string for the playlist.</p>","abstract":false,"args":[{"name":"options","default_value":"NamedTuple.new","external_name":"options","restriction":""}],"args_string":"(options = NamedTuple.new)","args_html":"(options = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/playlist.cr","line_number":281,"url":null},"def":{"name":"codecs","args":[{"name":"options","default_value":"NamedTuple.new","external_name":"options","restriction":""}],"visibility":"Public","body":"(Codecs.new(options)).to_s"}},{"html_id":"parse(input)-class-method","name":"parse","doc":"Parses a playlist string into a `Playlist` instance.\n\nExample:\n\n```\nm3u8_string = \"#EXTM3U\\n#EXT-X-VERSION:7\\n#EXT-X-TARGETDURATION:12\\n...\"\nPlaylist.parse(m3u8_string)\n# => #<M3U8::Playlist ...>\n```","summary":"<p>Parses a playlist string into a <code><a href=\"../M3U8/Playlist.html\">Playlist</a></code> instance.</p>","abstract":false,"args":[{"name":"input","external_name":"input","restriction":""}],"args_string":"(input)","args_html":"(input)","location":{"filename":"src/m3u8/playlist.cr","line_number":294,"url":null},"def":{"name":"parse","args":[{"name":"input","external_name":"input","restriction":""}],"visibility":"Public","body":"Parser.read(input)"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"```\nConstructs a new Playlist instance from a NamedTuple of parameters.\n\nThe NamedTuple may include keys for properties such as:\n  :master, :version, :cache, :discontinuity_sequence, :type,\n  :target, :sequence, :iframes_only, :independent_segments, :live, and :items.\n\nExample:\n```\noptions = {\n  version:                7,\n  cache:                  false,\n  target:                 12,\n  sequence:               1,\n  discontinuity_sequence: 2,\n  type:                   \"VOD\",\n  independent_segments:   true,\n}\nPlaylist.new(options)\n# => #<M3U8::Playlist:0x79adbb379540\n#     @cache=false,\n#     @discontinuity_sequence=2,\n#     @iframes_only=false,\n#     @independent_segments=true,\n#     @items=[],\n#     @live=false,\n#     @master=nil,\n#     @sequence=1,\n#     @target=12.0,\n#     @type=\"VOD\",\n#     @version=7>\n```","summary":"<pre><code class=\"language-Constructs\"></code></pre>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/playlist.cr","line_number":212,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(master: params[:master]?, version: params[:version]?, cache: params[:cache]?, discontinuity_sequence: params[:discontinuity_sequence]?, type: params[:type]?, target: params[:target]?, sequence: params[:sequence]?, iframes_only: params[:iframes_only]?, independent_segments: params[:independent_segments]?, live: params[:live]?, items: params[:items]?)"}},{"html_id":"new(master:Bool|Nil=nil,version:Int32|Nil=nil,cache:Bool|Nil=nil,discontinuity_sequence:Int32|Nil=nil,type:Nil|String=nil,target=nil,sequence=nil,iframes_only=nil,independent_segments=nil,live=nil,items=nil)-class-method","name":"new","doc":"Initializes a new Playlist instance.\n\nExample:\n```\nPlaylist.new(\n  version: 7,\n  cache: false,\n  target: 12,\n  sequence: 1,\n  discontinuity_sequence: 2,\n  type: \"VOD\",\n  independent_segments: true,\n)\n# => #<M3U8::Playlist:0x78d37cb334d0\n#     @cache=false,\n#     @discontinuity_sequence=2,\n#     @iframes_only=false,\n#     @independent_segments=true,\n#     @items=[],\n#     @live=false,\n#     @master=nil,\n#     @sequence=1,\n#     @target=12.0,\n#     @type=\"VOD\",\n#     @version=7>\n```","summary":"<p>Initializes a new Playlist instance.</p>","abstract":false,"args":[{"name":"master","default_value":"nil","external_name":"master","restriction":"::Bool | ::Nil"},{"name":"version","default_value":"nil","external_name":"version","restriction":"::Int32 | ::Nil"},{"name":"cache","default_value":"nil","external_name":"cache","restriction":"::Bool | ::Nil"},{"name":"discontinuity_sequence","default_value":"nil","external_name":"discontinuity_sequence","restriction":"::Int32 | ::Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Nil | ::String"},{"name":"target","default_value":"nil","external_name":"target","restriction":""},{"name":"sequence","default_value":"nil","external_name":"sequence","restriction":""},{"name":"iframes_only","default_value":"nil","external_name":"iframes_only","restriction":""},{"name":"independent_segments","default_value":"nil","external_name":"independent_segments","restriction":""},{"name":"live","default_value":"nil","external_name":"live","restriction":""},{"name":"items","default_value":"nil","external_name":"items","restriction":""}],"args_string":"(master : Bool | Nil = nil, version : Int32 | Nil = nil, cache : Bool | Nil = nil, discontinuity_sequence : Int32 | Nil = nil, type : Nil | String = nil, target = nil, sequence = nil, iframes_only = nil, independent_segments = nil, live = nil, items = nil)","args_html":"(master : Bool | Nil = <span class=\"n\">nil</span>, version : Int32 | Nil = <span class=\"n\">nil</span>, cache : Bool | Nil = <span class=\"n\">nil</span>, discontinuity_sequence : Int32 | Nil = <span class=\"n\">nil</span>, type : Nil | String = <span class=\"n\">nil</span>, target = <span class=\"n\">nil</span>, sequence = <span class=\"n\">nil</span>, iframes_only = <span class=\"n\">nil</span>, independent_segments = <span class=\"n\">nil</span>, live = <span class=\"n\">nil</span>, items = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/playlist.cr","line_number":254,"url":null},"def":{"name":"new","args":[{"name":"master","default_value":"nil","external_name":"master","restriction":"::Bool | ::Nil"},{"name":"version","default_value":"nil","external_name":"version","restriction":"::Int32 | ::Nil"},{"name":"cache","default_value":"nil","external_name":"cache","restriction":"::Bool | ::Nil"},{"name":"discontinuity_sequence","default_value":"nil","external_name":"discontinuity_sequence","restriction":"::Int32 | ::Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Nil | ::String"},{"name":"target","default_value":"nil","external_name":"target","restriction":""},{"name":"sequence","default_value":"nil","external_name":"sequence","restriction":""},{"name":"iframes_only","default_value":"nil","external_name":"iframes_only","restriction":""},{"name":"independent_segments","default_value":"nil","external_name":"independent_segments","restriction":""},{"name":"live","default_value":"nil","external_name":"live","restriction":""},{"name":"items","default_value":"nil","external_name":"items","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(master, version, cache, discontinuity_sequence, type, target, sequence, iframes_only, independent_segments, live, items)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body-instance-method","name":"body","doc":"Returns the body section of the playlist as a string.\n\nThe body consists of all the items (segments or playlist entries) that have been added.\n\nExamples:\n\n```\nplaylist = Playlist.new(version: 6, independent_segments: true)\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test.ts\")\nplaylist.body\n# => \"#EXTINF:10.991,\\n\"\n#    \"test.ts\"\n```","summary":"<p>Returns the body section of the playlist as a string.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":467,"url":null},"def":{"name":"body","visibility":"Public","body":"body_attributes.join('\\n')"}},{"html_id":"cache:Bool|Nil-instance-method","name":"cache","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":111,"url":null},"def":{"name":"cache","return_type":"Bool | ::Nil","visibility":"Public","body":"@cache"}},{"html_id":"cache=(cache:Bool|Nil)-instance-method","name":"cache=","abstract":false,"args":[{"name":"cache","external_name":"cache","restriction":"Bool | ::Nil"}],"args_string":"(cache : Bool | Nil)","args_html":"(cache : Bool | Nil)","location":{"filename":"src/m3u8/playlist.cr","line_number":111,"url":null},"def":{"name":"cache=","args":[{"name":"cache","external_name":"cache","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@cache = cache"}},{"html_id":"discontinuity_sequence:Int32|Nil-instance-method","name":"discontinuity_sequence","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":112,"url":null},"def":{"name":"discontinuity_sequence","return_type":"Int32 | ::Nil","visibility":"Public","body":"@discontinuity_sequence"}},{"html_id":"discontinuity_sequence=(discontinuity_sequence:Int32|Nil)-instance-method","name":"discontinuity_sequence=","abstract":false,"args":[{"name":"discontinuity_sequence","external_name":"discontinuity_sequence","restriction":"Int32 | ::Nil"}],"args_string":"(discontinuity_sequence : Int32 | Nil)","args_html":"(discontinuity_sequence : Int32 | Nil)","location":{"filename":"src/m3u8/playlist.cr","line_number":112,"url":null},"def":{"name":"discontinuity_sequence=","args":[{"name":"discontinuity_sequence","external_name":"discontinuity_sequence","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@discontinuity_sequence = discontinuity_sequence"}},{"html_id":"duration-instance-method","name":"duration","doc":"Calculates the total duration of the playlist by summing the durations of all `SegmentItems`.\n\nExamples:\n\n```\nplaylist = Playlist.new\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test_01.ts\")\nplaylist.items << SegmentItem.new(duration: 9.891, segment: \"test_02.ts\")\nplaylist.items << SegmentItem.new(duration: 10.556, segment: \"test_03.ts\")\nplaylist.items << SegmentItem.new(duration: 8.790, segment: \"test_04.ts\")\nplaylist.duration          # => 40.227999999999994\nplaylist.duration.round(3) # => 40.228\n```","summary":"<p>Calculates the total duration of the playlist by summing the durations of all <code>SegmentItems</code>.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":390,"url":null},"def":{"name":"duration","visibility":"Public","body":"items.reduce(0.0) do |acc, item|\n  if item.is_a?(SegmentItem)\n    duration = item.duration\n  end\n  duration || (duration = 0.0)\n  acc + duration\nend"}},{"html_id":"footer-instance-method","name":"footer","doc":"Returns the footer section of the playlist as a string.\n\nFor Video On Demand (VOD) playlists, the footer typically includes the\n`#EXT-X-ENDLIST` tag, which signals that no additional segments will be added.\nThis tag is omitted for `live` playlists or `master` playlists.\n\nExamples:\n\n```\nplaylist = Playlist.new(version: 6, independent_segments: true)\nplaylist.footer # => \"#EXT-X-ENDLIST\"\n\nplaylist = Playlist.new(live: true)\nplaylist.footer # => \"\"\n\nplaylist = Playlist.new(master: true)\nplaylist.footer # => \"\"\n```","summary":"<p>Returns the footer section of the playlist as a string.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":489,"url":null},"def":{"name":"footer","visibility":"Public","body":"footer_attributes.join('\\n')"}},{"html_id":"header-instance-method","name":"header","doc":"Returns the header section of the playlist as a string.\n\nThe header tags based on whether the playlist is a Master or Media Playlist.\n\nExamples:\n\n```\nplaylist = Playlist.new(master: true, version: 6, independent_segments: true)\nplaylist.header\n# => \"#EXTM3U\\n\" \\\n#    \"#EXT-X-VERSION:6\\n\" \\\n#    \"#EXT-X-INDEPENDENT-SEGMENTS\"\n\nplaylist = Playlist.new(version: 6, independent_segments: true)\nplaylist.header\n# => \"#EXTM3U\\n\" \\\n#    \"#EXT-X-VERSION:6\\n\" \\\n#    \"#EXT-X-INDEPENDENT-SEGMENTS\\n\" \\\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" \\\n#    \"#EXT-X-TARGETDURATION:10\"\n```","summary":"<p>Returns the header section of the playlist as a string.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":450,"url":null},"def":{"name":"header","visibility":"Public","body":"header_attributes.join('\\n')"}},{"html_id":"iframes_only:Bool-instance-method","name":"iframes_only","doc":"Specifies whether the playlist is an I-frame only playlist.\nIf set to true, the playlist header will include the `EXT-X-I-FRAMES-ONLY` tag,\nindicating that the playlist contains only I-frame segments (useful for trick play).\n\nExamples:\n\n```\nplaylist = Playlist.new\nplaylist.iframes_only = true\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-I-FRAMES-ONLY\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.iframes_only = false\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.iframes_only = nil\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n```","summary":"<p>Specifies whether the playlist is an I-frame only playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":145,"url":null},"def":{"name":"iframes_only","return_type":"Bool","visibility":"Public","body":"@iframes_only"}},{"html_id":"iframes_only=(iframes_only:Bool)-instance-method","name":"iframes_only=","doc":"Specifies whether the playlist is an I-frame only playlist.\nIf set to true, the playlist header will include the `EXT-X-I-FRAMES-ONLY` tag,\nindicating that the playlist contains only I-frame segments (useful for trick play).\n\nExamples:\n\n```\nplaylist = Playlist.new\nplaylist.iframes_only = true\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-I-FRAMES-ONLY\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.iframes_only = false\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.iframes_only = nil\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n```","summary":"<p>Specifies whether the playlist is an I-frame only playlist.</p>","abstract":false,"args":[{"name":"iframes_only","external_name":"iframes_only","restriction":"Bool"}],"args_string":"(iframes_only : Bool)","args_html":"(iframes_only : Bool)","location":{"filename":"src/m3u8/playlist.cr","line_number":145,"url":null},"def":{"name":"iframes_only=","args":[{"name":"iframes_only","external_name":"iframes_only","restriction":"Bool"}],"visibility":"Public","body":"@iframes_only = iframes_only"}},{"html_id":"independent_segments:Bool-instance-method","name":"independent_segments","doc":"When set to true, the playlist header will include the `EXT-X-INDEPENDENT-SEGMENTS` tag.\n\nThis tag indicates that each Media Segment in the playlist can be independently decoded,\nwhich is important for certain playback scenarios in HLS.\n\nIf the property is `false` or `nil`, the `EXT-X-INDEPENDENT-SEGMENTS` tag will not be output.\n\nExample:\n```\nplaylist = Playlist.new\nplaylist.independent_segments = true\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-INDEPENDENT-SEGMENTS\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.independent_segments = false\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.independent_segments = nil\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n```","summary":"<p>When set to true, the playlist header will include the <code>EXT-X-INDEPENDENT-SEGMENTS</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":176,"url":null},"def":{"name":"independent_segments","return_type":"Bool","visibility":"Public","body":"@independent_segments"}},{"html_id":"independent_segments=(independent_segments:Bool)-instance-method","name":"independent_segments=","doc":"When set to true, the playlist header will include the `EXT-X-INDEPENDENT-SEGMENTS` tag.\n\nThis tag indicates that each Media Segment in the playlist can be independently decoded,\nwhich is important for certain playback scenarios in HLS.\n\nIf the property is `false` or `nil`, the `EXT-X-INDEPENDENT-SEGMENTS` tag will not be output.\n\nExample:\n```\nplaylist = Playlist.new\nplaylist.independent_segments = true\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-INDEPENDENT-SEGMENTS\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.independent_segments = false\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n\nplaylist.independent_segments = nil\nplaylist.header\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-MEDIA-SEQUENCE:0\\n\" +\n#    \"#EXT-X-TARGETDURATION:10\"\n```","summary":"<p>When set to true, the playlist header will include the <code>EXT-X-INDEPENDENT-SEGMENTS</code> tag.</p>","abstract":false,"args":[{"name":"independent_segments","external_name":"independent_segments","restriction":"Bool"}],"args_string":"(independent_segments : Bool)","args_html":"(independent_segments : Bool)","location":{"filename":"src/m3u8/playlist.cr","line_number":176,"url":null},"def":{"name":"independent_segments=","args":[{"name":"independent_segments","external_name":"independent_segments","restriction":"Bool"}],"visibility":"Public","body":"@independent_segments = independent_segments"}},{"html_id":"items:Array(Items)-instance-method","name":"items","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":178,"url":null},"def":{"name":"items","return_type":"Array(Items)","visibility":"Public","body":"@items"}},{"html_id":"items=(items:Array(Items))-instance-method","name":"items=","abstract":false,"args":[{"name":"items","external_name":"items","restriction":"Array(Items)"}],"args_string":"(items : Array(Items))","args_html":"(items : Array(Items))","location":{"filename":"src/m3u8/playlist.cr","line_number":178,"url":null},"def":{"name":"items=","args":[{"name":"items","external_name":"items","restriction":"Array(Items)"}],"visibility":"Public","body":"@items = items"}},{"html_id":"live:Bool-instance-method","name":"live","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":177,"url":null},"def":{"name":"live","return_type":"Bool","visibility":"Public","body":"@live"}},{"html_id":"live=(live:Bool)-instance-method","name":"live=","abstract":false,"args":[{"name":"live","external_name":"live","restriction":"Bool"}],"args_string":"(live : Bool)","args_html":"(live : Bool)","location":{"filename":"src/m3u8/playlist.cr","line_number":177,"url":null},"def":{"name":"live=","args":[{"name":"live","external_name":"live","restriction":"Bool"}],"visibility":"Public","body":"@live = live"}},{"html_id":"live?-instance-method","name":"live?","doc":"Returns `true` if the playlist is considered live.\n\n- For a Master Playlist, live is always false.\n- For a Media Playlist, the live property is determined by the parsed content.\n\nExample:\n\n```\nplaylist = Playlist.new(live: true)\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test_01.ts\")\nplaylist.live? # => true\n```","summary":"<p>Returns <code>true</code> if the playlist is considered live.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":310,"url":null},"def":{"name":"live?","visibility":"Public","body":"master? ? false : live"}},{"html_id":"master:Bool|Nil-instance-method","name":"master","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":108,"url":null},"def":{"name":"master","return_type":"Bool | ::Nil","visibility":"Public","body":"@master"}},{"html_id":"master=(master:Bool|Nil)-instance-method","name":"master=","abstract":false,"args":[{"name":"master","external_name":"master","restriction":"Bool | ::Nil"}],"args_string":"(master : Bool | Nil)","args_html":"(master : Bool | Nil)","location":{"filename":"src/m3u8/playlist.cr","line_number":108,"url":null},"def":{"name":"master=","args":[{"name":"master","external_name":"master","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@master = master"}},{"html_id":"master?-instance-method","name":"master?","doc":"Returns `true` if the playlist is a Master Playlist.\n\nIf the `master` property is explicitly set (i.e. not nil), its value is returned.\nOtherwise, the playlist type is inferred based on the items it contains:\n- If there are no `PlaylistItem` and no `SegmentItem` entries, it returns false.\n- If there is at least one `PlaylistItem` entry, the playlist is considered a Master Playlist.\n\nExamples:\n\n```\nplaylist = Playlist.new(master: true)\nplaylist.master? # => true\n\nplaylist = Playlist.new\nplaylist.master? # => false\n\nplaylist = Playlist.new\nplaylist.items << PlaylistItem.new(program_id: 1, width: 1920, height: 1080, codecs: \"avc\", bandwidth: 540, uri: \"test.url\")\nplaylist.master? # => true\n\nplaylist = Playlist.new\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test.ts\")\nplaylist.master? # => false\n```","summary":"<p>Returns <code>true</code> if the playlist is a Master Playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":338,"url":null},"def":{"name":"master?","visibility":"Public","body":"if master.nil?\nelse\n  return master\nend\n(playlist_size.zero? && segment_size.zero?) ? false : playlist_size > 0\n"}},{"html_id":"sequence:Int32-instance-method","name":"sequence","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":116,"url":null},"def":{"name":"sequence","return_type":"Int32","visibility":"Public","body":"@sequence"}},{"html_id":"sequence=(sequence:Int32)-instance-method","name":"sequence=","abstract":false,"args":[{"name":"sequence","external_name":"sequence","restriction":"Int32"}],"args_string":"(sequence : Int32)","args_html":"(sequence : Int32)","location":{"filename":"src/m3u8/playlist.cr","line_number":116,"url":null},"def":{"name":"sequence=","args":[{"name":"sequence","external_name":"sequence","restriction":"Int32"}],"visibility":"Public","body":"@sequence = sequence"}},{"html_id":"target:Float64-instance-method","name":"target","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":115,"url":null},"def":{"name":"target","return_type":"Float64","visibility":"Public","body":"@target"}},{"html_id":"target=(target:Float64)-instance-method","name":"target=","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"Float64"}],"args_string":"(target : Float64)","args_html":"(target : Float64)","location":{"filename":"src/m3u8/playlist.cr","line_number":115,"url":null},"def":{"name":"target=","args":[{"name":"target","external_name":"target","restriction":"Float64"}],"visibility":"Public","body":"@target = target"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the complete playlist as a string.\n\nThe output is generated by concatenating the `header`, `body`, and `footer` sections\nof the playlist, separated by newline characters.\n\nExamples:\n\n```\nplaylist = Playlist.new\nplaylist.items << PlaylistItem.new(program_id: \"1\", uri: \"playlist_url\", bandwidth: 6400, audio_codec: \"mp3\")\nplaylist.to_s\n# => \"#EXTM3U\\n\" +\n#    \"#EXT-X-STREAM-INF:PROGRAM-ID=1,CODECS=\\\"mp4a.40.34\\\",BANDWIDTH=6400\\n\" +\n#    \"playlist_url\\n\"\n```","summary":"<p>Returns the complete playlist as a string.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":425,"url":null},"def":{"name":"to_s","visibility":"Public","body":"(attributes.join('\\n')) + \"\\n\""}},{"html_id":"type:String|Nil-instance-method","name":"type","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":113,"url":null},"def":{"name":"type","return_type":"String | ::Nil","visibility":"Public","body":"@type"}},{"html_id":"type=(type:String|Nil)-instance-method","name":"type=","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String | ::Nil"}],"args_string":"(type : String | Nil)","args_html":"(type : String | Nil)","location":{"filename":"src/m3u8/playlist.cr","line_number":113,"url":null},"def":{"name":"type=","args":[{"name":"type","external_name":"type","restriction":"String | ::Nil"}],"visibility":"Public","body":"@type = type"}},{"html_id":"valid!-instance-method","name":"valid!","doc":"Validates the playlist and raises an `Error::PlaylistType` error if it is invalid.\n\nExamples:\n\n```\nplaylist = Playlist.new\nplaylist.items << PlaylistItem.new(program_id: 1, width: 1920, height: 1080, codecs: \"avc\", bandwidth: 540, uri: \"test.url\")\nplaylist.valid! # => nil\n\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test.ts\")\nplaylist.valid! # => raises M3U8::Error::PlaylistType\n```","summary":"<p>Validates the playlist and raises an <code><a href=\"../M3U8/Error/PlaylistType.html\">Error::PlaylistType</a></code> error if it is invalid.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":373,"url":null},"def":{"name":"valid!","visibility":"Public","body":"if valid?\nelse\n  raise(Error::PlaylistType.new(\"Playlist is invalid.\"))\nend"}},{"html_id":"valid?-instance-method","name":"valid?","doc":"Validates the playlist.\n\nReturns `true` if either the number of `PlaylistItem` entries or `SegmentItem` entries is zero.\nOtherwise, it returns `false`, indicating a potential mismatch in playlist types.\n\nExample:\n```\nplaylist = Playlist.new\nplaylist.items << PlaylistItem.new(program_id: 1, width: 1920, height: 1080, codecs: \"avc\", bandwidth: 540, uri: \"test.url\")\nplaylist.valid? # => true\n\nplaylist.items << SegmentItem.new(duration: 10.991, segment: \"test.ts\")\nplaylist.valid? # => false\n```","summary":"<p>Validates the playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":357,"url":null},"def":{"name":"valid?","visibility":"Public","body":"(playlist_size.zero? || segment_size.zero?) ? true : false"}},{"html_id":"version:Int32|Nil-instance-method","name":"version","abstract":false,"location":{"filename":"src/m3u8/playlist.cr","line_number":110,"url":null},"def":{"name":"version","return_type":"Int32 | ::Nil","visibility":"Public","body":"@version"}},{"html_id":"version=(version:Int32|Nil)-instance-method","name":"version=","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"Int32 | ::Nil"}],"args_string":"(version : Int32 | Nil)","args_html":"(version : Int32 | Nil)","location":{"filename":"src/m3u8/playlist.cr","line_number":110,"url":null},"def":{"name":"version=","args":[{"name":"version","external_name":"version","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@version = version"}}]},{"html_id":"m3u8/M3U8/PlaylistItem","path":"M3U8/PlaylistItem.html","kind":"class","full_name":"M3U8::PlaylistItem","name":"PlaylistItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/playlist_item.cr","line_number":98,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`PlaylistItem` represents a set of attributes for either the `EXT-X-STREAM-INF` or\n`EXT-X-I-FRAME-STREAM-INF` tag in an HLS playlist.\n\nIn HLS, as specified in [RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216):\n  - The `EXT-X-STREAM-INF` tag ([RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2)) defines a Variant Stream and its\n    associated attributes (e.g., PROGRAM-ID, RESOLUTION, CODECS, BANDWIDTH, etc.).\n  - The `EXT-X-I-FRAME-STREAM-INF` tag (`iframe` is true) (also described in [RFC 8216, Section 4.3.4.3](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3)) is used for\n    streams that contain only I-frames, useful for trick play (fast forward, reverse, etc.).\n\nThis class encapsulates the following properties:\n- `program_id`:         The program identifier from the tag.\n- `width`, `height`:    The resolution of the video (extracted from RESOLUTION).\n- `bandwidth`:          The peak segment bit rate.\n- `average_bandwidth`:  The average segment bit rate.\n- `frame_rate`:         The maximum frame rate of the video.\n- `video`:              The group identifier (`MediaItem#group_id`) for video renditions.\n- `audio`:              The group identifier (`MediaItem#group_id`) for audio renditions.\n- `uri`:                The URI pointing to the Media Playlist for this variant.\n- `subtitles`:          The group identifier (`MediaItem#group_id`) for subtitles.\n- `closed_captions`:    The closed captions setting (either a value or \"NONE\").\n- `iframe`:             A boolean flag indicating whether this is an I-frame stream.\n- `name`:               A human-readable name for the variant.\n- `hdcp_level`:         The HDCP level requirement.\n- `codecs`:             A `Codecs` object representing the codec information.\n\nExamples:\n\nCreating a `PlaylistItem` using a NamedTuple:\n\n```\noptions = {\n  program_id:        1,\n  width:             1920,\n  height:            1080,\n  bandwidth:         540,\n  video:             \"test_video\",\n  audio:             \"test_a\",\n  uri:               \"test.url\",\n  average_bandwidth: 500,\n  subtitles:         \"subs\",\n  closed_captions:   \"cc\",\n  iframe:            true,\n  frame_rate:        24.6,\n  name:              \"test_name\",\n  hdcp_level:        \"TYPE-0\",\n  codecs:            \"avc\",\n  audio_codec:       \"mp3\",\n  level:             \"2\",\n  profile:           \"baseline\",\n}\nitem = PlaylistItem.new(options)\n# => #<M3U8::PlaylistItem:0x78ae1a50dc00\n#     @audio=\"test_a\",\n#     @average_bandwidth=500,\n#     @bandwidth=540,\n#     @closed_captions=\"cc\",\n#     @codecs=#<M3U8::Codecs:0x78ae1a4bc440 @audio_codec=\"mp3\", @codecs=\"avc\", @level=2.0, @profile=\"baseline\">,\n#     @frame_rate=24.6,\n#     @hdcp_level=\"TYPE-0\",\n#     @height=1080,\n#     @iframe=true,\n#     @name=\"test_name\",\n#     @program_id=1,\n#     @subtitles=\"subs\",\n#     @uri=\"test.url\",\n#     @video=\"test_video\",\n#     @width=1920>\n\nitem.to_s\n# => \"#EXT-X-I-FRAME-STREAM-INF:PROGRAM-ID=1,RESOLUTION=1920x1080,CODECS=\\\"avc\\\",BANDWIDTH=540,AVERAGE-BANDWIDTH=500,FRAME-RATE=24.600,HDCP-LEVEL=TYPE-0,AUDIO=\\\"test_a\\\",VIDEO=\\\"test_video\\\",SUBTITLES=\\\"subs\\\",CLOSED-CAPTIONS=\\\"cc\\\",NAME=\\\"test_name\\\",URI=\\\"test.url\\\"\"\n```\n\nParsing a text string representing a stream info tag:\n\n```\ntext = %(#EXT-X-I-FRAME-STREAM-INF:PROGRAM-ID=1,RESOLUTION=1920x1080,CODECS=\"avc\",BANDWIDTH=540,\n         AVERAGE-BANDWIDTH=500,FRAME-RATE=24.600,HDCP-LEVEL=TYPE-0,AUDIO=\"test_a\",\n         VIDEO=\"test_video\",SUBTITLES=\"subs\",CLOSED-CAPTIONS=\"cc\",NAME=\"test_name\",URI=\"test.url\")\nPlaylistItem.parse(text)\n# => #<M3U8::PlaylistItem:0x78539d754b40\n#     @audio=\"test_a\",\n#     @average_bandwidth=500,\n#     @bandwidth=540,\n#     @closed_captions=\"cc\",\n#     @codecs=#<M3U8::Codecs:0x78539d7032c0 @audio_codec=nil, @codecs=\"avc\", @level=nil, @profile=nil>,\n#     @frame_rate=24.6,\n#     @hdcp_level=\"TYPE-0\",\n#     @height=1080,\n#     @iframe=false,\n#     @name=\"test_name\",\n#     @program_id=1,\n#     @subtitles=\"subs\",\n#     @uri=\"test.url\",\n#     @video=\"test_video\",\n#     @width=1920>\n```","summary":"<p><code><a href=\"../M3U8/PlaylistItem.html\">PlaylistItem</a></code> represents a set of attributes for either the <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag in an HLS playlist.</p>","class_methods":[{"html_id":"parse(value)-class-method","name":"parse","doc":"Parses a text string representing an `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag.\n\nExample:\n\n```\ntext = %(#EXT-X-I-FRAME-STREAM-INF:PROGRAM-ID=1,RESOLUTION=1920x1080, \\\n         CODECS=\"avc\",BANDWIDTH=540,AVERAGE-BANDWIDTH=500, \\\n         FRAME-RATE=24.600,HDCP-LEVEL=TYPE-0,AUDIO=\"test_a\", \\\n         VIDEO=\"test_video\",SUBTITLES=\"subs\",CLOSED-CAPTIONS=\"cc\", \\\n         URI=\"test.url\")\nPlaylistItem.parse(text)\n# => #<M3U8::PlaylistItem:0x7bf1a06aca80\n#     @audio=\"test_a\",\n#     @average_bandwidth=500,\n#     @bandwidth=540,\n#     @closed_captions=\"cc\",\n#     @codecs=#<M3U8::Codecs:0x7bf1a065b180 @audio_codec=nil, @codecs=\"avc\", @level=nil, @profile=nil>,\n#     @frame_rate=24.6,\n#     @hdcp_level=\"TYPE-0\",\n#     @height=1080,\n#     @iframe=false,\n#     @program_id=1,\n#     @subtitles=\"subs\",\n#     @uri=\"test.url\",\n#     @video=\"test_video\",\n#     @width=1920>\n```","summary":"<p>Parses a text string representing an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":434,"url":null},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(value)\nresolution = parse_resolution(attributes[\"RESOLUTION\"]?)\nnew(program_id: attributes[\"PROGRAM-ID\"]?, codecs: attributes[\"CODECS\"]?, width: resolution[:width]?, height: resolution[:height]?, bandwidth: attributes[\"BANDWIDTH\"]?.try(&.to_i), average_bandwidth: attributes[\"AVERAGE-BANDWIDTH\"]?.try(&.to_i), iframe: value.includes?(\"#EXT-X-I-FRAME-STREAM-INF:\"), frame_rate: parse_frame_rate(attributes[\"FRAME-RATE\"]?), video: attributes[\"VIDEO\"]?, audio: attributes[\"AUDIO\"]?, uri: attributes[\"URI\"]?, subtitles: attributes[\"SUBTITLES\"]?, closed_captions: attributes[\"CLOSED-CAPTIONS\"]?, name: attributes[\"NAME\"]?, hdcp_level: attributes[\"HDCP-LEVEL\"]?)\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `PlaylistItem` instance from a NamedTuple.\n\nThe NamedTuple should contain keys corresponding to the tag attributes, such as:\n  `program_id`, `width`, `height`, `bandwidth`, `video`, `audio`, `uri`,\n  `average_bandwidth`, `subtitles`, `closed_captions`, `iframe`, `frame_rate`,\n  `hdcp_level`, `codecs`, along with codec-related keys (`Codecs#audio_codec`, `Codecs#level`, `Codecs#profile`).\n\nExample:\n\n```\noptions = {\n  program_id:        1,\n  width:             1920,\n  height:            1080,\n  bandwidth:         540,\n  video:             \"test_video\",\n  audio:             \"test_a\",\n  uri:               \"test.url\",\n  average_bandwidth: 500,\n  subtitles:         \"subs\",\n  closed_captions:   \"cc\",\n  iframe:            true,\n  frame_rate:        24.6,\n  hdcp_level:        \"TYPE-0\",\n  codecs:            \"avc\",\n  audio_codec:       \"mp3\",\n  level:             \"2\",\n  profile:           \"baseline\",\n}\nPlaylistItem.new(options)\n# => #<M3U8::PlaylistItem:0x7e7089b309c0\n#     @audio=\"test_a\",\n#     @average_bandwidth=500,\n#     @bandwidth=540,\n#     @closed_captions=\"cc\",\n#     @codecs=#<M3U8::Codecs:0x7e7089adf080 @audio_codec=\"mp3\", @codecs=\"avc\", @level=2.0, @profile=\"baseline\">,\n#     @frame_rate=24.6,\n#     @hdcp_level=\"TYPE-0\",\n#     @height=1080,\n#     @iframe=true,\n#     @program_id=1,\n#     @subtitles=\"subs\",\n#     @uri=\"test.url\",\n#     @video=\"test_video\",\n#     @width=1920>\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/PlaylistItem.html\">PlaylistItem</a></code> instance from a NamedTuple.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":502,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(program_id: params[:program_id]?, width: params[:width]?, height: params[:height]?, bandwidth: params[:bandwidth]?, video: params[:video]?, audio: params[:audio]?, uri: params[:uri]?, average_bandwidth: params[:average_bandwidth]?, subtitles: params[:subtitles]?, closed_captions: params[:closed_captions]?, iframe: params[:iframe]?, frame_rate: params[:frame_rate]?, name: params[:name]?, hdcp_level: params[:hdcp_level]?, codecs: params[:codecs]?, audio_codec: params[:audio_codec]?, level: params[:level]?, profile: params[:profile]?)"}},{"html_id":"new(program_id=nil,width:Int32|Nil=nil,height:Int32|Nil=nil,bandwidth:Int32|Nil=nil,video:Nil|String=nil,audio:Nil|String=nil,uri:Nil|String=nil,average_bandwidth:Int32|Nil=nil,subtitles:Nil|String=nil,closed_captions:Nil|String=nil,iframe=nil,frame_rate=nil,name:Nil|String=nil,hdcp_level:Nil|String=nil,codecs=nil,audio_codec=nil,level=nil,profile=nil)-class-method","name":"new","doc":"Initializes a new `PlaylistItem` instance.\n\nThe initializer accepts individual parameters for each attribute.\n\nExample:\n\n```\nPlaylistItem.new(program_id: 1,\n  width: 1920,\n  height: 1080,\n  bandwidth: 540,\n  video: \"test_video\",\n  audio: \"test_a\",\n  uri: \"test.url\",\n  average_bandwidth: 500,\n  subtitles: \"subs\",\n  closed_captions: \"cc\",\n  iframe: true,\n  frame_rate: 24.6,\n  hdcp_level: \"TYPE-0\",\n  codecs: \"avc\",\n  audio_codec: \"mp3\",\n  level: \"2\",\n  profile: \"baseline\")\n# => #<M3U8::PlaylistItem:0x7d7806d39900\n#     @audio=\"test_a\",\n#     @average_bandwidth=500,\n#     @bandwidth=540,\n#     @closed_captions=\"cc\",\n#     @codecs=#<M3U8::Codecs:0x7d7806ce84c0 @audio_codec=\"mp3\", @codecs=\"avc\", @level=2.0, @profile=\"baseline\">,\n#     @frame_rate=24.6,\n#     @hdcp_level=\"TYPE-0\",\n#     @height=1080,\n#     @iframe=true,\n#     @program_id=1,\n#     @subtitles=\"subs\",\n#     @uri=\"test.url\",\n#     @video=\"test_video\",\n#     @width=1920>\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/PlaylistItem.html\">PlaylistItem</a></code> instance.</p>","abstract":false,"args":[{"name":"program_id","default_value":"nil","external_name":"program_id","restriction":""},{"name":"width","default_value":"nil","external_name":"width","restriction":"::Int32 | ::Nil"},{"name":"height","default_value":"nil","external_name":"height","restriction":"::Int32 | ::Nil"},{"name":"bandwidth","default_value":"nil","external_name":"bandwidth","restriction":"::Int32 | ::Nil"},{"name":"video","default_value":"nil","external_name":"video","restriction":"::Nil | ::String"},{"name":"audio","default_value":"nil","external_name":"audio","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"average_bandwidth","default_value":"nil","external_name":"average_bandwidth","restriction":"::Int32 | ::Nil"},{"name":"subtitles","default_value":"nil","external_name":"subtitles","restriction":"::Nil | ::String"},{"name":"closed_captions","default_value":"nil","external_name":"closed_captions","restriction":"::Nil | ::String"},{"name":"iframe","default_value":"nil","external_name":"iframe","restriction":""},{"name":"frame_rate","default_value":"nil","external_name":"frame_rate","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"hdcp_level","default_value":"nil","external_name":"hdcp_level","restriction":"::Nil | ::String"},{"name":"codecs","default_value":"nil","external_name":"codecs","restriction":""},{"name":"audio_codec","default_value":"nil","external_name":"audio_codec","restriction":""},{"name":"level","default_value":"nil","external_name":"level","restriction":""},{"name":"profile","default_value":"nil","external_name":"profile","restriction":""}],"args_string":"(program_id = nil, width : Int32 | Nil = nil, height : Int32 | Nil = nil, bandwidth : Int32 | Nil = nil, video : Nil | String = nil, audio : Nil | String = nil, uri : Nil | String = nil, average_bandwidth : Int32 | Nil = nil, subtitles : Nil | String = nil, closed_captions : Nil | String = nil, iframe = nil, frame_rate = nil, name : Nil | String = nil, hdcp_level : Nil | String = nil, codecs = nil, audio_codec = nil, level = nil, profile = nil)","args_html":"(program_id = <span class=\"n\">nil</span>, width : Int32 | Nil = <span class=\"n\">nil</span>, height : Int32 | Nil = <span class=\"n\">nil</span>, bandwidth : Int32 | Nil = <span class=\"n\">nil</span>, video : Nil | String = <span class=\"n\">nil</span>, audio : Nil | String = <span class=\"n\">nil</span>, uri : Nil | String = <span class=\"n\">nil</span>, average_bandwidth : Int32 | Nil = <span class=\"n\">nil</span>, subtitles : Nil | String = <span class=\"n\">nil</span>, closed_captions : Nil | String = <span class=\"n\">nil</span>, iframe = <span class=\"n\">nil</span>, frame_rate = <span class=\"n\">nil</span>, name : Nil | String = <span class=\"n\">nil</span>, hdcp_level : Nil | String = <span class=\"n\">nil</span>, codecs = <span class=\"n\">nil</span>, audio_codec = <span class=\"n\">nil</span>, level = <span class=\"n\">nil</span>, profile = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":565,"url":null},"def":{"name":"new","args":[{"name":"program_id","default_value":"nil","external_name":"program_id","restriction":""},{"name":"width","default_value":"nil","external_name":"width","restriction":"::Int32 | ::Nil"},{"name":"height","default_value":"nil","external_name":"height","restriction":"::Int32 | ::Nil"},{"name":"bandwidth","default_value":"nil","external_name":"bandwidth","restriction":"::Int32 | ::Nil"},{"name":"video","default_value":"nil","external_name":"video","restriction":"::Nil | ::String"},{"name":"audio","default_value":"nil","external_name":"audio","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"average_bandwidth","default_value":"nil","external_name":"average_bandwidth","restriction":"::Int32 | ::Nil"},{"name":"subtitles","default_value":"nil","external_name":"subtitles","restriction":"::Nil | ::String"},{"name":"closed_captions","default_value":"nil","external_name":"closed_captions","restriction":"::Nil | ::String"},{"name":"iframe","default_value":"nil","external_name":"iframe","restriction":""},{"name":"frame_rate","default_value":"nil","external_name":"frame_rate","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"hdcp_level","default_value":"nil","external_name":"hdcp_level","restriction":"::Nil | ::String"},{"name":"codecs","default_value":"nil","external_name":"codecs","restriction":""},{"name":"audio_codec","default_value":"nil","external_name":"audio_codec","restriction":""},{"name":"level","default_value":"nil","external_name":"level","restriction":""},{"name":"profile","default_value":"nil","external_name":"profile","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(program_id, width, height, bandwidth, video, audio, uri, average_bandwidth, subtitles, closed_captions, iframe, frame_rate, name, hdcp_level, codecs, audio_codec, level, profile)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"audio:String|Nil-instance-method","name":"audio","doc":"The AUDIO attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag (with TYPE set to AUDIO) in the\nMaster Playlist. This attribute indicates the set of audio renditions that should be used for\nplayback of the presentation.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following AUDIO attributes:\n\n```txt\nAUDIO\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is AUDIO.  It indicates the set of\naudio Renditions that SHOULD be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe AUDIO attribute is OPTIONAL.\n```","summary":"<p>The AUDIO attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag (with TYPE set to AUDIO) in the Master Playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":217,"url":null},"def":{"name":"audio","return_type":"String | ::Nil","visibility":"Public","body":"@audio"}},{"html_id":"audio=(audio:String|Nil)-instance-method","name":"audio=","doc":"The AUDIO attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag (with TYPE set to AUDIO) in the\nMaster Playlist. This attribute indicates the set of audio renditions that should be used for\nplayback of the presentation.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following AUDIO attributes:\n\n```txt\nAUDIO\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is AUDIO.  It indicates the set of\naudio Renditions that SHOULD be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe AUDIO attribute is OPTIONAL.\n```","summary":"<p>The AUDIO attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag (with TYPE set to AUDIO) in the Master Playlist.</p>","abstract":false,"args":[{"name":"audio","external_name":"audio","restriction":"String | ::Nil"}],"args_string":"(audio : String | Nil)","args_html":"(audio : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":217,"url":null},"def":{"name":"audio=","args":[{"name":"audio","external_name":"audio","restriction":"String | ::Nil"}],"visibility":"Public","body":"@audio = audio"}},{"html_id":"average_bandwidth:Int32|Nil-instance-method","name":"average_bandwidth","doc":"The AVERAGE-BANDWIDTH attribute represents the average segment bit rate of the Variant Stream,\nexpressed as a decimal integer in bits per second.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following AVERAGE-BANDWIDTH attributes:\n\n```txt\nAVERAGE-BANDWIDTH\n\nThe value is a decimal-integer of bits per second.  It represents\nthe average segment bit rate of the Variant Stream.\n\nIf all the Media Segments in a Variant Stream have already been\ncreated, the AVERAGE-BANDWIDTH value MUST be the largest sum of\naverage segment bit rates that is produced by any playable\ncombination of Renditions.  (For a Variant Stream with a single\nMedia Playlist, this is just the average segment bit rate of that\nMedia Playlist.)  An inaccurate value can cause playback stalls or\nprevent clients from playing the variant.\n\nIf the Master Playlist is to be made available before all Media\nSegments in the presentation have been encoded, the AVERAGE-\nBANDWIDTH value SHOULD be the AVERAGE-BANDWIDTH value of a\nrepresentative period of similar content, encoded using the same\nsettings.\n\nThe AVERAGE-BANDWIDTH attribute is OPTIONAL.\n```","summary":"<p>The AVERAGE-BANDWIDTH attribute represents the average segment bit rate of the Variant Stream, expressed as a decimal integer in bits per second.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":262,"url":null},"def":{"name":"average_bandwidth","return_type":"Int32 | ::Nil","visibility":"Public","body":"@average_bandwidth"}},{"html_id":"average_bandwidth=(average_bandwidth:Int32|Nil)-instance-method","name":"average_bandwidth=","doc":"The AVERAGE-BANDWIDTH attribute represents the average segment bit rate of the Variant Stream,\nexpressed as a decimal integer in bits per second.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following AVERAGE-BANDWIDTH attributes:\n\n```txt\nAVERAGE-BANDWIDTH\n\nThe value is a decimal-integer of bits per second.  It represents\nthe average segment bit rate of the Variant Stream.\n\nIf all the Media Segments in a Variant Stream have already been\ncreated, the AVERAGE-BANDWIDTH value MUST be the largest sum of\naverage segment bit rates that is produced by any playable\ncombination of Renditions.  (For a Variant Stream with a single\nMedia Playlist, this is just the average segment bit rate of that\nMedia Playlist.)  An inaccurate value can cause playback stalls or\nprevent clients from playing the variant.\n\nIf the Master Playlist is to be made available before all Media\nSegments in the presentation have been encoded, the AVERAGE-\nBANDWIDTH value SHOULD be the AVERAGE-BANDWIDTH value of a\nrepresentative period of similar content, encoded using the same\nsettings.\n\nThe AVERAGE-BANDWIDTH attribute is OPTIONAL.\n```","summary":"<p>The AVERAGE-BANDWIDTH attribute represents the average segment bit rate of the Variant Stream, expressed as a decimal integer in bits per second.</p>","abstract":false,"args":[{"name":"average_bandwidth","external_name":"average_bandwidth","restriction":"Int32 | ::Nil"}],"args_string":"(average_bandwidth : Int32 | Nil)","args_html":"(average_bandwidth : Int32 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":262,"url":null},"def":{"name":"average_bandwidth=","args":[{"name":"average_bandwidth","external_name":"average_bandwidth","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@average_bandwidth = average_bandwidth"}},{"html_id":"bandwidth:Int32|Nil-instance-method","name":"bandwidth","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe BANDWIDTH attribute in an\n`EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag is a decimal integer (in bits per second)\nthat represents the peak segment bit rate of the Variant Stream.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following BANDWIDTH attributes:\n\n```txt\nBANDWIDTH\n\nThe value is a decimal-integer of bits per second.  It represents\nthe peak segment bit rate of the Variant Stream.\n\nIf all the Media Segments in a Variant Stream have already been\ncreated, the BANDWIDTH value MUST be the largest sum of peak\nsegment bit rates that is produced by any playable combination of\nRenditions.  (For a Variant Stream with a single Media Playlist,\nthis is just the peak segment bit rate of that Media Playlist.)\nAn inaccurate value can cause playback stalls or prevent clients\nfrom playing the variant.\n\nIf the Master Playlist is to be made available before all Media\nSegments in the presentation have been encoded, the BANDWIDTH\nvalue SHOULD be the BANDWIDTH value of a representative period of\nsimilar content, encoded using the same settings.\n\nEvery EXT-X-STREAM-INF tag MUST include the BANDWIDTH attribute.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the BANDWIDTH attribute in an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag is a decimal integer (in bits per second) that represents the peak segment bit rate of the Variant Stream.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":178,"url":null},"def":{"name":"bandwidth","return_type":"Int32 | ::Nil","visibility":"Public","body":"@bandwidth"}},{"html_id":"bandwidth=(bandwidth:Int32|Nil)-instance-method","name":"bandwidth=","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe BANDWIDTH attribute in an\n`EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag is a decimal integer (in bits per second)\nthat represents the peak segment bit rate of the Variant Stream.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following BANDWIDTH attributes:\n\n```txt\nBANDWIDTH\n\nThe value is a decimal-integer of bits per second.  It represents\nthe peak segment bit rate of the Variant Stream.\n\nIf all the Media Segments in a Variant Stream have already been\ncreated, the BANDWIDTH value MUST be the largest sum of peak\nsegment bit rates that is produced by any playable combination of\nRenditions.  (For a Variant Stream with a single Media Playlist,\nthis is just the peak segment bit rate of that Media Playlist.)\nAn inaccurate value can cause playback stalls or prevent clients\nfrom playing the variant.\n\nIf the Master Playlist is to be made available before all Media\nSegments in the presentation have been encoded, the BANDWIDTH\nvalue SHOULD be the BANDWIDTH value of a representative period of\nsimilar content, encoded using the same settings.\n\nEvery EXT-X-STREAM-INF tag MUST include the BANDWIDTH attribute.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the BANDWIDTH attribute in an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag is a decimal integer (in bits per second) that represents the peak segment bit rate of the Variant Stream.</p>","abstract":false,"args":[{"name":"bandwidth","external_name":"bandwidth","restriction":"Int32 | ::Nil"}],"args_string":"(bandwidth : Int32 | Nil)","args_html":"(bandwidth : Int32 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":178,"url":null},"def":{"name":"bandwidth=","args":[{"name":"bandwidth","external_name":"bandwidth","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@bandwidth = bandwidth"}},{"html_id":"closed_captions:String|Nil-instance-method","name":"closed_captions","doc":"The CLOSED-CAPTIONS attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nindicates the availability of closed captioning for a Variant Stream in an HLS Master Playlist.\n\nThis attribute can be provided in one of two forms:\n\n  - As a quoted-string: In this case, it must exactly match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag\n    (with TYPE CLOSED-CAPTIONS) in the playlist, indicating which closed-caption renditions\n    are available for playback.\n\n  - As the enumerated-string value NONE: This signifies that no closed captions are present in any\n    Variant Stream. In such cases, every `EXT-X-STREAM-INF` tag MUST include \"CLOSED-CAPTIONS=NONE\".\n\nConsistency is essential; mixing closed captions across Variant Streams may cause playback errors.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following CLOSED-CAPTIONS attributes:\n\n```txt\nCLOSED-CAPTIONS\n\nThe value can be either a quoted-string or an enumerated-string\nwith the value NONE.  If the value is a quoted-string, it MUST\nmatch the value of the GROUP-ID attribute of an EXT-X-MEDIA tag\nelsewhere in the Playlist whose TYPE attribute is CLOSED-CAPTIONS,\nand it indicates the set of closed-caption Renditions that can be\nused when playing the presentation.  See Section 4.3.4.2.1.\n\nIf the value is the enumerated-string value NONE, all EXT-X-\nSTREAM-INF tags MUST have this attribute with a value of NONE,\nindicating that there are no closed captions in any Variant Stream\nin the Master Playlist.  Having closed captions in one Variant\nStream but not another can trigger playback inconsistencies.\n\nThe CLOSED-CAPTIONS attribute is OPTIONAL.\n```","summary":"<p>The CLOSED-CAPTIONS attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, indicates the availability of closed captioning for a Variant Stream in an HLS Master Playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":317,"url":null},"def":{"name":"closed_captions","return_type":"String | ::Nil","visibility":"Public","body":"@closed_captions"}},{"html_id":"closed_captions=(closed_captions:String|Nil)-instance-method","name":"closed_captions=","doc":"The CLOSED-CAPTIONS attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nindicates the availability of closed captioning for a Variant Stream in an HLS Master Playlist.\n\nThis attribute can be provided in one of two forms:\n\n  - As a quoted-string: In this case, it must exactly match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag\n    (with TYPE CLOSED-CAPTIONS) in the playlist, indicating which closed-caption renditions\n    are available for playback.\n\n  - As the enumerated-string value NONE: This signifies that no closed captions are present in any\n    Variant Stream. In such cases, every `EXT-X-STREAM-INF` tag MUST include \"CLOSED-CAPTIONS=NONE\".\n\nConsistency is essential; mixing closed captions across Variant Streams may cause playback errors.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following CLOSED-CAPTIONS attributes:\n\n```txt\nCLOSED-CAPTIONS\n\nThe value can be either a quoted-string or an enumerated-string\nwith the value NONE.  If the value is a quoted-string, it MUST\nmatch the value of the GROUP-ID attribute of an EXT-X-MEDIA tag\nelsewhere in the Playlist whose TYPE attribute is CLOSED-CAPTIONS,\nand it indicates the set of closed-caption Renditions that can be\nused when playing the presentation.  See Section 4.3.4.2.1.\n\nIf the value is the enumerated-string value NONE, all EXT-X-\nSTREAM-INF tags MUST have this attribute with a value of NONE,\nindicating that there are no closed captions in any Variant Stream\nin the Master Playlist.  Having closed captions in one Variant\nStream but not another can trigger playback inconsistencies.\n\nThe CLOSED-CAPTIONS attribute is OPTIONAL.\n```","summary":"<p>The CLOSED-CAPTIONS attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, indicates the availability of closed captioning for a Variant Stream in an HLS Master Playlist.</p>","abstract":false,"args":[{"name":"closed_captions","external_name":"closed_captions","restriction":"String | ::Nil"}],"args_string":"(closed_captions : String | Nil)","args_html":"(closed_captions : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":317,"url":null},"def":{"name":"closed_captions=","args":[{"name":"closed_captions","external_name":"closed_captions","restriction":"String | ::Nil"}],"visibility":"Public","body":"@closed_captions = closed_captions"}},{"html_id":"codecs:Codecs-instance-method","name":"codecs","doc":"This property holds a `Codecs` instance that encapsulates the *CODECS* attribute\nfor a Variant Stream in an HLS playlist.\n\nAccording to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe CODECS attribute is a quoted string that contains a comma-separated list of format identifiers.\nEach identifier specifies a media sample type present in one or more renditions of the Variant Stream.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following CODECS attributes:\n\n```txt\nCODECS\n\nThe value is a quoted-string containing a comma-separated list of\nformats, where each format specifies a media sample type that is\npresent in one or more Renditions specified by the Variant Stream.\nValid format identifiers are those in the ISO Base Media File\nFormat Name Space defined by \"The 'Codecs' and 'Profiles'\nParameters for \"Bucket\" Media Types\" [RFC6381].\n\nFor example, a stream containing AAC low complexity (AAC-LC) audio\nand H.264 Main Profile Level 3.0 video would have a CODECS value\nof \"mp4a.40.2,avc1.4d401e\".\n\nEvery EXT-X-STREAM-INF tag SHOULD include a CODECS attribute.\n```","summary":"<p>This property holds a <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance that encapsulates the <em>CODECS</em> attribute for a Variant Stream in an HLS playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":405,"url":null},"def":{"name":"codecs","return_type":"Codecs","visibility":"Public","body":"@codecs"}},{"html_id":"codecs=(codecs:Codecs)-instance-method","name":"codecs=","doc":"This property holds a `Codecs` instance that encapsulates the *CODECS* attribute\nfor a Variant Stream in an HLS playlist.\n\nAccording to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe CODECS attribute is a quoted string that contains a comma-separated list of format identifiers.\nEach identifier specifies a media sample type present in one or more renditions of the Variant Stream.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following CODECS attributes:\n\n```txt\nCODECS\n\nThe value is a quoted-string containing a comma-separated list of\nformats, where each format specifies a media sample type that is\npresent in one or more Renditions specified by the Variant Stream.\nValid format identifiers are those in the ISO Base Media File\nFormat Name Space defined by \"The 'Codecs' and 'Profiles'\nParameters for \"Bucket\" Media Types\" [RFC6381].\n\nFor example, a stream containing AAC low complexity (AAC-LC) audio\nand H.264 Main Profile Level 3.0 video would have a CODECS value\nof \"mp4a.40.2,avc1.4d401e\".\n\nEvery EXT-X-STREAM-INF tag SHOULD include a CODECS attribute.\n```","summary":"<p>This property holds a <code><a href=\"../M3U8/Codecs.html\">Codecs</a></code> instance that encapsulates the <em>CODECS</em> attribute for a Variant Stream in an HLS playlist.</p>","abstract":false,"args":[{"name":"codecs","external_name":"codecs","restriction":"Codecs"}],"args_string":"(codecs : Codecs)","args_html":"(codecs : <a href=\"../M3U8/Codecs.html\">Codecs</a>)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":405,"url":null},"def":{"name":"codecs=","args":[{"name":"codecs","external_name":"codecs","restriction":"Codecs"}],"visibility":"Public","body":"@codecs = codecs"}},{"html_id":"frame_rate:Float64|Nil-instance-method","name":"frame_rate","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe FRAME-RATE attribute specifies the maximum frame rate (in frames per second) for all video\nin the Variant Stream. This value is expressed as a decimal floating-point number, rounded to\nthree decimal places.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following FRAME-RATE attributes:\n\n```txt\nFRAME-RATE\n\nThe value is a decimal-floating-point describing the maximum frame\nrate for all the video in the Variant Stream, rounded to three\ndecimal places.\n\nThe FRAME-RATE attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.  The FRAME-RATE attribute SHOULD be\nincluded if any video in a Variant Stream exceeds 30 frames per\nsecond.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the FRAME-RATE attribute specifies the maximum frame rate (in frames per second) for all video in the Variant Stream.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":344,"url":null},"def":{"name":"frame_rate","return_type":"Float64 | ::Nil","visibility":"Public","body":"@frame_rate"}},{"html_id":"frame_rate=(frame_rate:Float64|Nil)-instance-method","name":"frame_rate=","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe FRAME-RATE attribute specifies the maximum frame rate (in frames per second) for all video\nin the Variant Stream. This value is expressed as a decimal floating-point number, rounded to\nthree decimal places.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following FRAME-RATE attributes:\n\n```txt\nFRAME-RATE\n\nThe value is a decimal-floating-point describing the maximum frame\nrate for all the video in the Variant Stream, rounded to three\ndecimal places.\n\nThe FRAME-RATE attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.  The FRAME-RATE attribute SHOULD be\nincluded if any video in a Variant Stream exceeds 30 frames per\nsecond.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the FRAME-RATE attribute specifies the maximum frame rate (in frames per second) for all video in the Variant Stream.</p>","abstract":false,"args":[{"name":"frame_rate","external_name":"frame_rate","restriction":"Float64 | ::Nil"}],"args_string":"(frame_rate : Float64 | Nil)","args_html":"(frame_rate : Float64 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":344,"url":null},"def":{"name":"frame_rate=","args":[{"name":"frame_rate","external_name":"frame_rate","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@frame_rate = frame_rate"}},{"html_id":"hdcp_level:String|Nil-instance-method","name":"hdcp_level","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe HDCP-LEVEL attribute is defined as an enumerated-string indicating the required level\nof High-bandwidth Digital Content Protection (HDCP) for a Variant Stream.\n\nValid values are:\n  - `TYPE-0`: Signifies that the Variant Stream may fail to play unless the output is\n    protected by HDCP Type 0 (or an equivalent mechanism).\n  - `NONE`:   Indicates that the content does not require any output copy protection.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following HDCP-LEVEL attributes:\n\n```txt\nHDCP-LEVEL\n\nThe value is an enumerated-string; valid strings are TYPE-0 and\nNONE.  This attribute is advisory; a value of TYPE-0 indicates\nthat the Variant Stream could fail to play unless the output is\nprotected by High-bandwidth Digital Content Protection (HDCP) Type\n0 [HDCP] or equivalent.  A value of NONE indicates that the\ncontent does not require output copy protection.\n\nEncrypted Variant Streams with different HDCP levels SHOULD use\ndifferent media encryption keys.\n\nThe HDCP-LEVEL attribute is OPTIONAL.  It SHOULD be present if any\ncontent in the Variant Stream will fail to play without HDCP.\nClients without output copy protection SHOULD NOT load a Variant\nStream with an HDCP-LEVEL attribute unless its value is NONE.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the HDCP-LEVEL attribute is defined as an enumerated-string indicating the required level of High-bandwidth Digital Content Protection (HDCP) for a Variant Stream.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":378,"url":null},"def":{"name":"hdcp_level","return_type":"String | ::Nil","visibility":"Public","body":"@hdcp_level"}},{"html_id":"hdcp_level=(hdcp_level:String|Nil)-instance-method","name":"hdcp_level=","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe HDCP-LEVEL attribute is defined as an enumerated-string indicating the required level\nof High-bandwidth Digital Content Protection (HDCP) for a Variant Stream.\n\nValid values are:\n  - `TYPE-0`: Signifies that the Variant Stream may fail to play unless the output is\n    protected by HDCP Type 0 (or an equivalent mechanism).\n  - `NONE`:   Indicates that the content does not require any output copy protection.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following HDCP-LEVEL attributes:\n\n```txt\nHDCP-LEVEL\n\nThe value is an enumerated-string; valid strings are TYPE-0 and\nNONE.  This attribute is advisory; a value of TYPE-0 indicates\nthat the Variant Stream could fail to play unless the output is\nprotected by High-bandwidth Digital Content Protection (HDCP) Type\n0 [HDCP] or equivalent.  A value of NONE indicates that the\ncontent does not require output copy protection.\n\nEncrypted Variant Streams with different HDCP levels SHOULD use\ndifferent media encryption keys.\n\nThe HDCP-LEVEL attribute is OPTIONAL.  It SHOULD be present if any\ncontent in the Variant Stream will fail to play without HDCP.\nClients without output copy protection SHOULD NOT load a Variant\nStream with an HDCP-LEVEL attribute unless its value is NONE.\n```","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the HDCP-LEVEL attribute is defined as an enumerated-string indicating the required level of High-bandwidth Digital Content Protection (HDCP) for a Variant Stream.</p>","abstract":false,"args":[{"name":"hdcp_level","external_name":"hdcp_level","restriction":"String | ::Nil"}],"args_string":"(hdcp_level : String | Nil)","args_html":"(hdcp_level : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":378,"url":null},"def":{"name":"hdcp_level=","args":[{"name":"hdcp_level","external_name":"hdcp_level","restriction":"String | ::Nil"}],"visibility":"Public","body":"@hdcp_level = hdcp_level"}},{"html_id":"height:Int32|Nil-instance-method","name":"height","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe RESOLUTION attribute specifies the optimal pixel resolution at which to display all\nthe video in a Variant Stream for an `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag.\n\nThe attribute value is expressed as a decimal-resolution (e.g., \"1920x1080\"). Although it\nis optional, including the RESOLUTION attribute is recommended when the Variant Stream contains video.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following RESOLUTION attributes:\n\n```txt\nRESOLUTION\n\nThe value is a decimal-resolution describing the optimal pixel\nresolution at which to display all the video in the Variant\nStream.\n\nThe RESOLUTION attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.\n```\n\nThese properties represent the width and height components of that resolution.","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the RESOLUTION attribute specifies the optimal pixel resolution at which to display all the video in a Variant Stream for an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":148,"url":null},"def":{"name":"height","return_type":"Int32 | ::Nil","visibility":"Public","body":"@height"}},{"html_id":"height=(height:Int32|Nil)-instance-method","name":"height=","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe RESOLUTION attribute specifies the optimal pixel resolution at which to display all\nthe video in a Variant Stream for an `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag.\n\nThe attribute value is expressed as a decimal-resolution (e.g., \"1920x1080\"). Although it\nis optional, including the RESOLUTION attribute is recommended when the Variant Stream contains video.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following RESOLUTION attributes:\n\n```txt\nRESOLUTION\n\nThe value is a decimal-resolution describing the optimal pixel\nresolution at which to display all the video in the Variant\nStream.\n\nThe RESOLUTION attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.\n```\n\nThese properties represent the width and height components of that resolution.","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the RESOLUTION attribute specifies the optimal pixel resolution at which to display all the video in a Variant Stream for an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag.</p>","abstract":false,"args":[{"name":"height","external_name":"height","restriction":"Int32 | ::Nil"}],"args_string":"(height : Int32 | Nil)","args_html":"(height : Int32 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":148,"url":null},"def":{"name":"height=","args":[{"name":"height","external_name":"height","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@height = height"}},{"html_id":"iframe:Bool-instance-method","name":"iframe","doc":"Indicates whether the playlist should use an I-frame only stream tag.\nWhen `iframe` is true, the `EXT-X-I-FRAME-STREAM-INF` tag will be output, which is\ntypically used for trick play (e.g., fast forward, reverse) as it contains only I-frames.\nIf `iframe` is false, the standard `EXT-X-STREAM-INF` tag is used.","summary":"<p>Indicates whether the playlist should use an I-frame only stream tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":323,"url":null},"def":{"name":"iframe","return_type":"Bool","visibility":"Public","body":"@iframe"}},{"html_id":"iframe=(iframe:Bool)-instance-method","name":"iframe=","doc":"Indicates whether the playlist should use an I-frame only stream tag.\nWhen `iframe` is true, the `EXT-X-I-FRAME-STREAM-INF` tag will be output, which is\ntypically used for trick play (e.g., fast forward, reverse) as it contains only I-frames.\nIf `iframe` is false, the standard `EXT-X-STREAM-INF` tag is used.","summary":"<p>Indicates whether the playlist should use an I-frame only stream tag.</p>","abstract":false,"args":[{"name":"iframe","external_name":"iframe","restriction":"Bool"}],"args_string":"(iframe : Bool)","args_html":"(iframe : Bool)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":323,"url":null},"def":{"name":"iframe=","args":[{"name":"iframe","external_name":"iframe","restriction":"Bool"}],"visibility":"Public","body":"@iframe = iframe"}},{"html_id":"name:String|Nil-instance-method","name":"name","doc":"DEPRECATED: Use in `EXT-X-MEDIA` tag, not in `EXT-X-STREAM-INF`","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use in <code>EXT-X-MEDIA</code> tag, not in <code>EXT-X-STREAM-INF</code></p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":347,"url":null},"def":{"name":"name","return_type":"String | ::Nil","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String|Nil)-instance-method","name":"name=","doc":"DEPRECATED: Use in `EXT-X-MEDIA` tag, not in `EXT-X-STREAM-INF`","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use in <code>EXT-X-MEDIA</code> tag, not in <code>EXT-X-STREAM-INF</code></p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String | Nil)","args_html":"(name : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":347,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String | ::Nil"}],"visibility":"Public","body":"@name = name"}},{"html_id":"program_id:Int32|Nil-instance-method","name":"program_id","doc":"The PROGRAM-ID attribute of the `EXT-X-STREAM-INF` and the `EXT-X-I-FRAME-STREAM-INF` tags was removed in protocol version 6.","summary":"<p>The PROGRAM-ID attribute of the <code>EXT-X-STREAM-INF</code> and the <code>EXT-X-I-FRAME-STREAM-INF</code> tags was removed in protocol version 6.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":102,"url":null},"def":{"name":"program_id","return_type":"Int32 | ::Nil","visibility":"Public","body":"@program_id"}},{"html_id":"program_id=(program_id:Int32|Nil)-instance-method","name":"program_id=","doc":"The PROGRAM-ID attribute of the `EXT-X-STREAM-INF` and the `EXT-X-I-FRAME-STREAM-INF` tags was removed in protocol version 6.","summary":"<p>The PROGRAM-ID attribute of the <code>EXT-X-STREAM-INF</code> and the <code>EXT-X-I-FRAME-STREAM-INF</code> tags was removed in protocol version 6.</p>","abstract":false,"args":[{"name":"program_id","external_name":"program_id","restriction":"Int32 | ::Nil"}],"args_string":"(program_id : Int32 | Nil)","args_html":"(program_id : Int32 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":102,"url":null},"def":{"name":"program_id=","args":[{"name":"program_id","external_name":"program_id","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@program_id = program_id"}},{"html_id":"resolution-instance-method","name":"resolution","doc":"Returns the resolution in the format `<width>x<height>`.\n\nExample:\n```\noptions = {width: 1920, height: 1080}\nitem = PlaylistItem.new(options)\nitem.resolution # => \"1920x1080\"\n```","summary":"<p>Returns the resolution in the format <code>&lt;width&gt;x&lt;height&gt;</code>.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":602,"url":null},"def":{"name":"resolution","visibility":"Public","body":"if width.nil?\nelse\n  \"#{width}x#{height}\"\nend"}},{"html_id":"subtitles:String|Nil-instance-method","name":"subtitles","doc":"The SUBTITLES attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag (with TYPE set to SUBTITLES)\nin the Master Playlist. It indicates the set of subtitle renditions available for playback.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following SUBTITLES attributes:\n\n```txt\nSUBTITLES\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is SUBTITLES.  It indicates the set\nof subtitle Renditions that can be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe SUBTITLES attribute is OPTIONAL.\n```","summary":"<p>The SUBTITLES attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag (with TYPE set to SUBTITLES) in the Master Playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":281,"url":null},"def":{"name":"subtitles","return_type":"String | ::Nil","visibility":"Public","body":"@subtitles"}},{"html_id":"subtitles=(subtitles:String|Nil)-instance-method","name":"subtitles=","doc":"The SUBTITLES attribute, as defined in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag (with TYPE set to SUBTITLES)\nin the Master Playlist. It indicates the set of subtitle renditions available for playback.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following SUBTITLES attributes:\n\n```txt\nSUBTITLES\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is SUBTITLES.  It indicates the set\nof subtitle Renditions that can be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe SUBTITLES attribute is OPTIONAL.\n```","summary":"<p>The SUBTITLES attribute, as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag (with TYPE set to SUBTITLES) in the Master Playlist.</p>","abstract":false,"args":[{"name":"subtitles","external_name":"subtitles","restriction":"String | ::Nil"}],"args_string":"(subtitles : String | Nil)","args_html":"(subtitles : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":281,"url":null},"def":{"name":"subtitles=","args":[{"name":"subtitles","external_name":"subtitles","restriction":"String | ::Nil"}],"visibility":"Public","body":"@subtitles = subtitles"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the stream info tag.\n\nIf the `iframe` flag is true, the tag is formatted as `EXT-X-I-FRAME-STREAM-INF`;\notherwise, it is formatted as `EXT-X-STREAM-INF` followed by the URI on a new line.\n\nExample for an I-frame stream:\n\n```\noptions = {\n  program_id:        1,\n  width:             1920,\n  height:            1080,\n  bandwidth:         540,\n  video:             \"test_video\",\n  audio:             \"test_a\",\n  uri:               \"test.url\",\n  average_bandwidth: 500,\n  subtitles:         \"subs\",\n  closed_captions:   \"cc\",\n  iframe:            true,\n  frame_rate:        24.6,\n  hdcp_level:        \"TYPE-0\",\n  codecs:            \"avc\",\n  audio_codec:       \"mp3\",\n  level:             \"2\",\n  profile:           \"baseline\",\n}\nPlaylistItem.new(options).to_s\n# => \"#EXT-X-I-FRAME-STREAM-INF:PROGRAM-ID=1,RESOLUTION=1920x1080,CODECS=\\\"avc\\\",BANDWIDTH=540,AVERAGE-BANDWIDTH=500,FRAME-RATE=24.600,HDCP-LEVEL=TYPE-0,AUDIO=\\\"test_a\\\",VIDEO=\\\"test_video\\\",SUBTITLES=\\\"subs\\\",CLOSED-CAPTIONS=\\\"cc\\\",URI=\\\"test.url\\\"\"\n```\n\nExample for a standard stream:\n\n```\noptions = {\n  program_id:        1,\n  width:             1920,\n  height:            1080,\n  bandwidth:         540,\n  video:             \"test_video\",\n  audio:             \"test_a\",\n  uri:               \"test.url\",\n  average_bandwidth: 500,\n  subtitles:         \"subs\",\n  closed_captions:   \"cc\",\n  iframe:            false,\n  frame_rate:        24.6,\n  hdcp_level:        \"TYPE-0\",\n  codecs:            \"avc\",\n  audio_codec:       \"mp3\",\n  level:             \"2\",\n  profile:           \"baseline\",\n}\nPlaylistItem.new(options).to_s\n# => \"#EXT-X-STREAM-INF:PROGRAM-ID=1,RESOLUTION=1920x1080,CODECS=\\\"avc\\\",BANDWIDTH=540,AVERAGE-BANDWIDTH=500,FRAME-RATE=24.600,HDCP-LEVEL=TYPE-0,AUDIO=\\\"test_a\\\",VIDEO=\\\"test_video\\\",SUBTITLES=\\\"subs\\\",CLOSED-CAPTIONS=\\\"cc\\\"\\n\" +\n#    \"test.url\"\n```","summary":"<p>Returns the string representation of the stream info tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":663,"url":null},"def":{"name":"to_s","visibility":"Public","body":"if iframe\n  \"#EXT-X-I-FRAME-STREAM-INF:#{attributes.join(',')},URI=\\\"#{uri}\\\"\"\nelse\n  \"#EXT-X-STREAM-INF:#{attributes.join(',')}\\n#{uri}\"\nend"}},{"html_id":"uri:String|Nil-instance-method","name":"uri","doc":"As defined in [RFC 8216, Section 4.3.4.3](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3),\nthe URI attribute for `EXT-X-I-FRAME-STREAM-INF` tags is a quoted-string containing a URI\nthat identifies the I-frame Media Playlist file. This playlist file MUST include an\n`EXT-X-I-FRAMES-ONLY` tag.\n\n[RFC 8216, Section 4.3.4.3](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3) defines the following URI attributes:\n\n```txt\nURI\n\nThe value is a quoted-string containing a URI that identifies the\nI-frame Media Playlist file.  That Playlist file MUST contain an\nEXT-X-I-FRAMES-ONLY tag.\n```","summary":"<p>As defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3\">RFC 8216, Section 4.3.4.3</a>, the URI attribute for <code>EXT-X-I-FRAME-STREAM-INF</code> tags is a quoted-string containing a URI that identifies the I-frame Media Playlist file.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":233,"url":null},"def":{"name":"uri","return_type":"String | ::Nil","visibility":"Public","body":"@uri"}},{"html_id":"uri=(uri:String|Nil)-instance-method","name":"uri=","doc":"As defined in [RFC 8216, Section 4.3.4.3](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3),\nthe URI attribute for `EXT-X-I-FRAME-STREAM-INF` tags is a quoted-string containing a URI\nthat identifies the I-frame Media Playlist file. This playlist file MUST include an\n`EXT-X-I-FRAMES-ONLY` tag.\n\n[RFC 8216, Section 4.3.4.3](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3) defines the following URI attributes:\n\n```txt\nURI\n\nThe value is a quoted-string containing a URI that identifies the\nI-frame Media Playlist file.  That Playlist file MUST contain an\nEXT-X-I-FRAMES-ONLY tag.\n```","summary":"<p>As defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.3\">RFC 8216, Section 4.3.4.3</a>, the URI attribute for <code>EXT-X-I-FRAME-STREAM-INF</code> tags is a quoted-string containing a URI that identifies the I-frame Media Playlist file.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil)","args_html":"(uri : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":233,"url":null},"def":{"name":"uri=","args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"@uri = uri"}},{"html_id":"video:String|Nil-instance-method","name":"video","doc":"The VIDEO attribute, as specified in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis defined as a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag with TYPE set to VIDEO\nin the Master Playlist. This attribute designates the set of video renditions to be used for playback.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following VIDEO attributes:\n\n```txt\nVIDEO\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is VIDEO.  It indicates the set of\nvideo Renditions that SHOULD be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe VIDEO attribute is OPTIONAL.\n```","summary":"<p>The VIDEO attribute, as specified in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is defined as a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag with TYPE set to VIDEO in the Master Playlist.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":197,"url":null},"def":{"name":"video","return_type":"String | ::Nil","visibility":"Public","body":"@video"}},{"html_id":"video=(video:String|Nil)-instance-method","name":"video=","doc":"The VIDEO attribute, as specified in [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nis defined as a quoted-string that must match the GROUP-ID attribute (`MediaItem#group_id`) of an `EXT-X-MEDIA` tag with TYPE set to VIDEO\nin the Master Playlist. This attribute designates the set of video renditions to be used for playback.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following VIDEO attributes:\n\n```txt\nVIDEO\n\nThe value is a quoted-string.  It MUST match the value of the\nGROUP-ID attribute of an EXT-X-MEDIA tag elsewhere in the Master\nPlaylist whose TYPE attribute is VIDEO.  It indicates the set of\nvideo Renditions that SHOULD be used when playing the\npresentation.  See Section 4.3.4.2.1.\n\nThe VIDEO attribute is OPTIONAL.\n```","summary":"<p>The VIDEO attribute, as specified in <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, is defined as a quoted-string that must match the GROUP-ID attribute (<code><a href=\"../M3U8/MediaItem.html#group_id%3AString%7CNil-instance-method\">MediaItem#group_id</a></code>) of an <code>EXT-X-MEDIA</code> tag with TYPE set to VIDEO in the Master Playlist.</p>","abstract":false,"args":[{"name":"video","external_name":"video","restriction":"String | ::Nil"}],"args_string":"(video : String | Nil)","args_html":"(video : String | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":197,"url":null},"def":{"name":"video=","args":[{"name":"video","external_name":"video","restriction":"String | ::Nil"}],"visibility":"Public","body":"@video = video"}},{"html_id":"width:Int32|Nil-instance-method","name":"width","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe RESOLUTION attribute specifies the optimal pixel resolution at which to display all\nthe video in a Variant Stream for an `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag.\n\nThe attribute value is expressed as a decimal-resolution (e.g., \"1920x1080\"). Although it\nis optional, including the RESOLUTION attribute is recommended when the Variant Stream contains video.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following RESOLUTION attributes:\n\n```txt\nRESOLUTION\n\nThe value is a decimal-resolution describing the optimal pixel\nresolution at which to display all the video in the Variant\nStream.\n\nThe RESOLUTION attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.\n```\n\nThese properties represent the width and height components of that resolution.","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the RESOLUTION attribute specifies the optimal pixel resolution at which to display all the video in a Variant Stream for an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/playlist_item.cr","line_number":125,"url":null},"def":{"name":"width","return_type":"Int32 | ::Nil","visibility":"Public","body":"@width"}},{"html_id":"width=(width:Int32|Nil)-instance-method","name":"width=","doc":"According to [RFC 8216, Section 4.3.4.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2),\nthe RESOLUTION attribute specifies the optimal pixel resolution at which to display all\nthe video in a Variant Stream for an `EXT-X-STREAM-INF` or `EXT-X-I-FRAME-STREAM-INF` tag.\n\nThe attribute value is expressed as a decimal-resolution (e.g., \"1920x1080\"). Although it\nis optional, including the RESOLUTION attribute is recommended when the Variant Stream contains video.\n\n[RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216) defines the following RESOLUTION attributes:\n\n```txt\nRESOLUTION\n\nThe value is a decimal-resolution describing the optimal pixel\nresolution at which to display all the video in the Variant\nStream.\n\nThe RESOLUTION attribute is OPTIONAL but is recommended if the\nVariant Stream includes video.\n```\n\nThese properties represent the width and height components of that resolution.","summary":"<p>According to <a href=\"https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.2\">RFC 8216, Section 4.3.4.2</a>, the RESOLUTION attribute specifies the optimal pixel resolution at which to display all the video in a Variant Stream for an <code>EXT-X-STREAM-INF</code> or <code>EXT-X-I-FRAME-STREAM-INF</code> tag.</p>","abstract":false,"args":[{"name":"width","external_name":"width","restriction":"Int32 | ::Nil"}],"args_string":"(width : Int32 | Nil)","args_html":"(width : Int32 | Nil)","location":{"filename":"src/m3u8/playlist_item.cr","line_number":125,"url":null},"def":{"name":"width=","args":[{"name":"width","external_name":"width","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@width = width"}}]},{"html_id":"m3u8/M3U8/SegmentItem","path":"M3U8/SegmentItem.html","kind":"class","full_name":"M3U8::SegmentItem","name":"SegmentItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/segment_item.cr","line_number":77,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`SegmentItem` represents a media segment in an HLS playlist.\n\nIt encapsulates the information provided by the `EXTINF` tag followed by the media segment URI.\n\nAccording to [RFC 8216, Section 4.3.2.1](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.1),\nThe `EXTINF` tag specifies the `duration` of a Media Segment and may include an\noptional title or `comment`.  It applies only to the next Media Segment.\n\nIts format is:\n\n```txt\n#EXTINF:<duration>,[<title>]\n```\n\nFor example:\n\n```txt\n#EXTINF:10.991,anything\n```\n\nThis indicates that the following media segment has a `duration` of 10.991 seconds\nwith an optional `comment` \"anything\".\n\nIn addition, a `SegmentItem` may optionally include:\n  - An `EXT-X-BYTERANGE` tag (`ByteRange`) that specifies a sub-range of the media resource. ([RFC 8216, Section 4.3.2.2](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.2))\n  - An `EXT-X-PROGRAM-DATE-TIME` tag (`Time` or `TimeItem`) that associates an absolute date and time\n    with the first sample of the following Media Segment. ([RFC 8216, Section 4.3.2.6](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.6))\n\nProperties:\n- **`duration`**: The duration of the segment as specified by the `EXTINF` tag.\n- **`segment`**:  The *URI* of the media segment.\n- **`comment`**:  An optional comment from the `EXTINF` tag.\n- **`byterange`**: A `ByteRange` object representing the sub-range of the segment, if specified.\n- **`program_date_time`**: A `TimeItem` object representing the absolute time associated with the segment.\n\nExamples:\n\nCreating a `SegmentItem` instance:\n\n```\noptions = {\n  duration:  10.991,\n  segment:   \"test.ts\",\n  comment:   \"anything\",\n  byterange: {length: 4500, start: 600},\n}\nSegmentItem.new(options)\n# => #<M3U8::SegmentItem:0x7e310e075cc0\n#     @byterange=#<M3U8::ByteRange:0x7e310f201c00 @length=4500, @start=600>,\n#     @comment=\"anything\",\n#     @duration=10.991,\n#     @program_date_time=#<M3U8::TimeItem:0x7e310e0761b0 @time=1970-01-01 00:00:00.0 UTC>,\n#     @segment=\"test.ts\">\n\nSegmentItem.new(10.991, \"test.ts\", \"anything\", \"4500@600\", \"2010-02-19T14:54:23.031Z\")\n# => #<M3U8::SegmentItem:0x7e6830943b40\n#     @byterange=#<M3U8::ByteRange:0x7e6831acf990 @length=4500, @start=600>,\n#     @comment=\"anything\",\n#     @duration=10.991,\n#     @program_date_time=#<M3U8::TimeItem:0x7e6830949cf0 @time=2010-02-19 14:54:23.031000000 UTC>,\n#     @segment=\"test.ts\">\n```\n\nConvert to a string representation of the `SegmentItem`:\n\n```\nSegmentItem.new(10.991, \"test.ts\", \"anything\", \"4500@600\", \"2010-02-19T14:54:23.031Z\").to_s\n# => \"#EXTINF:10.991,anything\\n\" +\n#    \"#EXT-X-BYTERANGE:4500@600\\n\" +\n#    \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\\n\" +\n#    \"test.ts\"\n```","summary":"<p><code><a href=\"../M3U8/SegmentItem.html\">SegmentItem</a></code> represents a media segment in an HLS playlist.</p>","constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `SegmentItem` from a NamedTuple.\n\nThe NamedTuple may include the following keys:\n  - `duration` (Float64): The duration of the segment.\n  - `segment` (String): The *URI* of the media segment.\n  - `comment` (String): A comment associated with the segment.\n  - `byterange` (`ByteRange`, NamedTuple, or String): The `byterange`, which can be provided as a NamedTuple, `ByteRange`, or string.\n  - `program_date_time` (`TimeItem`, `Time`, or String): The program date/time, which can be a `TimeItem`, Time, or [ISO8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) string.\n\nExample:\n\n```\noptions = {\n  duration:          10.991,\n  segment:           \"test.ts\",\n  comment:           \"anything\",\n  byterange:         {length: 4500, start: 600},\n  program_date_time: \"2010-02-19T14:54:23.031Z\",\n}\nSegmentItem.new(options)\n# => #<M3U8::SegmentItem:0x7e756d37b7c0\n#     @byterange=#<M3U8::ByteRange:0x7e756e5074b0 @length=4500, @start=600>,\n#     @comment=\"anything\",\n#     @duration=10.991,\n#     @program_date_time=#<M3U8::TimeItem:0x7e756d386c60 @time=2010-02-19 14:54:23.031000000 UTC>,\n#     @segment=\"test.ts\">\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/SegmentItem.html\">SegmentItem</a></code> from a NamedTuple.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/segment_item.cr","line_number":124,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(duration: params[:duration]?, segment: params[:segment]?, comment: params[:comment]?, byterange: params[:byterange]?, program_date_time: params[:program_date_time]?)"}},{"html_id":"new(duration:Float64|Nil=nil,segment:Nil|String=nil,comment:Nil|String=nil,byterange=nil,program_date_time=nil)-class-method","name":"new","doc":"Initializes a new `SegmentItem` instance.\n\nThe parameters are assigned to the corresponding properties. The `byterange` (`Byterange`) and\n`program_date_time` (`TimeItem`) parameters are parsed using their respective parsing methods,\nallowing them to be provided in different forms (e.g. as a NamedTuple, string, or object).\n\nExamples:\n\n```\nSegmentItem.new(10.991, \"test.ts\", \"anything\", \"4500@600\", \"2010-02-19T14:54:23.031Z\")\n# => #<M3U8::SegmentItem:0x7e6830943b40\n#     @byterange=#<M3U8::ByteRange:0x7e6831acf990 @length=4500, @start=600>,\n#     @comment=\"anything\",\n#     @duration=10.991,\n#     @program_date_time=#<M3U8::TimeItem:0x7e6830949cf0 @time=2010-02-19 14:54:23.031000000 UTC>,\n#     @segment=\"test.ts\">\n\nSegmentItem.new(\n  duration: 10.991,\n  segment: \"test.ts\",\n  comment: \"anything\",\n  byterange: {length: 4500, start: 600},\n  program_date_time: Time.parse_iso8601(\"2010-02-19T14:54:23.031Z\"),\n)\n# => #<M3U8::SegmentItem:0x7ffa96913700\n#     @byterange=#<M3U8::ByteRange:0x7ffa97a9f3f0 @length=4500, @start=600>,\n#     @comment=\"anything\",\n#     @duration=10.991,\n#     @program_date_time=#<M3U8::TimeItem:0x7ffa9691e7b0 @time=2010-02-19 14:54:23.031000000 UTC>,\n#     @segment=\"test.ts\">\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/SegmentItem.html\">SegmentItem</a></code> instance.</p>","abstract":false,"args":[{"name":"duration","default_value":"nil","external_name":"duration","restriction":"::Float64 | ::Nil"},{"name":"segment","default_value":"nil","external_name":"segment","restriction":"::Nil | ::String"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"::Nil | ::String"},{"name":"byterange","default_value":"nil","external_name":"byterange","restriction":""},{"name":"program_date_time","default_value":"nil","external_name":"program_date_time","restriction":""}],"args_string":"(duration : Float64 | Nil = nil, segment : Nil | String = nil, comment : Nil | String = nil, byterange = nil, program_date_time = nil)","args_html":"(duration : Float64 | Nil = <span class=\"n\">nil</span>, segment : Nil | String = <span class=\"n\">nil</span>, comment : Nil | String = <span class=\"n\">nil</span>, byterange = <span class=\"n\">nil</span>, program_date_time = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/segment_item.cr","line_number":165,"url":null},"def":{"name":"new","args":[{"name":"duration","default_value":"nil","external_name":"duration","restriction":"::Float64 | ::Nil"},{"name":"segment","default_value":"nil","external_name":"segment","restriction":"::Nil | ::String"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"::Nil | ::String"},{"name":"byterange","default_value":"nil","external_name":"byterange","restriction":""},{"name":"program_date_time","default_value":"nil","external_name":"program_date_time","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(duration, segment, comment, byterange, program_date_time)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"byterange:ByteRange-instance-method","name":"byterange","doc":"The `ByteRange` specifying a sub-section of the segment (if provided).","summary":"<p>The <code><a href=\"../M3U8/ByteRange.html\">ByteRange</a></code> specifying a sub-section of the segment (if provided).</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":94,"url":null},"def":{"name":"byterange","return_type":"ByteRange","visibility":"Public","body":"@byterange"}},{"html_id":"byterange=(byterange)-instance-method","name":"byterange=","doc":"Setter for the `byterange` property.\n\nAllows setting the byterange attribute using a `ByteRange` object, a NamedTuple, or a string.\nThe input is parsed using `ByteRange.parse`.\n\nExample:\n\n```\nitem = SegmentItem.new\nitem.byterange = ByteRange.new(length: 4500, start: 600)\nitem.byterange = {length: 4500, start: 600}\nitem.byterange = \"4500@600\"\n\nitem.byterange\n# => #<M3U8::ByteRange:0x784ba59ea7e0 @length=4500, @start=600>\n```","summary":"<p>Setter for the <code><a href=\"../M3U8/SegmentItem.html#byterange%3AByteRange-instance-method\">#byterange</a></code> property.</p>","abstract":false,"args":[{"name":"byterange","external_name":"byterange","restriction":""}],"args_string":"(byterange)","args_html":"(byterange)","location":{"filename":"src/m3u8/segment_item.cr","line_number":186,"url":null},"def":{"name":"byterange=","args":[{"name":"byterange","external_name":"byterange","restriction":""}],"visibility":"Public","body":"@byterange = ByteRange.parse(byterange)"}},{"html_id":"comment:String|Nil-instance-method","name":"comment","doc":"An optional comment from the `EXTINF` tag.","summary":"<p>An optional comment from the <code>EXTINF</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":93,"url":null},"def":{"name":"comment","return_type":"String | ::Nil","visibility":"Public","body":"@comment"}},{"html_id":"comment=(comment:String|Nil)-instance-method","name":"comment=","doc":"An optional comment from the `EXTINF` tag.","summary":"<p>An optional comment from the <code>EXTINF</code> tag.</p>","abstract":false,"args":[{"name":"comment","external_name":"comment","restriction":"String | ::Nil"}],"args_string":"(comment : String | Nil)","args_html":"(comment : String | Nil)","location":{"filename":"src/m3u8/segment_item.cr","line_number":93,"url":null},"def":{"name":"comment=","args":[{"name":"comment","external_name":"comment","restriction":"String | ::Nil"}],"visibility":"Public","body":"@comment = comment"}},{"html_id":"duration:Float64|Nil-instance-method","name":"duration","doc":"The required `duration` from the `EXTINF` tag.","summary":"<p>The required <code><a href=\"../M3U8/SegmentItem.html#duration%3AFloat64%7CNil-instance-method\">#duration</a></code> from the <code>EXTINF</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":91,"url":null},"def":{"name":"duration","return_type":"Float64 | ::Nil","visibility":"Public","body":"@duration"}},{"html_id":"duration=(duration:Float64|Nil)-instance-method","name":"duration=","doc":"The required `duration` from the `EXTINF` tag.","summary":"<p>The required <code><a href=\"../M3U8/SegmentItem.html#duration%3AFloat64%7CNil-instance-method\">#duration</a></code> from the <code>EXTINF</code> tag.</p>","abstract":false,"args":[{"name":"duration","external_name":"duration","restriction":"Float64 | ::Nil"}],"args_string":"(duration : Float64 | Nil)","args_html":"(duration : Float64 | Nil)","location":{"filename":"src/m3u8/segment_item.cr","line_number":91,"url":null},"def":{"name":"duration=","args":[{"name":"duration","external_name":"duration","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@duration = duration"}},{"html_id":"program_date_time:TimeItem-instance-method","name":"program_date_time","doc":"The program date/time (`TimeItem`) associated with the segment (if provided).","summary":"<p>The program date/time (<code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code>) associated with the segment (if provided).</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":95,"url":null},"def":{"name":"program_date_time","return_type":"TimeItem","visibility":"Public","body":"@program_date_time"}},{"html_id":"program_date_time=(time)-instance-method","name":"program_date_time=","doc":"Setter for the `program_date_time` property.\n\nAllows setting the `program_date_time` attribute using a `TimeItem`, `Time`, or [ISO-8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf) string.\nThe input is parsed using `TimeItem.parse`.\n\nExample:\n\n```\nitem = SegmentItem.new\nitem.program_date_time = TimeItem.new(\"2010-02-19T14:54:23Z\")\nitem.program_date_time = TimeItem.new(Time.iso8601(\"2010-02-19T14:54:23.031Z\"))\nitem.program_date_time = Time.parse_iso8601(\"2010-02-19T14:54:23.031Z\")\nitem.program_date_time = \"2010-02-19T14:54:23.031Z\"\n\nitem.program_date_time\n# => #<M3U8::TimeItem:0x7f5e17fedea0 @time=2010-02-19 14:54:23.031000000 UTC>\n```","summary":"<p>Setter for the <code><a href=\"../M3U8/SegmentItem.html#program_date_time%3ATimeItem-instance-method\">#program_date_time</a></code> property.</p>","abstract":false,"args":[{"name":"time","external_name":"time","restriction":""}],"args_string":"(time)","args_html":"(time)","location":{"filename":"src/m3u8/segment_item.cr","line_number":207,"url":null},"def":{"name":"program_date_time=","args":[{"name":"time","external_name":"time","restriction":""}],"visibility":"Public","body":"@program_date_time = TimeItem.parse(time)"}},{"html_id":"segment:String|Nil-instance-method","name":"segment","doc":"The *URI* of the media segment.","summary":"<p>The <em>URI</em> of the media segment.</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":92,"url":null},"def":{"name":"segment","return_type":"String | ::Nil","visibility":"Public","body":"@segment"}},{"html_id":"segment=(segment:String|Nil)-instance-method","name":"segment=","doc":"The *URI* of the media segment.","summary":"<p>The <em>URI</em> of the media segment.</p>","abstract":false,"args":[{"name":"segment","external_name":"segment","restriction":"String | ::Nil"}],"args_string":"(segment : String | Nil)","args_html":"(segment : String | Nil)","location":{"filename":"src/m3u8/segment_item.cr","line_number":92,"url":null},"def":{"name":"segment=","args":[{"name":"segment","external_name":"segment","restriction":"String | ::Nil"}],"visibility":"Public","body":"@segment = segment"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the segment, including the `EXTINF` tag,\nan optional `EXT-X-BYTERANGE` tag, an optional `EXT-X-PROGRAM-DATE-TIME` tag, and the segment URI.\n\nThe components are joined with newline characters.\n\nExample:\n\n```txt\noptions = {\n  duration:  10.991,\n  segment:   \"test.ts\",\n  comment:   \"anything\",\n  byterange: \"4500@600\",\n}\nSegmentItem.new(options).to_s\n# => \"#EXTINF:10.991,anything\\n\" +\n#    \"#EXT-X-BYTERANGE:4500@600\\n\" +\n#    \"test.ts\"\n\nSegmentItem.new(10.991, \"test.ts\", \"anything\", \"4500@600\", \"2010-02-19T14:54:23.031Z\").to_s\n# => \"#EXTINF:10.991,anything\\n\" +\n#    \"#EXT-X-BYTERANGE:4500@600\\n\" +\n#    \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\\n\" +\n#    \"test.ts\"\n```","summary":"<p>Returns the string representation of the segment, including the <code>EXTINF</code> tag, an optional <code>EXT-X-BYTERANGE</code> tag, an optional <code>EXT-X-PROGRAM-DATE-TIME</code> tag, and the segment URI.</p>","abstract":false,"location":{"filename":"src/m3u8/segment_item.cr","line_number":236,"url":null},"def":{"name":"to_s","visibility":"Public","body":"attributes.join('\\n')"}}]},{"html_id":"m3u8/M3U8/SessionDataItem","path":"M3U8/SessionDataItem.html","kind":"class","full_name":"M3U8::SessionDataItem","name":"SessionDataItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/session_data_item.cr","line_number":24,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`SessionDataItem` represents a set of attributes for the `EXT-X-SESSION-DATA` tag\nused in HLS playlists.\n\nThe `EXT-X-SESSION-DATA` tag (defined in [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4))\nis used to convey session-level metadata in an HLS Master Playlist. It can include various key-value\npairs such as the data identifier (*DATA-ID*), a human-readable value (*VALUE*), an optional URI\nto more detailed data (*URI*), and a language code (*LANGUAGE*).\n\nExample tags:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.lyrics\",URI=\"lyrics.json\"\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\"\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"es\",VALUE=\"Este es un ejemplo\"\n```\n\nAccording to [RFC 8216](https://datatracker.ietf.org/doc/html/rfc8216), each `EXT-X-SESSION-DATA`\ntag MUST contain either a *VALUE* or a *URI* attribute, but not both. This implementation, however,\nprovides the flexibility to bypass that check.\n\nThis class provides methods to parse such a tag from a text string, create a new instance using a\nNamedTuple of parameters, and output the tag as a properly formatted string.","summary":"<p><code><a href=\"../M3U8/SessionDataItem.html\">SessionDataItem</a></code> represents a set of attributes for the <code>EXT-X-SESSION-DATA</code> tag used in HLS playlists.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a text line representing an `EXT-X-SESSION-DATA` tag and returns a new `SessionDataItem`.\n\nThe tag line should include attributes such as *DATA-ID*, *VALUE*, *URI*, and *LANGUAGE*.\n\nExample:\n\n```\ntext = %(#EXT-X-SESSION-DATA:DATA-ID=\"com.example.lyrics\",URI=\"lyrics.json\")\nSessionDataItem.parse(text)\n# => #<M3U8::SessionDataItem:0x7874fd4a85a0\n#     @data_id=\"com.example.lyrics\",\n#     @language=nil,\n#     @uri=\"lyrics.json\",\n#     @value=nil>\n\ntext = %(#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\")\nSessionDataItem.parse(text)\n# => #<M3U8::SessionDataItem:0x7874fd4a8330\n#     @data_id=\"com.example.title\",\n#     @language=\"en\",\n#     @uri=nil,\n#     @value=\"This is an example\">\n\ntext = %(#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"es\",VALUE=\"Este es un ejemplo\")\nSessionDataItem.parse(text)\n# => #<M3U8::SessionDataItem:0x7874fd4a80c0\n#     @data_id=\"com.example.title\",\n#     @language=\"es\",\n#     @uri=nil,\n#     @value=\"Este es un ejemplo\">\n\ntext = %(#EXT-X-SESSION-DATA:DATA-ID=\"com.test.movie.title\",VALUE=\"Test\",URI=\"http://test\",LANGUAGE=\"en\")\nSessionDataItem.parse(text)\n# => #<M3U8::SessionDataItem:0x7874fd4b0ea0\n#     @data_id=\"com.test.movie.title\",\n#     @language=\"en\",\n#     @uri=\"http://test\",\n#     @value=\"Test\">\n```","summary":"<p>Parses a text line representing an <code>EXT-X-SESSION-DATA</code> tag and returns a new <code><a href=\"../M3U8/SessionDataItem.html\">SessionDataItem</a></code>.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":124,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(text)\nnew(data_id: attributes[\"DATA-ID\"]?, value: attributes[\"VALUE\"]?, uri: attributes[\"URI\"]?, language: attributes[\"LANGUAGE\"]?)\n"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `SessionDataItem` from a NamedTuple of parameters.\n\nThe NamedTuple can include the following keys:\n  - `data_id` (String): the unique identifier.\n  - `value` (String): the associated value.\n  - `uri` (String): the *URI* providing additional data.\n  - `language` (String): the language code.\n\nExample:\n\n```\noptions = {\n  data_id:  \"com.test.movie.title\",\n  value:    \"Test\",\n  uri:      \"http://test\",\n  language: \"en\",\n}\nSessionDataItem.new(options)\n# => #<M3U8::SessionDataItem:0x794e57f25c30\n#     @data_id=\"com.test.movie.title\",\n#     @language=\"en\",\n#     @uri=\"http://test\",\n#     @value=\"Test\">\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/SessionDataItem.html\">SessionDataItem</a></code> from a NamedTuple of parameters.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":158,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(data_id: params[:data_id]?, value: params[:value]?, uri: params[:uri]?, language: params[:language]?)"}},{"html_id":"new(data_id:Nil|String=nil,value:Nil|String=nil,uri:Nil|String=nil,language:Nil|String=nil)-class-method","name":"new","doc":"Initializes a new `SessionDataItem` instance with the given attributes.\n\nIf no parameters are provided, the instance properties default to `nil`.\n\nExample:\n\n```\nSessionDataItem.new\n# => #<M3U8::SessionDataItem:0x79dcf3b0f9c0\n#     @data_id=nil,\n#     @language=nil,\n#     @uri=nil,\n#     @value=nil>\n\nSessionDataItem.new(data_id: \"com.test.movie.title\", value: \"Test\", uri: \"http://test\", language: \"en\")\n# => #<M3U8::SessionDataItem:0x78ba0d6b4420\n#     @data_id=\"com.test.movie.title\",\n#     @language=\"en\",\n#     @uri=\"http://test\",\n#     @value=\"Test\">\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/SessionDataItem.html\">SessionDataItem</a></code> instance with the given attributes.</p>","abstract":false,"args":[{"name":"data_id","default_value":"nil","external_name":"data_id","restriction":"::Nil | ::String"},{"name":"value","default_value":"nil","external_name":"value","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"language","default_value":"nil","external_name":"language","restriction":"::Nil | ::String"}],"args_string":"(data_id : Nil | String = nil, value : Nil | String = nil, uri : Nil | String = nil, language : Nil | String = nil)","args_html":"(data_id : Nil | String = <span class=\"n\">nil</span>, value : Nil | String = <span class=\"n\">nil</span>, uri : Nil | String = <span class=\"n\">nil</span>, language : Nil | String = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":188,"url":null},"def":{"name":"new","args":[{"name":"data_id","default_value":"nil","external_name":"data_id","restriction":"::Nil | ::String"},{"name":"value","default_value":"nil","external_name":"value","restriction":"::Nil | ::String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"::Nil | ::String"},{"name":"language","default_value":"nil","external_name":"language","restriction":"::Nil | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(data_id, value, uri, language)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"data_id:String|Nil-instance-method","name":"data_id","doc":"The unique identifier for the session data.\n\nAccording to [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4), this attribute is required.\nThe value of *DATA-ID* is a quoted-string that identifies a\nparticular data value.  The *DATA-ID* should conform to a reverse\nDNS naming convention, such as \"com.example.movie.title\"; however,\nthere is no central registration authority, so Playlist authors\nshould take care to choose a value that is unlikely to collide\nwith others.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.test.movie.title\"\n```","summary":"<p>The unique identifier for the session data.</p>","abstract":false,"location":{"filename":"src/m3u8/session_data_item.cr","line_number":42,"url":null},"def":{"name":"data_id","return_type":"String | ::Nil","visibility":"Public","body":"@data_id"}},{"html_id":"data_id=(data_id:String|Nil)-instance-method","name":"data_id=","doc":"The unique identifier for the session data.\n\nAccording to [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4), this attribute is required.\nThe value of *DATA-ID* is a quoted-string that identifies a\nparticular data value.  The *DATA-ID* should conform to a reverse\nDNS naming convention, such as \"com.example.movie.title\"; however,\nthere is no central registration authority, so Playlist authors\nshould take care to choose a value that is unlikely to collide\nwith others.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.test.movie.title\"\n```","summary":"<p>The unique identifier for the session data.</p>","abstract":false,"args":[{"name":"data_id","external_name":"data_id","restriction":"String | ::Nil"}],"args_string":"(data_id : String | Nil)","args_html":"(data_id : String | Nil)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":42,"url":null},"def":{"name":"data_id=","args":[{"name":"data_id","external_name":"data_id","restriction":"String | ::Nil"}],"visibility":"Public","body":"@data_id = data_id"}},{"html_id":"language:String|Nil-instance-method","name":"language","doc":"An optional language code for the data.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\nthe value is a quoted-string containing a language tag [RFC5646](https://datatracker.ietf.org/doc/html/rfc5646)\nthat identifies the language of the *VALUE*.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\"\n```","summary":"<p>An optional language code for the data.</p>","abstract":false,"location":{"filename":"src/m3u8/session_data_item.cr","line_number":83,"url":null},"def":{"name":"language","return_type":"String | ::Nil","visibility":"Public","body":"@language"}},{"html_id":"language=(language:String|Nil)-instance-method","name":"language=","doc":"An optional language code for the data.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\nthe value is a quoted-string containing a language tag [RFC5646](https://datatracker.ietf.org/doc/html/rfc5646)\nthat identifies the language of the *VALUE*.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\"\n```","summary":"<p>An optional language code for the data.</p>","abstract":false,"args":[{"name":"language","external_name":"language","restriction":"String | ::Nil"}],"args_string":"(language : String | Nil)","args_html":"(language : String | Nil)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":83,"url":null},"def":{"name":"language=","args":[{"name":"language","external_name":"language","restriction":"String | ::Nil"}],"visibility":"Public","body":"@language = language"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-SESSION-DATA` tag.\n\nThe output is generated by joining the formatted attributes with commas,\nand then prefixing the result with `#EXT-X-SESSION-DATA:`.\n\nExample:\n\n```txt\noptions = {\n  data_id:  \"com.test.movie.title\",\n  value:    \"Test\",\n  uri:      \"http://test\",\n  language: \"en\",\n}\nSessionDataItem.new(options).to_s\n# => \"#EXT-X-SESSION-DATA:DATA-ID=\\\"com.test.movie.title\\\",VALUE=\\\"Test\\\",URI=\\\"http://test\\\",LANGUAGE=\\\"en\\\"\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-SESSION-DATA</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/session_data_item.cr","line_number":208,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-SESSION-DATA:#{attributes.join(',')}\""}},{"html_id":"uri:String|Nil-instance-method","name":"uri","doc":"An optional *URI* providing further details or related data.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\nthe value is a quoted-string containing a *URI*.  The resource\nidentified by the *URI* MUST be formatted as JSON [RFC7159](https://datatracker.ietf.org/doc/html/rfc5646);\notherwise, clients may fail to interpret the resource.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.lyrics\",URI=\"lyrics.json\"\n```","summary":"<p>An optional <em>URI</em> providing further details or related data.</p>","abstract":false,"location":{"filename":"src/m3u8/session_data_item.cr","line_number":70,"url":null},"def":{"name":"uri","return_type":"String | ::Nil","visibility":"Public","body":"@uri"}},{"html_id":"uri=(uri:String|Nil)-instance-method","name":"uri=","doc":"An optional *URI* providing further details or related data.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\nthe value is a quoted-string containing a *URI*.  The resource\nidentified by the *URI* MUST be formatted as JSON [RFC7159](https://datatracker.ietf.org/doc/html/rfc5646);\notherwise, clients may fail to interpret the resource.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.lyrics\",URI=\"lyrics.json\"\n```","summary":"<p>An optional <em>URI</em> providing further details or related data.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil)","args_html":"(uri : String | Nil)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":70,"url":null},"def":{"name":"uri=","args":[{"name":"uri","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"@uri = uri"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"The `value` associated with the data identifier `data_id`.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\n*VALUE* is a quoted-string.  It contains the data identified by\n*DATA-ID*.  If the *LANGUAGE* is specified, *VALUE* should contain a\nhuman-readable string written in the specified language.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\"\n```","summary":"<p>The <code><a href=\"../M3U8/SessionDataItem.html#value%3AString%7CNil-instance-method\">#value</a></code> associated with the data identifier <code><a href=\"../M3U8/SessionDataItem.html#data_id%3AString%7CNil-instance-method\">#data_id</a></code>.</p>","abstract":false,"location":{"filename":"src/m3u8/session_data_item.cr","line_number":56,"url":null},"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"The `value` associated with the data identifier `data_id`.\n\nIn [RFC 8216, Section 4.3.4.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.4),\n*VALUE* is a quoted-string.  It contains the data identified by\n*DATA-ID*.  If the *LANGUAGE* is specified, *VALUE* should contain a\nhuman-readable string written in the specified language.\n\nExample:\n\n```txt\n#EXT-X-SESSION-DATA:DATA-ID=\"com.example.title\",LANGUAGE=\"en\",VALUE=\"This is an example\"\n```","summary":"<p>The <code><a href=\"../M3U8/SessionDataItem.html#value%3AString%7CNil-instance-method\">#value</a></code> associated with the data identifier <code><a href=\"../M3U8/SessionDataItem.html#data_id%3AString%7CNil-instance-method\">#data_id</a></code>.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/m3u8/session_data_item.cr","line_number":56,"url":null},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}}]},{"html_id":"m3u8/M3U8/SessionKeyItem","path":"M3U8/SessionKeyItem.html","kind":"class","full_name":"M3U8::SessionKeyItem","name":"SessionKeyItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Encryptable","kind":"module","full_name":"M3U8::Encryptable","name":"Encryptable"},{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/session_key_item.cr","line_number":22,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/M3U8/Encryptable","kind":"module","full_name":"M3U8::Encryptable","name":"Encryptable"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`SessionKeyItem` represents a set of attributes for the `EXT-X-SESSION-KEY` tag,\nwhich is used in HTTP Live Streaming (HLS) to specify encryption keys that\napply to a session of Media Segments.\n\nAccording to [RFC 8216, Section 4.3.4.5](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.4.5),\nthe `EXT-X-SESSION-KEY` tag provides information such as the encryption *METHOD*,\nthe *URI* to obtain the key, the Initialization Vector *IV*, and optionally the\n*KEYFORMAT* and *KEYFORMATVERSIONS*.\n\nExample of an `EXT-X-SESSION-KEY` tag:\n\n```txt\n#EXT-X-SESSION-KEY:METHOD=AES-128,URI=\"http://test.key\",IV=D512BBF,KEYFORMAT=\"identity\",KEYFORMATVERSIONS=\"1/3\"\n```\n\nAll attributes defined for the `EXT-X-KEY` tag ([RFC 8216, Section 4.3.2.4](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.4)) are\nalso defined for the `EXT-X-SESSION-KEY`, except that the value of the\n*METHOD* attribute MUST NOT be NONE.\n\nThis class leverages the `Encryptable` module to parse and format these attributes.","summary":"<p><code><a href=\"../M3U8/SessionKeyItem.html\">SessionKeyItem</a></code> represents a set of attributes for the <code>EXT-X-SESSION-KEY</code> tag, which is used in HTTP Live Streaming (HLS) to specify encryption keys that apply to a session of Media Segments.</p>","class_methods":[{"html_id":"parse(text)-class-method","name":"parse","doc":"Parses a text string representing an `EXT-X-SESSION-KEY` tag and returns a new\n`SessionKeyItem` instance.\n\nIt extracts the attribute list from the tag line using `parse_attributes`\n(from the `M3U8::Concern` module), then converts the extracted values using\n`Encryptable.convert_key`.\n\nExample:\n\n```\ntext = %(#EXT-X-SESSION-KEY:METHOD=AES-128,URI=\"http://test.key\",IV=D512BBF,KEYFORMAT=\"identity\",KEYFORMATVERSIONS=\"1/3\")\nSessionKeyItem.parse(text)\n# => #<M3U8::SessionKeyItem:0x7e4a9ab264c0\n#     @iv=\"D512BBF\",\n#     @key_format=\"identity\",\n#     @key_format_versions=\"1/3\",\n#     @method=\"AES-128\",\n#     @uri=\"http://test.key\">\n```","summary":"<p>Parses a text string representing an <code>EXT-X-SESSION-KEY</code> tag and returns a new <code><a href=\"../M3U8/SessionKeyItem.html\">SessionKeyItem</a></code> instance.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""}],"args_string":"(text)","args_html":"(text)","location":{"filename":"src/m3u8/session_key_item.cr","line_number":45,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":""}],"visibility":"Public","body":"attributes = parse_attributes(text)\nnew(Encryptable.convert_key(attributes))\n"}}],"instance_methods":[{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-SESSION-KEY` tag.\n\nThe output is generated by concatenating the formatted encryption key\nattributes (provided by the `Encryptable` module) with the tag identifier.\n\nExample:\n\n```\noptions = {\n  method:              \"AES-128\",\n  uri:                 \"http://test.key\",\n  iv:                  \"D512BBF\",\n  key_format:          \"identity\",\n  key_format_versions: \"1/3\",\n}\nSessionKeyItem.new(options).to_s\n# => \"#EXT-X-SESSION-KEY:METHOD=AES-128,URI=\\\"http://test.key\\\",IV=D512BBF,KEYFORMAT=\\\"identity\\\",KEYFORMATVERSIONS=\\\"1/3\\\"\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-SESSION-KEY</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/session_key_item.cr","line_number":68,"url":null},"def":{"name":"to_s","visibility":"Public","body":"\"#EXT-X-SESSION-KEY:#{attributes_to_s}\""}}]},{"html_id":"m3u8/M3U8/TimeItem","path":"M3U8/TimeItem.html","kind":"class","full_name":"M3U8::TimeItem","name":"TimeItem","abstract":false,"superclass":{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"},{"html_id":"m3u8/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/m3u8/time_item.cr","line_number":63,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"extended_modules":[{"html_id":"m3u8/M3U8/Concern","kind":"module","full_name":"M3U8::Concern","name":"Concern"}],"namespace":{"html_id":"m3u8/M3U8","kind":"module","full_name":"M3U8","name":"M3U8"},"doc":"`TimeItem` represents an `EXT-X-PROGRAM-DATE-TIME` tag in an HLS playlist.\n\nThe `EXT-X-PROGRAM-DATE-TIME` tag (as defined in [RFC 8216, Section 4.3.2.6](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.6)) is used to\nassociate the first sample of a Media Segment with an absolute date and time. The time\nis formatted in [ISO 8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf), ensuring a consistent representation across clients.\n\nFor example:\n\n```\n# EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\n```\n\nThis class encapsulates a `Time` value and provides methods for parsing, formatting, and\nchecking whether a `TimeItem` is \"empty\" (i.e. represents the Unix epoch).\n\nExamples:\n\nParsing various inputs:\n```\n# Passing a TimeItem returns the same instance\nTimeItem.parse(TimeItem.new(\"2010-02-19T14:54:23Z\"))\n\n# Parsing a Time value directly\nTimeItem.parse(Time.iso8601(\"2010-02-19T14:54:23.031Z\"))\n\n# Parsing a time string in ISO8601 format\nTimeItem.parse(\"2010-02-19T14:54:23.031Z\")\n\n# Calling parse with no argument returns a default TimeItem (Unix epoch)\nTimeItem.parse\n```\n\nCreating a new `TimeItem`:\n```\nTimeItem.new(\"2010-02-19T14:54:23Z\")\n# => #<M3U8::TimeItem:0x10581b920 @time=2010-02-19 14:54:23 UTC>\n\nTimeItem.new(Time.iso8601(\"2010-02-19T14:54:23.031Z\"))\n# => #<M3U8::TimeItem:0x10581b920 @time=2010-02-19 14:54:23 UTC>\n\nTimeItem.new\n# => #<M3U8::TimeItem:0x10581b880 @time=1970-01-01 00:00:00 UTC>\n```\n\nChecking if a `TimeItem` is empty (i.e. represents the Unix epoch):\n```\nitem = TimeItem.new\nitem.empty? # => true\n\nitem = TimeItem.new(\"2010-02-19T14:54:23Z\")\nitem.empty? # => false\n```\n\nConverting a `TimeItem` to a string:\n```\nTimeItem.new(\"2010-02-19T14:54:23Z\").to_s\n# => \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\"\n\nTimeItem.new(Time.iso8601(\"2010-02-19T14:54:23.031Z\")).to_s\n# => \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\"\n```","summary":"<p><code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code> represents an <code>EXT-X-PROGRAM-DATE-TIME</code> tag in an HLS playlist.</p>","class_methods":[{"html_id":"parse(item=nil)-class-method","name":"parse","doc":"Parses an input item into a `TimeItem`.\n\nIf the input is already a `TimeItem`, it is returned as-is.\nOtherwise, it attempts to create a new `TimeItem` from the input.\n\nExamples:\n```\nTimeItem.parse(TimeItem.new(\"2010-02-19T14:54:23Z\"))\n# => #<M3U8::TimeItem:0x783c78510c60 @time=2010-02-19 14:54:23.0 UTC>\n\nTimeItem.parse(Time.iso8601(\"2010-02-19T14:54:23.031Z\"))\n# => #<M3U8::TimeItem:0x783c78517f00 @time=2010-02-19 14:54:23.031000000 UTC>\n\nTimeItem.parse(\"2010-02-19T14:54:23.031Z\")\n# => #<M3U8::TimeItem:0x783c78517de0 @time=2010-02-19 14:54:23.031000000 UTC>\n\nTimeItem.parse\n# => #<M3U8::TimeItem:0x783c78517cc0 @time=1970-01-01 00:00:00.0 UTC>\n```","summary":"<p>Parses an input item into a <code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code>.</p>","abstract":false,"args":[{"name":"item","default_value":"nil","external_name":"item","restriction":""}],"args_string":"(item = nil)","args_html":"(item = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/time_item.cr","line_number":89,"url":null},"def":{"name":"parse","args":[{"name":"item","default_value":"nil","external_name":"item","restriction":""}],"visibility":"Public","body":"case item\nwhen TimeItem\n  item\nelse\n  new(item)\nend"}}],"constructors":[{"html_id":"new(params:NamedTuple=NamedTuple.new)-class-method","name":"new","doc":"Constructs a new `TimeItem` using a NamedTuple with a `:time` key.\n\nExamples:\n```\nTimeItem.new({time: Time.iso8601(\"2010-02-19T14:54:23.031Z\")})\n# => #<M3U8::TimeItem:0x7e461bbd8ba0 @time=2010-02-19 14:54:23.031000000 UTC>\n\nTimeItem.new({time: Time.iso8601(\"2010-02-19T14:54:23.031Z\")})\n# => #<M3U8::TimeItem:0x7bb643931a80 @time=1970-01-01 00:00:00.0 UTC>\n```","summary":"<p>Constructs a new <code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code> using a NamedTuple with a <code>:time</code> key.</p>","abstract":false,"args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"args_string":"(params : NamedTuple = NamedTuple.new)","args_html":"(params : NamedTuple = <span class=\"t\">NamedTuple</span>.new)","location":{"filename":"src/m3u8/time_item.cr","line_number":106,"url":null},"def":{"name":"new","args":[{"name":"params","default_value":"NamedTuple.new","external_name":"params","restriction":"NamedTuple"}],"visibility":"Public","body":"new(time: params[:time]?)"}},{"html_id":"new(time=nil)-class-method","name":"new","doc":"Initializes a new `TimeItem`.\n\nIf no time is provided, it defaults to the Unix epoch (1970-01-01 00:00:00 UTC).\n\nExamples:\n```\nTimeItem.new(\"2010-02-19T14:54:23Z\")\n# => #<M3U8::TimeItem:0x79134e1fd960 @time=2010-02-19 14:54:23.0 UTC>\n\nTimeItem.new(Time.iso8601(\"2010-02-19T14:54:23.031Z\"))\n# => #<M3U8::TimeItem:0x79134e1fd840 @time=2010-02-19 14:54:23.031000000 UTC>\n\nTimeItem.new\n# => #<M3U8::TimeItem:0x79134e1fd720 @time=1970-01-01 00:00:00.0 UTC>\n```","summary":"<p>Initializes a new <code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code>.</p>","abstract":false,"args":[{"name":"time","default_value":"nil","external_name":"time","restriction":""}],"args_string":"(time = nil)","args_html":"(time = <span class=\"n\">nil</span>)","location":{"filename":"src/m3u8/time_item.cr","line_number":125,"url":null},"def":{"name":"new","args":[{"name":"time","default_value":"nil","external_name":"time","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(time)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"empty?-instance-method","name":"empty?","doc":"Returns true if the `TimeItem`'s time represents the Unix epoch.\n\nThis can be used to check whether the `TimeItem` has been set to a meaningful time.\n\nExamples:\n```\nitem = TimeItem.new\nitem.empty? # => true\n\nitem = TimeItem.new(\"2010-02-19T14:54:23Z\")\nitem.empty? # => false\n```","summary":"<p>Returns true if the <code><a href=\"../M3U8/TimeItem.html\">TimeItem</a></code>'s time represents the Unix epoch.</p>","abstract":false,"location":{"filename":"src/m3u8/time_item.cr","line_number":141,"url":null},"def":{"name":"empty?","visibility":"Public","body":"@time.to_unix.zero?"}},{"html_id":"time:Time-instance-method","name":"time","doc":"The `EXT-X-PROGRAM-DATE-TIME` tag associates the first sample of a\nMedia Segment with an absolute date and/or time.","summary":"<p>The <code>EXT-X-PROGRAM-DATE-TIME</code> tag associates the first sample of a Media Segment with an absolute date and/or time.</p>","abstract":false,"location":{"filename":"src/m3u8/time_item.cr","line_number":68,"url":null},"def":{"name":"time","return_type":"Time","visibility":"Public","body":"@time"}},{"html_id":"time=(time:Time)-instance-method","name":"time=","doc":"The `EXT-X-PROGRAM-DATE-TIME` tag associates the first sample of a\nMedia Segment with an absolute date and/or time.","summary":"<p>The <code>EXT-X-PROGRAM-DATE-TIME</code> tag associates the first sample of a Media Segment with an absolute date and/or time.</p>","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"}],"args_string":"(time : Time)","args_html":"(time : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/m3u8/time_item.cr","line_number":68,"url":null},"def":{"name":"time=","args":[{"name":"time","external_name":"time","restriction":"Time"}],"visibility":"Public","body":"@time = time"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns the string representation of the `EXT-X-PROGRAM-DATE-TIME` tag.\n\nThe output is generated by prefixing the\n[ISO 8601](https://xml.coverpages.org/ISO-FDIS-8601.pdf)-formatted time\nwith `#EXT-X-PROGRAM-DATE-TIME:`.\n\nExamples:\n```\nTimeItem.new(\"2010-02-19T14:54:23Z\").to_s\n# => \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23Z\"\n\nTimeItem.new(Time.iso8601(\"2010-02-19T14:54:23.031Z\")).to_s\n# => \"#EXT-X-PROGRAM-DATE-TIME:2010-02-19T14:54:23.031Z\"\n```","summary":"<p>Returns the string representation of the <code>EXT-X-PROGRAM-DATE-TIME</code> tag.</p>","abstract":false,"location":{"filename":"src/m3u8/time_item.cr","line_number":159,"url":null},"def":{"name":"to_s","visibility":"Public","body":"if empty?\n  return \"\"\nend\n\"#EXT-X-PROGRAM-DATE-TIME:#{time_format}\"\n"}}]}]},{"html_id":"m3u8/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"m3u8/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"m3u8/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"m3u8/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"m3u8/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"m3u8/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"m3u8/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/patch/time.cr","line_number":1,"url":null}],"repository_name":"m3u8","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"m3u8/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"m3u8/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"`Time` represents a date-time instant in\n[incremental time](https://www.w3.org/International/articles/definitions-time/#incremental_time)\nobserved in a specific time zone.\n\nThe calendaric calculations are based on the rules of the proleptic Gregorian\ncalendar as specified in [ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf).\nLeap seconds are ignored.\n\nInternally, the time is stored as an `Int64` representing seconds from epoch\n(`0001-01-01 00:00:00.0 UTC`) and an `Int32` representing\nnanosecond-of-second with value range `0..999_999_999`.\n\nThe supported date range is `0001-01-01 00:00:00.0` to\n`9999-12-31 23:59:59.999_999_999` in any local time zone.\n\n### Telling the Time\n\nThere are several methods to retrieve a `Time` instance representing the\ncurrent time:\n\n```\nTime.utc                                        # returns the current time in UTC\nTime.local Time::Location.load(\"Europe/Berlin\") # returns the current time in time zone Europe/Berlin\nTime.local                                      # returns the current time in current time zone\n```\n\nIt is generally recommended to keep instances in UTC and only apply a\nlocal time zone when formatting for user display, unless the domain logic\nrequires having a specific time zone (for example for calendaric operations).\n\n### Creating a Specific Instant\n\n`Time` instances representing a specific instant can be created by\n`.utc` or `.new` with the date-time specified as individual arguments:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.to_s # => \"2016-02-15 10:20:30 UTC\"\ntime = Time.local(2016, 2, 15, 10, 20, 30, location: Time::Location.load(\"Europe/Berlin\"))\ntime.to_s # => \"2016-02-15 10:20:30 +01:00\"\n# The time-of-day can be omitted and defaults to midnight (start of day):\ntime = Time.utc(2016, 2, 15)\ntime.to_s # => \"2016-02-15 00:00:00 UTC\"\n```\n\n### Retrieving Time Information\n\nEach `Time` instance allows querying calendar data:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.year        # => 2016\ntime.month       # => 2\ntime.day         # => 15\ntime.hour        # => 10\ntime.minute      # => 20\ntime.second      # => 30\ntime.millisecond # => 0\ntime.nanosecond  # => 0\ntime.day_of_week # => Time::DayOfWeek::Monday\ntime.day_of_year # => 46\ntime.monday?     # => true\ntime.time_of_day # => 10:20:30\n```\n\nFor querying if a time is at a specific day of week, `Time` offers named\npredicate methods, delegating to `#day_of_week`:\n\n```\ntime.monday? # => true\n# ...\ntime.sunday? # => false\n```\n\n### Time Zones\n\nEach time is attached to a specific time zone, represented by a `Location`\n(see `#location`).\n`#zone` returns the time zone observed in this location at the current time\n(i.e. the instant represented by this `Time`).\n`#offset` returns the offset of the current zone in seconds.\n\n```\ntime = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime          # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime.location # => #<Time::Location Europe/Berlin>\ntime.zone     # => #<Time::Location::Zone CET +01:00 (3600s) STD>\ntime.offset   # => 3600\n```\n\nUsing `.utc`, the location is `Time::Location::UTC`:\n\n```\ntime = Time.utc(2018, 3, 8, 22, 5, 13)\ntime          # => 2018-03-08 22:05:13.0 UTC\ntime.location # => #<Time::Location UTC>\ntime.zone     # => #<Time::Location::Zone UTC +00:00 (0s) STD>\ntime.offset   # => 0\n```\n\nA `Time` instance can be transformed to a different time zone while retaining\nthe same instant using `#in`:\n\n```\ntime_de = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime_ar = time_de.in Time::Location.load(\"America/Buenos_Aires\")\ntime_de # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime_ar # => 2018-03-08 18:05:13 -03:00 America/Buenos_Aires\n```\n\nBoth `Time` instances show a different local date-time, but they represent\nthe same date-time in the instant time-line, therefore they are considered\nequal:\n\n```\ntime_de.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_ar.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_de == time_ar # => true\n```\n\nThere are also two special methods for converting to UTC and local time zone:\n\n```\ntime.to_utc   # equals time.in(Location::UTC)\ntime.to_local # equals time.in(Location.local)\n```\n\n`#to_local_in` allows changing the time zone while keeping\nthe same local date-time (wall clock) which results in a different instant\non the time line.\n\n### Formatting and Parsing Time\n\nTo make date-time instances exchangeable between different computer systems\nor readable to humans, they are usually converted to and from a string\nrepresentation.\n\nThe method `#to_s` formats the date-time according to a specified pattern.\n\n```\ntime = Time.utc(2015, 10, 12, 10, 30, 0)\ntime.to_s(\"%Y-%m-%d %H:%M:%S %:z\") # => \"2015-10-12 10:30:00 +00:00\"\n```\n\nSimilarly, `Time.parse` and `Time.parse!` are used to construct a `Time` instance from date-time\ninformation in a string, according to a specified pattern:\n\n```\nTime.parse(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC)\nTime.parse!(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\")\n```\n\nSee `Time::Format` for all directives.\n\n### Calculations\n\n```\nTime.utc(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00 +00:00\n\nspan = Time.utc(2015, 10, 10) - Time.utc(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n```\n\n## Measuring Time\n\nThe typical time representation provided by the operating system is based on\na \"wall clock\" which is subject to changes for clock synchronization.\nThis can result in discontinuous jumps in the time-line making it not\nsuitable for accurately measuring elapsed time.\n\nInstances of `Time` are focused on telling time – using a \"wall clock\".\nWhen `Time.local` is called multiple times, the difference between the\nreturned instances is not guaranteed to equal to the time elapsed between\nmaking the calls; even the order of the returned `Time` instances might\nnot reflect invocation order.\n\n```\nt1 = Time.utc\n# operation that takes 1 minute\nt2 = Time.utc\nt2 - t1 # => ?\n```\n\nThe resulting `Time::Span` could be anything, even negative, if the\ncomputer's wall clock has changed between both calls.\n\nAs an alternative, the operating system also provides a monotonic clock.\nIts time-line has no specified starting point but is strictly linearly\nincreasing.\n\nThis monotonic clock should always be used for measuring elapsed time.\n\nA reading from this clock can be taken using `.monotonic`:\n\n```\nt1 = Time.monotonic\n# operation that takes 1 minute\nt2 = Time.monotonic\nt2 - t1 # => 1.minute (approximately)\n```\n\nThe execution time of a block can be measured using `.measure`:\n\n```\nelapsed_time = Time.measure do\n  # operation that takes 20 milliseconds\nend\nelapsed_time # => 20.milliseconds (approximately)\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents a date-time instant in <a href=\"https://www.w3.org/International/articles/definitions-time/#incremental_time\">incremental time</a> observed in a specific time zone.</p>","class_methods":[{"html_id":"iso8601(time:String)-class-method","name":"iso8601","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"String"}],"args_string":"(time : String)","args_html":"(time : String)","location":{"filename":"src/patch/time.cr","line_number":7,"url":null},"def":{"name":"iso8601","args":[{"name":"time","external_name":"time","restriction":"String"}],"visibility":"Public","body":"begin\n  (parse!(time, \"%FT%T.%L%z\")).to_utc\nrescue\n  (parse!(time, \"%FT%T%z\")).to_utc\nend"}}],"instance_methods":[{"html_id":"iso8601(count=0)-instance-method","name":"iso8601","abstract":false,"args":[{"name":"count","default_value":"0","external_name":"count","restriction":""}],"args_string":"(count = 0)","args_html":"(count = <span class=\"n\">0</span>)","location":{"filename":"src/patch/time.cr","line_number":2,"url":null},"def":{"name":"iso8601","args":[{"name":"count","default_value":"0","external_name":"count","restriction":""}],"visibility":"Public","body":"format = (millisecond == 0) ? \"%FT%TZ\" : \"%FT%T.%LZ\"\nto_s(format)\n"}}]}]}}